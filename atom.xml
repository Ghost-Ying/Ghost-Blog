<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>爱影客</title>
  
  
  <link href="https://aiyingke.cn/atom.xml" rel="self"/>
  
  <link href="https://aiyingke.cn/"/>
  <updated>2022-12-18T08:58:42.434Z</updated>
  <id>https://aiyingke.cn/</id>
  
  <author>
    <name>Rupert-Tears</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MapReduce Shuffle机制</title>
    <link href="https://aiyingke.cn/blog/6b6718d7.html/"/>
    <id>https://aiyingke.cn/blog/6b6718d7.html/</id>
    <published>2022-12-18T08:51:03.000Z</published>
    <updated>2022-12-18T08:58:42.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：Shuffle-机制"><a href="#一：Shuffle-机制" class="headerlink" title="一：Shuffle 机制"></a>一：Shuffle 机制</h1><ul><li>Map 方法之后，Reduce 方法之前的数据处理过程称之为 Shuffle。</li></ul><p><img src="/blog/6b6718d7.html/image-20221218165425041.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：Shuffle-机制&quot;&gt;&lt;a href=&quot;#一：Shuffle-机制&quot; class=&quot;headerlink&quot; title=&quot;一：Shuffle 机制&quot;&gt;&lt;/a&gt;一：Shuffle 机制&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Map 方法之后，Reduce 方法之前的数据处</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce 工作流程</title>
    <link href="https://aiyingke.cn/blog/d1b2c594.html/"/>
    <id>https://aiyingke.cn/blog/d1b2c594.html/</id>
    <published>2022-12-18T07:31:04.000Z</published>
    <updated>2022-12-18T07:45:45.573Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：MapReduce详细工作流程图"><a href="#一：MapReduce详细工作流程图" class="headerlink" title="一：MapReduce详细工作流程图"></a>一：MapReduce详细工作流程图</h1><p><img src="/blog/d1b2c594.html/image-20221218153651886.png"></p><p><img src="/blog/d1b2c594.html/image-20221218154214498.png"></p><p>上面的流程是整个 MapReduce 最全工作流程，但是 Shuffle 过程只是从第 7 步开始到第 16 步结束，具体 Shuffle 过程详解，如下：</p><p>（1）MapTask 收集我们的 map()方法输出的 kv 对，放到内存缓冲区中</p><p>（2）从内存缓冲区不断溢出本地磁盘文件，可能会溢出多个文件</p><p>（3）多个溢出文件会被合并成大的溢出文件</p><p>（4）在溢出过程及合并的过程中，都要调用 Partitioner 进行分区和针对 key 进行排序</p><p>（5）ReduceTask 根据自己的分区号，去各个 MapTask 机器上取相应的结果分区数据</p><p>（6）ReduceTask 会抓取到同一个分区的来自不同 MapTask 的结果文件，ReduceTask 会将这些文件再进行合并（归并排序）</p><p>（7）合并成大文件后，Shuffle 的过程也就结束了，后面进入 ReduceTask 的逻辑运算过程（从文件中取出一个一个的键值对 Group，调用用户自定义的 reduce()方法）</p><p><strong>注意：</strong> </p><ul><li>（1）Shuffle 中的缓冲区大小会影响到 MapReduce 程序的执行效率，原则上说，缓冲区 越大，磁盘 io 的次数越少，执行速度就越快。 </li><li>（2）缓冲区的大小可以通过参数调整，参数：mapreduce.task.io.sort.mb 默认 100M。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：MapReduce详细工作流程图&quot;&gt;&lt;a href=&quot;#一：MapReduce详细工作流程图&quot; class=&quot;headerlink&quot; title=&quot;一：MapReduce详细工作流程图&quot;&gt;&lt;/a&gt;一：MapReduce详细工作流程图&lt;/h1&gt;&lt;p&gt;&lt;img s</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce 切片原理</title>
    <link href="https://aiyingke.cn/blog/f5d61b06.html/"/>
    <id>https://aiyingke.cn/blog/f5d61b06.html/</id>
    <published>2022-12-18T05:31:55.000Z</published>
    <updated>2022-12-18T06:56:09.638Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：MapReduce-框架原理"><a href="#一：MapReduce-框架原理" class="headerlink" title="一：MapReduce 框架原理"></a>一：MapReduce 框架原理</h1><p><img src="/blog/f5d61b06.html/image-20221218140443270.png"></p><h1 id="二：切片与-MapTask-并行度决定机制"><a href="#二：切片与-MapTask-并行度决定机制" class="headerlink" title="二：切片与 MapTask 并行度决定机制"></a>二：切片与 MapTask 并行度决定机制</h1><h2 id="2-1-问题引出"><a href="#2-1-问题引出" class="headerlink" title="2.1 问题引出"></a>2.1 问题引出</h2><ul><li>MapTask 的并行度决定 Map 阶段的任务处理并发度，进而影响到整个 Job 的处理速度。</li><li>1G 的数据，启动 8 个 MapTask，可以提高集群的并发处理能力。那么 1K 的数 据，也启动 8 个 MapTask，会提高集群性能吗？MapTask 并行任务是否越多越好呢？哪些因 素影响了 MapTask 并行度？</li></ul><h2 id="2-2-MapTask-并行度决定机制"><a href="#2-2-MapTask-并行度决定机制" class="headerlink" title="2.2 MapTask 并行度决定机制"></a>2.2 MapTask 并行度决定机制</h2><ul><li>数据块：Block 是 HDFS 物理上把数据分成一块一块。数据块是 HDFS 存储数据单位。</li><li>数据切片：数据切片只是在逻辑上对输入进行分片，并不会在磁盘上将其切分成片进行 存储。数据切片是 MapReduce 程序计算输入数据的单位，一个切片会对应启动一个 MapTask。</li></ul><h2 id="2-3-数据切片与MapTask并行度决定机制"><a href="#2-3-数据切片与MapTask并行度决定机制" class="headerlink" title="2.3 数据切片与MapTask并行度决定机制"></a>2.3 数据切片与MapTask并行度决定机制</h2><p><img src="/blog/f5d61b06.html/image-20221218140847097.png"></p><h1 id="三：Job-提交流程源码和切片源码详解"><a href="#三：Job-提交流程源码和切片源码详解" class="headerlink" title="三：Job 提交流程源码和切片源码详解"></a>三：Job 提交流程源码和切片源码详解</h1><h2 id="3-1-Job-提交流程源码详解"><a href="#3-1-Job-提交流程源码详解" class="headerlink" title="3.1 Job 提交流程源码详解"></a>3.1 Job 提交流程源码详解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">waitForCompletion()</span><br><span class="line">submit();</span><br><span class="line"><span class="comment">// 1 建立连接</span></span><br><span class="line">connect();</span><br><span class="line"><span class="comment">// 1）创建提交 Job 的代理</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Cluster</span>(getConfiguration());</span><br><span class="line"><span class="comment">// （1）判断是本地运行环境还是 yarn 集群运行环境</span></span><br><span class="line">initialize(jobTrackAddr, conf); </span><br><span class="line"><span class="comment">// 2 提交 job</span></span><br><span class="line">submitter.submitJobInternal(Job.<span class="built_in">this</span>, cluster)</span><br><span class="line"><span class="comment">// 1）创建给集群提交数据的 Stag 路径</span></span><br><span class="line"><span class="type">Path</span> <span class="variable">jobStagingArea</span> <span class="operator">=</span> JobSubmissionFiles.getStagingDir(cluster, conf);</span><br><span class="line"><span class="comment">// 2）获取 jobid ，并创建 Job 路径</span></span><br><span class="line"><span class="type">JobID</span> <span class="variable">jobId</span> <span class="operator">=</span> submitClient.getNewJobID();</span><br><span class="line"><span class="comment">// 3）拷贝 jar 包到集群</span></span><br><span class="line">copyAndConfigureFiles(job, submitJobDir);</span><br><span class="line">rUploader.uploadFiles(job, jobSubmitDir);</span><br><span class="line"><span class="comment">// 4）计算切片，生成切片规划文件</span></span><br><span class="line">writeSplits(job, submitJobDir);</span><br><span class="line">maps = writeNewSplits(job, jobSubmitDir);</span><br><span class="line">input.getSplits(job);</span><br><span class="line"><span class="comment">// 5）向 Stag 路径写 XML 配置文件</span></span><br><span class="line">writeConf(conf, submitJobFile);</span><br><span class="line">conf.writeXml(out);</span><br><span class="line"><span class="comment">// 6）提交 Job,返回提交状态</span></span><br><span class="line">status = submitClient.submitJob(jobId, submitJobDir.toString(),</span><br><span class="line">waitForCompletion()</span><br><span class="line">submit();</span><br><span class="line"><span class="comment">// 1 建立连接</span></span><br><span class="line">connect();</span><br><span class="line"><span class="comment">// 1）创建提交 Job 的代理</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Cluster</span>(getConfiguration());</span><br><span class="line"><span class="comment">// （1）判断是本地运行环境还是 yarn 集群运行环境</span></span><br><span class="line">initialize(jobTrackAddr, conf); </span><br><span class="line"><span class="comment">// 2 提交 job</span></span><br><span class="line">submitter.submitJobInternal(Job.<span class="built_in">this</span>, cluster)</span><br><span class="line"><span class="comment">// 1）创建给集群提交数据的 Stag 路径</span></span><br><span class="line"><span class="type">Path</span> <span class="variable">jobStagingArea</span> <span class="operator">=</span> JobSubmissionFiles.getStagingDir(cluster, conf);</span><br><span class="line"><span class="comment">// 2）获取 jobid ，并创建 Job 路径</span></span><br><span class="line"><span class="type">JobID</span> <span class="variable">jobId</span> <span class="operator">=</span> submitClient.getNewJobID();</span><br><span class="line"><span class="comment">// 3）拷贝 jar 包到集群</span></span><br><span class="line">copyAndConfigureFiles(job, submitJobDir);</span><br><span class="line">rUploader.uploadFiles(job, jobSubmitDir);</span><br><span class="line"><span class="comment">// 4）计算切片，生成切片规划文件</span></span><br><span class="line">writeSplits(job, submitJobDir);</span><br><span class="line">maps = writeNewSplits(job, jobSubmitDir);</span><br><span class="line">input.getSplits(job);</span><br><span class="line"><span class="comment">// 5）向 Stag 路径写 XML 配置文件</span></span><br><span class="line">writeConf(conf, submitJobFile);</span><br><span class="line">conf.writeXml(out);</span><br><span class="line"><span class="comment">// 6）提交 Job,返回提交状态</span></span><br><span class="line">status = submitClient.submitJob(jobId, submitJobDir.toString(),</span><br></pre></td></tr></table></figure><h2 id="3-2-Job提交流程源码解析"><a href="#3-2-Job提交流程源码解析" class="headerlink" title="3.2 Job提交流程源码解析"></a>3.2 Job提交流程源码解析</h2><p><img src="/blog/f5d61b06.html/image-20221218141342346.png"></p><h2 id="3-3-FileInputFormat-切片源码解析（input-getSplits-job-）"><a href="#3-3-FileInputFormat-切片源码解析（input-getSplits-job-）" class="headerlink" title="3.3 FileInputFormat 切片源码解析（input.getSplits(job)）"></a>3.3 FileInputFormat 切片源码解析（input.getSplits(job)）</h2><ul><li>（1）程序先找到你数据存储的目录。</li><li>（2）开始遍历处理（规划切片）目录下的每一个文件 </li><li>（3）遍历第一个文件data1.txt <ul><li>a）获取文件大小fs.sizeOf(data.txt) </li><li>b）计算切片大小 computeSplitSize(Math.max(minSize,Math.min(maxSize,blocksize)))&#x3D;blocksize&#x3D;128M </li><li>c）默认情况下，切片大小&#x3D;blocksize </li><li>d）开始切，形成第1个切片：data.txt—0:128M 第2个切片data.txt—128:256M 第3个切片data.txt—256M:300M （每次切片时，都要判断切完剩下的部分是否大于块的1.1倍，不大于1.1倍就划分一块切片） </li><li>e）将切片信息写到一个切片规划文件中 </li><li>f）整个切片的核心过程在getSplit()方法中完成 </li><li>g）InputSplit只记录了切片的元数据信息，比如起始位置、长度以及所在的节点列表等。</li></ul></li><li>（4）提交切片规划文件到YARN上，YARN上的MrAppMaster就可以根据切片规划文件计算开启MapTask个数。</li></ul><h1 id="四：FileInputFormat-切片机制"><a href="#四：FileInputFormat-切片机制" class="headerlink" title="四：FileInputFormat 切片机制"></a>四：FileInputFormat 切片机制</h1><h2 id="4-1-FileInputFormat切片机制"><a href="#4-1-FileInputFormat切片机制" class="headerlink" title="4.1 FileInputFormat切片机制"></a>4.1 FileInputFormat切片机制</h2><p>（1）简单地按照文件的内容长度进行切片</p><p>（2）切片大小，默认等于Block大小</p><p>（3）切片时不考虑数据集整体，而是逐个针对每一个文件单独切片</p><h2 id="4-2-案例分析"><a href="#4-2-案例分析" class="headerlink" title="4.2 案例分析"></a>4.2 案例分析</h2><p>（1）输入数据有两个文件：</p><ul><li>file1.txt 320M </li><li>file2.txt 10M</li></ul><p>（2）经过FileInputFormat的切片机制 运算后，形成的切片信息如下：</p><ul><li>file1.txt.split1– 0~128</li><li>file1.txt.split2– 128~256</li><li>file1.txt.split3– 256~320</li><li>file2.txt.split1– 0~10M</li></ul><h2 id="4-3-FileInputFormat切片大小的参数配置"><a href="#4-3-FileInputFormat切片大小的参数配置" class="headerlink" title="4.3 FileInputFormat切片大小的参数配置"></a>4.3 FileInputFormat切片大小的参数配置</h2><h3 id="（1）源码中计算切片大小的公式"><a href="#（1）源码中计算切片大小的公式" class="headerlink" title="（1）源码中计算切片大小的公式"></a>（1）源码中计算切片大小的公式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Math.max(minSize, Math.min(maxSize, blockSize));</span><br><span class="line">mapreduce.input.fileinputformat.split.minsize=<span class="number">1</span> 默认值为<span class="number">1</span></span><br><span class="line">mapreduce.input.fileinputformat.split.maxsize= Long.MAXValue 默认值Long.MAXValue</span><br><span class="line">因此，默认情况下，切片大小=blocksize。</span><br></pre></td></tr></table></figure><h3 id="（2）切片大小设置"><a href="#（2）切片大小设置" class="headerlink" title="（2）切片大小设置"></a>（2）切片大小设置</h3><ul><li>maxsize（切片最大值）：参数如果调得比blockSize小，则会让切片变小，而且就等于配置的这个参数的值。 </li><li>minsize（切片最小值）：参数调的比blockSize大，则可以让切片变得比blockSize还大。</li></ul><h3 id="（3）获取切片信息API"><a href="#（3）获取切片信息API" class="headerlink" title="（3）获取切片信息API"></a>（3）获取切片信息API</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取切片的文件名称</span></span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> inputSplit.getPath().getName();</span><br><span class="line"><span class="comment">// 根据文件类型获取切片信息</span></span><br><span class="line"><span class="type">FileSplit</span> <span class="variable">inputSplit</span> <span class="operator">=</span> (FileSplit) context.getInputSplit();</span><br></pre></td></tr></table></figure><h1 id="五：TextInputFormat"><a href="#五：TextInputFormat" class="headerlink" title="五：TextInputFormat"></a>五：TextInputFormat</h1><h2 id="5-1-FileInputFormat-实现类"><a href="#5-1-FileInputFormat-实现类" class="headerlink" title="5.1 FileInputFormat 实现类"></a>5.1 FileInputFormat 实现类</h2><ul><li>思考：在运行 MapReduce 程序时，输入的文件格式包括：基于行的日志文件、二进制 格式文件、数据库表等。那么，针对不同的数据类型，MapReduce 是如何读取这些数据的呢？</li><li>FileInputFormat 常见的接口实现类包括：TextInputFormat、KeyValueTextInputFormat、 NLineInputFormat、CombineTextInputFormat 和自定义 InputFormat 等。</li></ul><h2 id="5-2-TextInputFormat"><a href="#5-2-TextInputFormat" class="headerlink" title="5.2 TextInputFormat"></a>5.2 TextInputFormat</h2><ul><li><p>TextInputFormat 是默认的 FileInputFormat 实现类。按行读取每条记录。键是存储该行在整个文件中的起始字节偏移量， LongWritable 类型。值是这行的内容，不包括任何行终止 符（换行符和回车符），Text 类型。</p></li><li><p>以下是一个示例，比如，一个分片包含了如下 4 条文本记录。</p></li><li><p>&#96;&#96;&#96;java<br>Rich learning form<br>Intelligent learning engine<br>Learning more convenient<br>From the real demand for more close to the enterprise</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 每条记录表示为以下键/值对：</span><br><span class="line"></span><br><span class="line">- ```java</span><br><span class="line">  (0,Rich learning form)</span><br><span class="line">  (20,Intelligent learning engine)</span><br><span class="line">  (49,Learning more convenient)</span><br><span class="line">  (74,From the real demand for more close to the enterprise)</span><br></pre></td></tr></table></figure></li></ul><h1 id="六：CombineTextInputFormat-切片机制"><a href="#六：CombineTextInputFormat-切片机制" class="headerlink" title="六：CombineTextInputFormat 切片机制"></a>六：CombineTextInputFormat 切片机制</h1><p>框架默认的 TextInputFormat 切片机制是对任务按文件规划切片，不管文件多小，都会 是一个单独的切片，都会交给一个 MapTask，这样如果有大量小文件，就会产生大量的 MapTask，处理效率极其低下。</p><h2 id="6-1-应用场景"><a href="#6-1-应用场景" class="headerlink" title="6.1 应用场景"></a>6.1 应用场景</h2><p>CombineTextInputFormat 用于小文件过多的场景，它可以将多个小文件从逻辑上规划到 一个切片中，这样，多个小文件就可以交给一个 MapTask 处理。</p><h2 id="6-2-虚拟存储切片最大值设置"><a href="#6-2-虚拟存储切片最大值设置" class="headerlink" title="6.2 虚拟存储切片最大值设置"></a>6.2 虚拟存储切片最大值设置</h2><ul><li>CombineTextInputFormat.setMaxInputSplitSize(job, 4194304);&#x2F;&#x2F; 4m </li><li>注意：虚拟存储切片最大值设置最好根据实际的小文件大小情况来设置具体的值。</li></ul><h2 id="6-3-切片机制"><a href="#6-3-切片机制" class="headerlink" title="6.3 切片机制"></a>6.3 切片机制</h2><p>生成切片过程包括：虚拟存储过程和切片过程二部分。</p><p>CombineTextInputFormat切片机制：</p><p><img src="/blog/f5d61b06.html/image-20221218143247678.png"></p><h3 id="（1）虚拟存储过程"><a href="#（1）虚拟存储过程" class="headerlink" title="（1）虚拟存储过程"></a>（1）虚拟存储过程</h3><ul><li>将输入目录下所有文件大小，依次和设置的 setMaxInputSplitSize 值比较，如果不大于设置的最大值，逻辑上划分一个块。</li><li>如果输入文件大于设置的最大值且大于两倍， 那么以最大值切割一块；当剩余数据大小超过设置的最大值且不大于最大值 2 倍，此时 将文件均分成 2 个虚拟存储块（防止出现太小切片）。 <ul><li>例如 setMaxInputSplitSize 值为 4M，输入文件大小为 8.02M，则先逻辑上分成一个 4M。剩余的大小为 4.02M，如果按照 4M 逻辑划分，就会出现 0.02M 的小的虚拟存储 文件，所以将剩余的 4.02M 文件切分成（2.01M 和 2.01M）两个文件。</li></ul></li></ul><h3 id="（2）切片过程"><a href="#（2）切片过程" class="headerlink" title="（2）切片过程"></a>（2）切片过程</h3><ul><li>判断虚拟存储的文件大小是否大于 setMaxInputSplitSize 值，大于等于则单独 形成一个切片。</li><li>如果不大于则跟下一个虚拟存储文件进行合并，共同形成一个切片。</li><li>测试举例<ul><li>有 4 个小文件大小分别为 1.7M、5.1M、3.4M 以及 6.8M 这四个小 文件，则虚拟存储之后形成 6 个文件块，大小分别为：<ul><li>1.7M，（2.55M、2.55M）、3.4M 以及（3.4M、3.4M）</li></ul></li><li>最终会形成 3 个切片，大小分别为：<ul><li>（1.7+2.55）M，（2.55+3.4）M，（3.4+3.4）M</li></ul></li></ul></li></ul><h1 id="七：CombineTextInputFormat-案例实操"><a href="#七：CombineTextInputFormat-案例实操" class="headerlink" title="七：CombineTextInputFormat 案例实操"></a>七：CombineTextInputFormat 案例实操</h1><h2 id="7-1-需求"><a href="#7-1-需求" class="headerlink" title="7.1 需求"></a>7.1 需求</h2><p>将输入的大量小文件合并成一个切片统一处理。</p><h3 id="（1）输入数据"><a href="#（1）输入数据" class="headerlink" title="（1）输入数据"></a>（1）输入数据</h3><ul><li>准备 4 个小文件</li></ul><h3 id="（2）期望"><a href="#（2）期望" class="headerlink" title="（2）期望"></a>（2）期望</h3><ul><li>期望一个切片处理 4 个文件</li></ul><h2 id="7-2-需求分析"><a href="#7-2-需求分析" class="headerlink" title="7.2 需求分析"></a>7.2 需求分析</h2><p>通过设置切片方式为 CombineTextInputFormat，并设置切片大小，将多个小文件进行合并，然后处理。</p><h2 id="7-3-代码实现"><a href="#7-3-代码实现" class="headerlink" title="7.3 代码实现"></a>7.3 代码实现</h2><p>（1）不做任何处理，采用默认的 FileInputFormat切片方式，观察切片个数为 4。</p><ul><li>通过日志观察到：number of splits:4</li></ul><p>（2）设置切片方式为 CombineTextInputFormat </p><ul><li><p>在驱动器中添加如下代码</p></li><li><pre><code class="java">// 如果不设置 InputFormat，它默认用的是 TextInputFormat.classjob.setInputFormatClass(CombineTextInputFormat.class);//虚拟存储切片最大值设置 4mCombineTextInputFormat.setMaxInputSplitSize(job, 4194304);</code></pre></li><li><p>此时观察日志：number of splits:1</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：MapReduce-框架原理&quot;&gt;&lt;a href=&quot;#一：MapReduce-框架原理&quot; class=&quot;headerlink&quot; title=&quot;一：MapReduce 框架原理&quot;&gt;&lt;/a&gt;一：MapReduce 框架原理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/blo</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop 序列化</title>
    <link href="https://aiyingke.cn/blog/926ade3a.html/"/>
    <id>https://aiyingke.cn/blog/926ade3a.html/</id>
    <published>2022-12-17T13:22:40.000Z</published>
    <updated>2022-12-17T14:34:36.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：序列化概述"><a href="#一：序列化概述" class="headerlink" title="一：序列化概述"></a>一：序列化概述</h1><h2 id="1-1-什么是序列化？"><a href="#1-1-什么是序列化？" class="headerlink" title="1.1 什么是序列化？"></a>1.1 什么是序列化？</h2><ul><li>序列化就是把内存中的对象，转换成字节序列（或其他数据传输协议）以便于存储到磁 盘（持久化）和网络传输。</li><li>反序列化就是将收到字节序列（或其他数据传输协议）或者是磁盘的持久化数据，转换 成内存中的对象。</li></ul><h2 id="1-2-为什么要序列化？"><a href="#1-2-为什么要序列化？" class="headerlink" title="1.2 为什么要序列化？"></a>1.2 为什么要序列化？</h2><p>一般来说，“活的”对象只生存在内存里，关机断电就没有了。而且“活的”对象只能 由本地的进程使用，不能被发送到网络上的另外一台计算机。 然而序列化可以存储“活的” 对象，可以将“活的”对象发送到远程计算机。</p><h2 id="1-3-为什么不用-Java-的序列化？"><a href="#1-3-为什么不用-Java-的序列化？" class="headerlink" title="1.3 为什么不用 Java 的序列化？"></a>1.3 为什么不用 Java 的序列化？</h2><p>Java 的序列化是一个重量级序列化框架（Serializable），一个对象被序列化后，会附带 很多额外的信息（各种校验信息，Header，继承体系等），不便于在网络中高效传输。所以， Hadoop 自己开发了一套序列化机制（Writable）。</p><h2 id="1-4-Hadoop-序列化特点"><a href="#1-4-Hadoop-序列化特点" class="headerlink" title="1.4 Hadoop 序列化特点"></a>1.4 Hadoop 序列化特点</h2><p>（1）紧凑 ：高效使用存储空间。</p><p>（2）快速：读写数据的额外开销小。</p><p>（3）互操作：支持多语言的交互。</p><h1 id="二：自定义-bean-对象实现序列化接口（Writable）"><a href="#二：自定义-bean-对象实现序列化接口（Writable）" class="headerlink" title="二：自定义 bean 对象实现序列化接口（Writable）"></a>二：自定义 bean 对象实现序列化接口（Writable）</h1><p>在企业开发中往往常用的基本序列化类型不能满足所有需求，比如在 Hadoop 框架内部 传递一个 bean 对象，那么该对象就需要实现序列化接口。</p><p>具体实现 bean 对象序列化步骤如下 7 步：</p><h2 id="2-1-必须实现-Writable-接口"><a href="#2-1-必须实现-Writable-接口" class="headerlink" title="2.1 必须实现 Writable 接口"></a>2.1 必须实现 Writable 接口</h2><h2 id="2-2-反序列化时，需要反射调用空参构造函数，所以必须有空参构造"><a href="#2-2-反序列化时，需要反射调用空参构造函数，所以必须有空参构造" class="headerlink" title="2.2 反序列化时，需要反射调用空参构造函数，所以必须有空参构造"></a>2.2 反序列化时，需要反射调用空参构造函数，所以必须有空参构造</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">FlowBean</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">super</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-重写序列化方法"><a href="#2-3-重写序列化方法" class="headerlink" title="2.3 重写序列化方法"></a>2.3 重写序列化方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(DataOutput out)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">out.writeLong(upFlow);</span><br><span class="line">out.writeLong(downFlow);</span><br><span class="line">out.writeLong(sumFlow);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-重写反序列化方法"><a href="#2-4-重写反序列化方法" class="headerlink" title="2.4 重写反序列化方法"></a>2.4 重写反序列化方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readFields</span><span class="params">(DataInput in)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">upFlow = in.readLong();</span><br><span class="line">downFlow = in.readLong();</span><br><span class="line">sumFlow = in.readLong();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-注意反序列化的顺序和序列化的顺序完全一致"><a href="#2-5-注意反序列化的顺序和序列化的顺序完全一致" class="headerlink" title="2.5 注意反序列化的顺序和序列化的顺序完全一致"></a>2.5 注意反序列化的顺序和序列化的顺序完全一致</h2><h2 id="2-6-要想把结果显示在文件中，需要重写-toString-，可用”-t”分开，方便后续用。"><a href="#2-6-要想把结果显示在文件中，需要重写-toString-，可用”-t”分开，方便后续用。" class="headerlink" title="2.6 要想把结果显示在文件中，需要重写 toString()，可用”\t”分开，方便后续用。"></a>2.6 要想把结果显示在文件中，需要重写 toString()，可用”\t”分开，方便后续用。</h2><h2 id="2-7-如果需要将自定义的-bean-放在-key-中传输，则还需要实现-Comparable-接口，因为-MapReduce-框中的-Shuffle-过程要求对-key-必须能排序。"><a href="#2-7-如果需要将自定义的-bean-放在-key-中传输，则还需要实现-Comparable-接口，因为-MapReduce-框中的-Shuffle-过程要求对-key-必须能排序。" class="headerlink" title="2.7 如果需要将自定义的 bean 放在 key 中传输，则还需要实现 Comparable 接口，因为 MapReduce 框中的 Shuffle 过程要求对 key 必须能排序。"></a>2.7 如果需要将自定义的 bean 放在 key 中传输，则还需要实现 Comparable 接口，因为 MapReduce 框中的 Shuffle 过程要求对 key 必须能排序。</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(FlowBean o)</span> &#123;</span><br><span class="line"><span class="comment">// 倒序排列，从大到小</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>.sumFlow &gt; o.getSumFlow() ? -<span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三：序列化案例实操"><a href="#三：序列化案例实操" class="headerlink" title="三：序列化案例实操"></a>三：序列化案例实操</h1><h2 id="3-1-需求"><a href="#3-1-需求" class="headerlink" title="3.1 需求"></a>3.1 需求</h2><p>统计每一个手机号耗费的总上行流量、总下行流量、总流量</p><h3 id="（1）输入数据"><a href="#（1）输入数据" class="headerlink" title="（1）输入数据"></a>（1）输入数据</h3><p>phone_data.txt</p><h3 id="（2）输入数据格式"><a href="#（2）输入数据格式" class="headerlink" title="（2）输入数据格式"></a>（2）输入数据格式</h3><p><img src="/blog/926ade3a.html/image-20221217213353463.png"></p><h3 id="（3）期望输出数据格式"><a href="#（3）期望输出数据格式" class="headerlink" title="（3）期望输出数据格式"></a>（3）期望输出数据格式</h3><p><img src="/blog/926ade3a.html/image-20221217213418569.png"></p><h2 id="3-2-需求分析"><a href="#3-2-需求分析" class="headerlink" title="3.2 需求分析"></a>3.2 需求分析</h2><p><img src="/blog/926ade3a.html/image-20221217213615452.png"></p><h2 id="3-3-编写-MapReduce-程序"><a href="#3-3-编写-MapReduce-程序" class="headerlink" title="3.3 编写 MapReduce 程序"></a>3.3 编写 MapReduce 程序</h2><h3 id="（1）编写流量统计的-Bean-对象"><a href="#（1）编写流量统计的-Bean-对象" class="headerlink" title="（1）编写流量统计的 Bean 对象"></a>（1）编写流量统计的 Bean 对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aiyingke.mapreduce.writable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Writable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.DataInput;</span><br><span class="line"><span class="keyword">import</span> java.io.DataOutput;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Rupert Tears</span></span><br><span class="line"><span class="comment"> * Date: Created in 21:40 2022/12/17</span></span><br><span class="line"><span class="comment"> * Description: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FlowBean</span> <span class="keyword">implements</span> <span class="title class_">Writable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> upFlow;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> downFlow;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> sumFlow;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FlowBean</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSumFlow</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sumFlow = <span class="built_in">this</span>.upFlow + <span class="built_in">this</span>.downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(DataOutput dataOutput)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        dataOutput.writeLong(upFlow);</span><br><span class="line">        dataOutput.writeLong(downFlow);</span><br><span class="line">        dataOutput.writeLong(sumFlow);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readFields</span><span class="params">(DataInput dataInput)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.upFlow = dataInput.readLong();</span><br><span class="line">        <span class="built_in">this</span>.downFlow = dataInput.readLong();</span><br><span class="line">        <span class="built_in">this</span>.sumFlow = dataInput.readLong();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> upFlow + <span class="string">&quot;\t&quot;</span> + downFlow + <span class="string">&quot;\t&quot;</span> + sumFlow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（2）编写-Mapper-类"><a href="#（2）编写-Mapper-类" class="headerlink" title="（2）编写 Mapper 类"></a>（2）编写 Mapper 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aiyingke.mapreduce.writable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Rupert Tears</span></span><br><span class="line"><span class="comment"> * Date: Created in 21:59 2022/12/17</span></span><br><span class="line"><span class="comment"> * Description: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FlowMapper</span> <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;LongWritable, Text, Text, FlowBean&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Text</span> <span class="variable">outK</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">FlowBean</span> <span class="variable">outV</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FlowBean</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">map</span><span class="params">(LongWritable key, Text value, Mapper&lt;LongWritable, Text, Text, FlowBean&gt;.Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.获取一行数据</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> value.toString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.切割数据</span></span><br><span class="line">        <span class="keyword">final</span> String[] split = line.split(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.抓取手机号、上行流量、下行流量</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> split[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">upFlow</span> <span class="operator">=</span> split[split.length - <span class="number">3</span>];</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">downFlow</span> <span class="operator">=</span> split[split.length - <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.封装 outK outV</span></span><br><span class="line">        outK.set(phone);</span><br><span class="line">        outV.setUpFlow(Long.parseLong(upFlow));</span><br><span class="line">        outV.setDownFlow(Long.parseLong(downFlow));</span><br><span class="line">        outV.setSumFlow();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.写出 outK outV</span></span><br><span class="line">        context.write(outK, outV);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（3）编写-Reducer-类"><a href="#（3）编写-Reducer-类" class="headerlink" title="（3）编写 Reducer 类"></a>（3）编写 Reducer 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aiyingke.mapreduce.writable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Rupert Tears</span></span><br><span class="line"><span class="comment"> * Date: Created in 22:07 2022/12/17</span></span><br><span class="line"><span class="comment"> * Description: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FlowReducer</span> <span class="keyword">extends</span> <span class="title class_">Reducer</span>&lt;Text, FlowBean, Text, FlowBean&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">FlowBean</span> <span class="variable">outV</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FlowBean</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">reduce</span><span class="params">(Text key, Iterable&lt;FlowBean&gt; values, Reducer&lt;Text, FlowBean, Text, FlowBean&gt;.Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">totalUpFlow</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">totalDownFlow</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.遍历values,将其中的上行流量和下行流量分别累计</span></span><br><span class="line">        <span class="keyword">for</span> (FlowBean value : values) &#123;</span><br><span class="line">            totalUpFlow += value.getUpFlow();</span><br><span class="line">            totalDownFlow += value.getDownFlow();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.封装 outKV</span></span><br><span class="line">        outV.setUpFlow(totalUpFlow);</span><br><span class="line">        outV.setDownFlow(totalDownFlow);</span><br><span class="line">        outV.setSumFlow();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.写出 outK outV</span></span><br><span class="line">        context.write(key, outV);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（4）编写-Driver-驱动类"><a href="#（4）编写-Driver-驱动类" class="headerlink" title="（4）编写 Driver 驱动类"></a>（4）编写 Driver 驱动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aiyingke.mapreduce.writable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Rupert Tears</span></span><br><span class="line"><span class="comment"> * Date: Created in 22:14 2022/12/17</span></span><br><span class="line"><span class="comment"> * Description: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FlowDriver</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException, ClassNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.获取job对象</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Job</span> <span class="variable">job</span> <span class="operator">=</span> Job.getInstance();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.关联 driver mapper reducer</span></span><br><span class="line">        job.setJarByClass(FlowDriver.class);</span><br><span class="line">        job.setMapperClass(FlowMapper.class);</span><br><span class="line">        job.setReducerClass(FlowReducer.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.设置 map 端输出 KV 类型</span></span><br><span class="line">        job.setMapOutputKeyClass(Text.class);</span><br><span class="line">        job.setMapOutputValueClass(FlowBean.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.设置程序最终输出 KV 类型</span></span><br><span class="line">        job.setOutputKeyClass(Text.class);</span><br><span class="line">        job.setOutputValueClass(FlowBean.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.设置程序输入输出路径</span></span><br><span class="line">        FileInputFormat.setInputPaths(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;Y:\\Temp\\phone_data.txt&quot;</span>));</span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;Y:\\Temp\\output2\\&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.提交job</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> job.waitForCompletion(<span class="literal">true</span>);</span><br><span class="line">        System.exit(b ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：序列化概述&quot;&gt;&lt;a href=&quot;#一：序列化概述&quot; class=&quot;headerlink&quot; title=&quot;一：序列化概述&quot;&gt;&lt;/a&gt;一：序列化概述&lt;/h1&gt;&lt;h2 id=&quot;1-1-什么是序列化？&quot;&gt;&lt;a href=&quot;#1-1-什么是序列化？&quot; class=&quot;he</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce WordCount案例</title>
    <link href="https://aiyingke.cn/blog/5bb35ccf.html/"/>
    <id>https://aiyingke.cn/blog/5bb35ccf.html/</id>
    <published>2022-12-16T15:18:02.000Z</published>
    <updated>2022-12-16T16:27:47.571Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：需求"><a href="#一：需求" class="headerlink" title="一：需求"></a>一：需求</h1><p>对本地 WordCount.txt 文件进行词频统计，其内容均按 “,”分割，将统计结果输出到 outputDir 目录下；</p><h1 id="二：代码实现"><a href="#二：代码实现" class="headerlink" title="二：代码实现"></a>二：代码实现</h1><h2 id="2-1-环境引入"><a href="#2-1-环境引入" class="headerlink" title="2.1 环境引入"></a>2.1 环境引入</h2><h3 id="（1）Maven-依赖"><a href="#（1）Maven-依赖" class="headerlink" title="（1）Maven 依赖"></a>（1）Maven 依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="（2）配置日志"><a href="#（2）配置日志" class="headerlink" title="（2）配置日志"></a>（2）配置日志</h3><p>在项目的 src&#x2F;main&#x2F;resources 目录下，新建一个文件，命名为“log4j.properties”，在 文件中填入。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">INFO, stdout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="string">%d %p [%c] - %m%n</span></span><br><span class="line"><span class="attr">log4j.appender.logfile</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="attr">log4j.appender.logfile.File</span>=<span class="string">target/spring.log</span></span><br><span class="line"><span class="attr">log4j.appender.logfile.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.logfile.layout.ConversionPattern</span>=<span class="string">%d %p [%c] - %m%n</span></span><br></pre></td></tr></table></figure><h2 id="2-2-编写代码"><a href="#2-2-编写代码" class="headerlink" title="2.2 编写代码"></a>2.2 编写代码</h2><p>创建包 cn.aiyingke.mapreduce.wordcount</p><h3 id="（1）Driver-类"><a href="#（1）Driver-类" class="headerlink" title="（1）Driver 类"></a>（1）Driver 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> driver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mapper.WordCountMapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"><span class="keyword">import</span> reducer.WordCountReducer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Rupert Tears</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: Created in 18:17 2022/1/18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Function</span>: 在 hdfs 中的某一目录下，有一些列文件，内容均为 “,”号分割，</span></span><br><span class="line"><span class="comment"> * 统计出按 “,”分割的各个元素出现频次，输出到指定 hdfs目录中。</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 概述：词频统计工作</span></span><br><span class="line"><span class="comment"> * 驱动器类：</span></span><br><span class="line"><span class="comment"> * 1.拿到配置环境变量</span></span><br><span class="line"><span class="comment"> * 2.拿到job作业对象</span></span><br><span class="line"><span class="comment"> * 3.设置主类，（即：告知集群入口jar包在哪）</span></span><br><span class="line"><span class="comment"> * 4.设置 mapper combiner reducer</span></span><br><span class="line"><span class="comment"> * 5.设置输出 key value的类型</span></span><br><span class="line"><span class="comment"> * 6.设置输入、输出的数据路径</span></span><br><span class="line"><span class="comment"> * 7.提交执行</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCountDriver</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException, ClassNotFoundException &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         *       1.拿到配置环境变量</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         *       2.拿到job作业对象</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">Job</span> <span class="variable">job</span> <span class="operator">=</span> Job.getInstance(configuration, <span class="string">&quot;WordCount-MR&quot;</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         *       3.设置主类，（即：告知集群入口jar包在哪）</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        job.setJarByClass(WordCountDriver.class);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         *      4.设置 mapper combiner reducer</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        job.setMapperClass(WordCountMapper.class);</span><br><span class="line">        job.setCombinerClass(WordCountReducer.class);</span><br><span class="line">        job.setReducerClass(WordCountReducer.class);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         *       5.设置输出 key value的类型</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        job.setOutputKeyClass(Text.class);</span><br><span class="line">        job.setOutputValueClass(IntWritable.class);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         *       6.设置输入、输出的数据路径</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        FileInputFormat.addInputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;S:\\Software\\IDEA 2021.1.2\\IDEA-workspace\\Rupert-Tears\\MapReduce\\WordCount\\data\\instanceData\\WordCount.txt&quot;</span>));</span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;S:\\Software\\IDEA 2021.1.2\\IDEA-workspace\\Rupert-Tears\\MapReduce\\WordCount\\data\\outputDir&quot;</span>));</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         *       7.提交执行</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.exit(job.waitForCompletion(<span class="literal">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（2）Mapper-类"><a href="#（2）Mapper-类" class="headerlink" title="（2）Mapper 类"></a>（2）Mapper 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Rupert Tears</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: Created in 18:22 2022/1/18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCountMapper</span> <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;Object, Text, Text, IntWritable&gt; &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 暂存一个常用的IntWritable对象，对 java 整形的封装</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">IntWritable</span> <span class="variable">intWritable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntWritable</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 暂存一个 String 的封装类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">Text</span> <span class="variable">text</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 覆写map方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException 1.对输入的文件，以行为单位进行切分，按规则切分（空格）；</span></span><br><span class="line"><span class="comment">     *                              2.遍历切分完成后的集合或迭代器</span></span><br><span class="line"><span class="comment">     *                              3.组合&lt;key,value&gt;,通过Context进行输出</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">map</span><span class="params">(Object key, Text value, Mapper&lt;Object, Text, Text, IntWritable&gt;.Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 将传入的数据转换为字符串 指定分割符号为逗号</span></span><br><span class="line">        <span class="type">StringTokenizer</span> <span class="variable">stringTokenizer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(value.toString(), <span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="comment">// 循环获取每个逗号分割出来的元素</span></span><br><span class="line">        <span class="keyword">while</span> (stringTokenizer.hasMoreTokens()) &#123;</span><br><span class="line">            <span class="comment">// 接收获取元素</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">word</span> <span class="operator">=</span> stringTokenizer.nextToken();</span><br><span class="line">            <span class="comment">// 添加分割后的元素到封装类中</span></span><br><span class="line">            text.set(word);</span><br><span class="line">            <span class="comment">// 上下文调度</span></span><br><span class="line">            context.write(text, intWritable);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（3）Reducer-类"><a href="#（3）Reducer-类" class="headerlink" title="（3）Reducer 类"></a>（3）Reducer 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> reducer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Rupert Tears</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: Created in 18:23 2022/1/18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCountReducer</span> <span class="keyword">extends</span> <span class="title class_">Reducer</span>&lt;Text, IntWritable, Text, IntWritable&gt; &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个存储 int类型的求和结果的变量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">IntWritable</span> <span class="variable">sumIntWritable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntWritable</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 以key相同的组为单位处理，即 Reducer 方法调用一次，处理同 key的组数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values, Reducer&lt;Text, IntWritable, Text, IntWritable&gt;.Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 定义一个总词频变量</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 循环计数</span></span><br><span class="line">        <span class="keyword">for</span> (IntWritable val : values) &#123;</span><br><span class="line">            count += val.get();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将频数封装</span></span><br><span class="line">        sumIntWritable.set(count);</span><br><span class="line">        <span class="comment">// 上下文调度</span></span><br><span class="line">        context.write(key, sumIntWritable);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-本地测试"><a href="#2-3-本地测试" class="headerlink" title="2.3 本地测试"></a>2.3 本地测试</h2><p>（1）需要首先配置好 HADOOP_HOME 变量以及 Windows 运行依赖</p><p>（2）在 IDEA上运行程序即可。</p><h1 id="三：集群测试"><a href="#三：集群测试" class="headerlink" title="三：集群测试"></a>三：集群测试</h1><h2 id="3-1-打包插件"><a href="#3-1-打包插件" class="headerlink" title="3.1 打包插件"></a>3.1 打包插件</h2><p>用 maven 打 jar 包，需要添加的打包插件依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-2-修改输入输出"><a href="#3-2-修改输入输出" class="headerlink" title="3.2 修改输入输出"></a>3.2 修改输入输出</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileInputFormat.addInputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(args[<span class="number">0</span>]));</span><br><span class="line">FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(args[<span class="number">1</span>]));</span><br></pre></td></tr></table></figure><h2 id="3-3-上传集群并执行命令"><a href="#3-3-上传集群并执行命令" class="headerlink" title="3.3 上传集群并执行命令"></a>3.3 上传集群并执行命令</h2><p>输入输出文件应为HDFS中的文件路径；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 ~]$ hadoop jar /home/ghost/mapreduce/MapReduceDemo-1.0-SNAPSHOT.jar cn.aiyingke.mapreduce.wordcount.WordCountDriver /word.txt /output</span><br></pre></td></tr></table></figure><p>part-r-00000：其中包含 r 代表的是 reduce 的结果；</p><p><img src="/blog/5bb35ccf.html/image-20221217002553625.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：需求&quot;&gt;&lt;a href=&quot;#一：需求&quot; class=&quot;headerlink&quot; title=&quot;一：需求&quot;&gt;&lt;/a&gt;一：需求&lt;/h1&gt;&lt;p&gt;对本地 WordCount.txt 文件进行词频统计，其内容均按 “,”分割，将统计结果输出到 outputDir 目录下；</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce 概述</title>
    <link href="https://aiyingke.cn/blog/b6d0a624.html/"/>
    <id>https://aiyingke.cn/blog/b6d0a624.html/</id>
    <published>2022-12-16T14:52:05.000Z</published>
    <updated>2022-12-16T15:07:43.972Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：MapReduce-简介"><a href="#一：MapReduce-简介" class="headerlink" title="一：MapReduce 简介"></a>一：MapReduce 简介</h1><p>MapReduce 是一个<code>分布式运算程序的编程框架</code>，是用户开发“基于 Hadoop 的数据分析应用”的核心框架。</p><p>MapReduce 核心功能是将用户编写的<code>业务逻辑代码</code>和<code>自带默认组件</code>整合成一个完整的<code>分布式运算程序</code>，并发运行在一个 Hadoop 集群上。</p><h1 id="二：MapReduce-优缺点"><a href="#二：MapReduce-优缺点" class="headerlink" title="二：MapReduce 优缺点"></a>二：MapReduce 优缺点</h1><h2 id="2-1-优点"><a href="#2-1-优点" class="headerlink" title="2.1 优点"></a>2.1 优点</h2><h3 id="（1）MapReduce-易于编程"><a href="#（1）MapReduce-易于编程" class="headerlink" title="（1）MapReduce 易于编程"></a>（1）MapReduce 易于编程</h3><ul><li>它<code>简单的实现一些接口，就可以完成一个分布式程序</code>，这个分布式程序可以分布到大量 廉价的 PC 机器上运行。也就是说你写一个分布式程序，跟写一个简单的串行程序是一模一 样的。就是因为这个特点使得 MapReduce 编程变得非常流行。</li></ul><h3 id="（2）良好的扩展性"><a href="#（2）良好的扩展性" class="headerlink" title="（2）良好的扩展性"></a>（2）良好的扩展性</h3><ul><li>当你的计算资源不能得到满足的时候，你可以通过<code>简单的增加机器</code>来扩展它的计算能力。</li></ul><h3 id="（3）高容错性"><a href="#（3）高容错性" class="headerlink" title="（3）高容错性"></a>（3）高容错性</h3><ul><li>MapReduce 设计的初衷就是使程序能够部署在廉价的 PC 机器上，这就要求它具有很高 的容错性。比如<code>其中一台机器挂了，它可以把上面的计算任务转移到另外一个节点上运行， 不至于这个任务运行失败</code>，而且这个过程不需要人工参与，而完全是由 Hadoop 内部完成的。</li></ul><h3 id="（4）适合-PB-级以上海量数据的离线处理"><a href="#（4）适合-PB-级以上海量数据的离线处理" class="headerlink" title="（4）适合 PB 级以上海量数据的离线处理"></a>（4）适合 PB 级以上海量数据的离线处理</h3><ul><li>可以实现上千台服务器集群并发工作，提供数据处理能力。</li></ul><h2 id="2-2-缺点"><a href="#2-2-缺点" class="headerlink" title="2.2 缺点"></a>2.2 缺点</h2><h3 id="（1）不擅长实时计算"><a href="#（1）不擅长实时计算" class="headerlink" title="（1）不擅长实时计算"></a>（1）不擅长实时计算</h3><ul><li>MapReduce 无法像 MySQL 一样，在毫秒或者秒级内返回结果。</li></ul><h3 id="（2）不擅长流式计算"><a href="#（2）不擅长流式计算" class="headerlink" title="（2）不擅长流式计算"></a>（2）不擅长流式计算</h3><ul><li>流式计算的输入数据是动态的，而 <code>MapReduce 的输入数据集是静态的</code>，不能动态变化。 这是因为 MapReduce 自身的设计特点决定了数据源必须是静态的。</li></ul><h3 id="（3）不擅长-DAG（有向无环图）计算"><a href="#（3）不擅长-DAG（有向无环图）计算" class="headerlink" title="（3）不擅长 DAG（有向无环图）计算"></a>（3）不擅长 DAG（有向无环图）计算</h3><ul><li>多个应用程序存在依赖关系，<code>后一个应用程序的输入为前一个的输出</code>。在这种情况下， MapReduce 并不是不能做，而是使用后，每个 MapReduce 作业的输出结果都会写入到磁盘， 会造成大量的磁盘 IO，导致性能非常的低下。</li></ul><h1 id="三：MapReduce-核心思想"><a href="#三：MapReduce-核心思想" class="headerlink" title="三：MapReduce 核心思想"></a>三：MapReduce 核心思想</h1><p><img src="/blog/b6d0a624.html/image-20221216230005324.png"></p><p>（1）分布式的运算程序往往需要分成至少 2 个阶段。</p><p>（2）第一个阶段的 MapTask 并发实例，完全并行运行，互不相干。</p><p>（3）第二个阶段的 ReduceTask 并发实例互不相干，但是他们的数据依赖于上一个阶段 的所有 MapTask 并发实例的输出。</p><p>（4）MapReduce 编程模型只能包含一个 Map 阶段和一个 Reduce 阶段，如果用户的业 务逻辑非常复杂，那就只能多个 MapReduce 程序，串行运行。</p><h1 id="四：MapReduce-进程"><a href="#四：MapReduce-进程" class="headerlink" title="四：MapReduce 进程"></a>四：MapReduce 进程</h1><p>一个完整的 MapReduce 程序在分布式运行时有三类实例进程：</p><p>（1）MrAppMaster：负责整个程序的过程调度及状态协调。</p><p>（2）MapTask：负责 Map 阶段的整个数据处理流程。</p><p>（3）ReduceTask：负责 Reduce 阶段的整个数据处理流程。</p><h1 id="五：官方-WordCount-源码"><a href="#五：官方-WordCount-源码" class="headerlink" title="五：官方 WordCount 源码"></a>五：官方 WordCount 源码</h1><p>采用反编译工具反编译源码，发现 WordCount 案例有 Map 类、Reduce 类和驱动类。且数据的类型是 Hadoop 自身封装的序列化类型。</p><h1 id="六：常用数据序列化类型"><a href="#六：常用数据序列化类型" class="headerlink" title="六：常用数据序列化类型"></a>六：常用数据序列化类型</h1><p><img src="/blog/b6d0a624.html/image-20221216230422956.png"></p><h1 id="七：MapReduce-编程规范"><a href="#七：MapReduce-编程规范" class="headerlink" title="七：MapReduce 编程规范"></a>七：MapReduce 编程规范</h1><p>用户编写的程序分成三个部分：Mapper、Reducer 和 Driver。</p><h2 id="7-1-Mapper阶段"><a href="#7-1-Mapper阶段" class="headerlink" title="7.1 Mapper阶段"></a>7.1 Mapper阶段</h2><p>（1）用户自定义的Mapper要继承自己的父类</p><p>（2）Mapper的输入数据是KV对的形式（KV的类型可自定义）</p><p>（3）Mapper中的业务逻辑写在map()方法中</p><p>（4）Mapper的输出数据是KV对的形式（KV的类型可自定义）</p><p>（5）map()方法（MapTask进程）对每一个调用一次</p><h2 id="7-2-Reducer阶段"><a href="#7-2-Reducer阶段" class="headerlink" title="7.2 Reducer阶段"></a>7.2 Reducer阶段</h2><p>（1）用户自定义的Reducer要继承自己的父类</p><p>（2）Reducer的输入数据类型对应Mapper的输出数据类型，也是KV</p><p>（3）Reducer的业务逻辑写在reduce()方法中</p><p>（4）ReduceTask进程对每一组相同k的组调用一次reduce()方法</p><h2 id="7-3-Driver阶段"><a href="#7-3-Driver阶段" class="headerlink" title="7.3 Driver阶段"></a>7.3 Driver阶段</h2><p>相当于YARN集群的客户端，用于提交我们整个程序到YARN集群，提交的是 封装了MapReduce程序相关运行参数的job对象；</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：MapReduce-简介&quot;&gt;&lt;a href=&quot;#一：MapReduce-简介&quot; class=&quot;headerlink&quot; title=&quot;一：MapReduce 简介&quot;&gt;&lt;/a&gt;一：MapReduce 简介&lt;/h1&gt;&lt;p&gt;MapReduce 是一个&lt;code&gt;分布式</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>HDFS DataNode</title>
    <link href="https://aiyingke.cn/blog/854ee684.html/"/>
    <id>https://aiyingke.cn/blog/854ee684.html/</id>
    <published>2022-12-15T08:01:23.000Z</published>
    <updated>2022-12-15T08:13:32.978Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：DataNode-工作机制"><a href="#一：DataNode-工作机制" class="headerlink" title="一：DataNode 工作机制"></a>一：DataNode 工作机制</h1><p><img src="/blog/854ee684.html/image-20221215160341892.png"></p><p>（1）一个数据块在 DataNode 上以文件形式存储在磁盘上，包括两个文件，一个是数据 本身，一个是元数据包括数据块的长度，块数据的校验和，以及时间戳。</p><p>（2）DataNode 启动后向 NameNode 注册，通过后，周期性（6 小时）的向 NameNode 上 报所有的块信息。</p><ul><li>DN 向 NN 汇报当前解读信息的时间间隔，默认 6 小时；</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.blockreport.intervalMsec<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>21600000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Determines block reporting interval in milliseconds.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>DN 扫描自己节点块信息列表的时间，默认 6 小时；</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.directoryscan.interval<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>21600s<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Interval in seconds for Datanode to scan data directories and reconcile the difference between blocks in memory and on the disk. Support multiple time unit suffix(case insensitive), as described in dfs.heartbeat.interval.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（3）心跳是每 3 秒一次，心跳返回结果带有 NameNode 给该 DataNode 的命令如复制块 数据到另一台机器，或删除某个数据块。如果超过 10 分钟没有收到某个 DataNode 的心跳， 则认为该节点不可用。</p><p>（4）集群运行中可以安全加入和退出一些机器。</p><h1 id="二：数据完整性"><a href="#二：数据完整性" class="headerlink" title="二：数据完整性"></a>二：数据完整性</h1><p><img src="/blog/854ee684.html/image-20221215160813980.png"></p><p>思考：如果电脑磁盘里面存储的数据是控制高铁信号灯的红灯信号（1）和绿灯信号（0）， 但是存储该数据的磁盘坏了，一直显示是绿灯，是否很危险？同理 DataNode 节点上的数据 损坏了，却没有发现，是否也很危险，那么如何解决呢？</p><p>如下是 DataNode 节点保证数据完整性的方法。</p><ol><li>当 DataNode 读取 Block 的时候，它会计算 CheckSum。</li><li>如果计算后的 CheckSum，与 Block 创建时值不一样，说明 Block 已经损坏。</li><li>Client 读取其他 DataNode 上的 Block。</li><li>常见的校验算法 crc（32），md5（128），sha1（160）；</li><li>DataNode 在其文件创建后周期验证 CheckSum。</li></ol><h1 id="三：掉线时限参数设置"><a href="#三：掉线时限参数设置" class="headerlink" title="三：掉线时限参数设置"></a>三：掉线时限参数设置</h1><p><img src="/blog/854ee684.html/image-20221215161115612.png"></p><ul><li>需要注意的是 hdfs-site.xml 配置文件中：<ul><li>heartbeat.recheck.interval 的单位为毫秒</li><li>dfs.heartbeat.interval 的单位为秒</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.heartbeat.recheck-interval<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>300000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.heartbeat.interval<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：DataNode-工作机制&quot;&gt;&lt;a href=&quot;#一：DataNode-工作机制&quot; class=&quot;headerlink&quot; title=&quot;一：DataNode 工作机制&quot;&gt;&lt;/a&gt;一：DataNode 工作机制&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/blog/85</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>HDFS NameNode和SecondaryNameNode</title>
    <link href="https://aiyingke.cn/blog/a5404ebd.html/"/>
    <id>https://aiyingke.cn/blog/a5404ebd.html/</id>
    <published>2022-12-15T07:21:25.000Z</published>
    <updated>2022-12-15T08:13:32.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：NN-和-2NN-工作机制"><a href="#一：NN-和-2NN-工作机制" class="headerlink" title="一：NN 和 2NN 工作机制"></a>一：NN 和 2NN 工作机制</h1><h2 id="1-1-思考：NameNode-中的元数据是存储在哪里的？"><a href="#1-1-思考：NameNode-中的元数据是存储在哪里的？" class="headerlink" title="1.1 思考：NameNode 中的元数据是存储在哪里的？"></a>1.1 思考：NameNode 中的元数据是存储在哪里的？</h2><p>首先，我们做个假设，如果存储在 NameNode 节点的磁盘中，因为经常需要进行随机访 问，还有响应客户请求，必然是效率过低。因此，元数据需要存放在内存中。但如果只存在 内存中，一旦断电，元数据丢失，整个集群就无法工作了。因此产生在磁盘中备份元数据的 FsImage。</p><p>这样又会带来新的问题，当在内存中的元数据更新时，如果同时更新 FsImage，就会导 致效率过低，但如果不更新，就会发生一致性问题，一旦 NameNode 节点断电，就会产生数 据丢失。因此，引入 Edits 文件（只进行追加操作，效率很高）。每当元数据有更新或者添 加元数据时，修改内存中的元数据并追加到 Edits 中。这样，一旦 NameNode 节点断电，可 以通过 FsImage 和 Edits 的合并，合成元数据。</p><p>但是，如果长时间添加数据到 Edits 中，会导致该文件数据过大，效率降低，而且一旦 断电，恢复元数据需要的时间过长。因此，需要定期进行 FsImage 和 Edits 的合并，如果这 个操作由NameNode节点完成，又会效率过低。因此，引入一个新的节点SecondaryNamenode， 专门用于 FsImage 和 Edits 的合并。</p><h2 id="1-2-NameNode工作机制"><a href="#1-2-NameNode工作机制" class="headerlink" title="1.2 NameNode工作机制"></a>1.2 NameNode工作机制</h2><p><img src="/blog/a5404ebd.html/image-20221215152545774.png"></p><h3 id="（1）第一阶段：NameNode-启动"><a href="#（1）第一阶段：NameNode-启动" class="headerlink" title="（1）第一阶段：NameNode 启动"></a>（1）第一阶段：NameNode 启动</h3><ol><li>第一次启动 NameNode 格式化后，创建 Fsimage 和 Edits 文件。如果不是第一次启动，直接加载编辑日志和镜像文件到内存。</li><li>客户端对元数据进行增删改的请求。</li><li>NameNode 记录操作日志，更新滚动日志。</li><li>NameNode 在内存中对元数据进行增删改。</li></ol><h3 id="（2）第二阶段：Secondary-NameNode-工作"><a href="#（2）第二阶段：Secondary-NameNode-工作" class="headerlink" title="（2）第二阶段：Secondary NameNode 工作"></a>（2）第二阶段：Secondary NameNode 工作</h3><ol><li>Secondary NameNode 询问 NameNode 是否需要 CheckPoint。直接带回 NameNode 是否检查结果。</li><li>Secondary NameNode 请求执行 CheckPoint。</li><li>NameNode 滚动正在写的 Edits 日志。</li><li>将滚动前的编辑日志和镜像文件拷贝到 Secondary NameNode。</li><li>Secondary NameNode 加载编辑日志和镜像文件到内存，并合并。</li><li>生成新的镜像文件 fsimage.chkpoint。</li><li>拷贝 fsimage.chkpoint 到 NameNode。</li><li>NameNode 将 fsimage.chkpoint 重新命名成 fsimage。</li></ol><h1 id="二：Fsimage-和-Edits-解析"><a href="#二：Fsimage-和-Edits-解析" class="headerlink" title="二：Fsimage 和 Edits 解析"></a>二：Fsimage 和 Edits 解析</h1><h2 id="2-1-Fsimage和Edits概念"><a href="#2-1-Fsimage和Edits概念" class="headerlink" title="2.1 Fsimage和Edits概念"></a>2.1 Fsimage和Edits概念</h2><p>NameNode被格式化之后，将在&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F;data&#x2F;tmp&#x2F;dfs&#x2F;name&#x2F;current目录中产生如下文件</p><p><img src="/blog/a5404ebd.html/image-20221215153208494.png"></p><ol><li>Fsimage文件：HDFS文件系统元数据的一个永久性的检查点，其中包含HDFS文件系统的所有目 录和文件inode的序列化信息。</li><li>Edits文件：存放HDFS文件系统的所有更新操作的路径，文件系统客户端执行的所有写操作首先 会被记录到Edits文件中。</li><li>seen_txid文件保存的是一个数字，就是最后一个edits_的数字</li><li>每 次NameNode启动的时候都会将Fsimage文件读入内存，加 载Edits里面的更新操作，保证内存 中的元数据信息是最新的、同步的，可以看成NameNode启动的时候就将Fsimage和Edits文件进行了合并。</li></ol><h2 id="2-2-oiv-查看-Fsimage-文件"><a href="#2-2-oiv-查看-Fsimage-文件" class="headerlink" title="2.2 oiv 查看 Fsimage 文件"></a>2.2 oiv 查看 Fsimage 文件</h2><ul><li>hdfs oiv -p 文件类型 -i 镜像文件 -o 转换后文件输出路径</li><li>pwd：&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F;data&#x2F;dfs&#x2F;name&#x2F;current</li><li>hdfs oiv -p XML -i  fsimage_0000000000000000025 -o &#x2F;home&#x2F;ghost&#x2F;tmp&#x2F;fsimage.xml</li><li>思考：可以看出，Fsimage 中没有记录块所对应 DataNode，为什么？ </li><li>在集群启动后，要求 DataNode 上报数据块信息，并间隔一段时间后再次上报。</li></ul><h2 id="2-3-oev-查看-Edits-文件"><a href="#2-3-oev-查看-Edits-文件" class="headerlink" title="2.3 oev 查看 Edits 文件"></a>2.3 oev 查看 Edits 文件</h2><ul><li>hdfs oev -p 文件类型 -i 编辑日志 -o 转换后文件输出路径</li><li>pwd：&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F;data&#x2F;dfs&#x2F;name&#x2F;current</li><li>hdfs oiv -p XML -i  edits_0000000000000000012-0000000000000000013 -o &#x2F;home&#x2F;ghost&#x2F;tmp&#x2F;edits.xml</li></ul><h1 id="三-：CheckPoint-时间设置"><a href="#三-：CheckPoint-时间设置" class="headerlink" title="三 ：CheckPoint 时间设置"></a>三 ：CheckPoint 时间设置</h1><h2 id="3-1-通常情况下，SecondaryNameNode-每隔一小时执行一次"><a href="#3-1-通常情况下，SecondaryNameNode-每隔一小时执行一次" class="headerlink" title="3.1 通常情况下，SecondaryNameNode 每隔一小时执行一次"></a>3.1 通常情况下，SecondaryNameNode 每隔一小时执行一次</h2><p>hdfs-default.xml 原始配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.checkpoint.period<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>3600s<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-2-一分钟检查一次操作次数，当操作次数达到-1-百万时，SecondaryNameNode-执行一次。"><a href="#3-2-一分钟检查一次操作次数，当操作次数达到-1-百万时，SecondaryNameNode-执行一次。" class="headerlink" title="3.2 一分钟检查一次操作次数，当操作次数达到 1 百万时，SecondaryNameNode 执行一次。"></a>3.2 一分钟检查一次操作次数，当操作次数达到 1 百万时，SecondaryNameNode 执行一次。</h2><p>hdfs-default.xml 原始配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.checkpoint.txns<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>1000000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>操作动作次数<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.checkpoint.check.period<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>60s<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span> 1 分钟检查一次操作次数<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：NN-和-2NN-工作机制&quot;&gt;&lt;a href=&quot;#一：NN-和-2NN-工作机制&quot; class=&quot;headerlink&quot; title=&quot;一：NN 和 2NN 工作机制&quot;&gt;&lt;/a&gt;一：NN 和 2NN 工作机制&lt;/h1&gt;&lt;h2 id=&quot;1-1-思考：NameNo</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>HDFS 读写流程</title>
    <link href="https://aiyingke.cn/blog/b08a5f1f.html/"/>
    <id>https://aiyingke.cn/blog/b08a5f1f.html/</id>
    <published>2022-12-15T05:53:12.000Z</published>
    <updated>2022-12-15T06:54:30.790Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：写数据流程"><a href="#一：写数据流程" class="headerlink" title="一：写数据流程"></a>一：写数据流程</h1><p><img src="/blog/b08a5f1f.html/image-20221215135840868.png"></p><p>（1）客户端通过 Distributed FileSystem 模块向 NameNode 请求上传文件，NameNode 检查目标文件是否已存在，父目录是否存在。</p><p>（2）NameNode 返回是否可以上传。</p><p>（3）客户端请求第一个 Block 上传到哪几个 DataNode 服务器上。</p><p>（4）NameNode 返回 3 个 DataNode 节点，分别为 dn1、dn2、dn3。</p><p>（5）客户端通过 FSDataOutputStream 模块请求 dn1 上传数据，dn1 收到请求会继续调用 dn2，然后 dn2 调用 dn3，将这个通信管道建立完成。</p><p>（6）dn1、dn2、dn3 逐级应答客户端。</p><p>（7）客户端开始往 dn1 上传第一个 Block（先从磁盘读取数据放到一个本地内存缓存）， 以 Packet 为单位，dn1 收到一个 Packet 就会传给 dn2，dn2 传给 dn3；dn1 每传一个 packet 会放入一个应答队列等待应答。</p><p>（8）当一个 Block 传输完成之后，客户端再次请求 NameNode 上传第二个 Block 的服务 器。（重复执行 3-7 步）。</p><h1 id="二：读数据流程"><a href="#二：读数据流程" class="headerlink" title="二：读数据流程"></a>二：读数据流程</h1><p><img src="/blog/b08a5f1f.html/image-20221215140417387.png"></p><p>（1）客户端通过 DistributedFileSystem 向 NameNode 请求下载文件，NameNode 通过查询元数据，找到文件块所在的 DataNode 地址。</p><p>（2）挑选一台 DataNode（就近原则，然后随机）服务器，请求读取数据。</p><p>（3）DataNode 开始传输数据给客户端（从磁盘里面读取数据输入流，以 Packet 为单位 来做校验）。</p><p>（4）客户端以 Packet 为单位接收，先在本地缓存，然后写入目标文件。</p><h1 id="三：网络拓扑-节点距离计算"><a href="#三：网络拓扑-节点距离计算" class="headerlink" title="三：网络拓扑-节点距离计算"></a>三：网络拓扑-节点距离计算</h1><p>在 HDFS 写数据的过程中，NameNode 会选择距离待上传数据最近距离的 DataNode 接 收数据。那么这个最近距离怎么计算呢？</p><p><strong>节点距离：两个节点到达最近的共同祖先的距离总和。</strong></p><p><img src="/blog/b08a5f1f.html/image-20221215141856696.png"></p><p>假设有数据中心 d1 机架 r1 中的节点 n1。该节点可以表示为&#x2F;d1&#x2F;r1&#x2F;n1。</p><p>两个数据中心依靠外部的网络连接，数据中心可看作一个机房。</p><h1 id="四：机架感知（副本存储节点选择）"><a href="#四：机架感知（副本存储节点选择）" class="headerlink" title="四：机架感知（副本存储节点选择）"></a>四：机架感知（副本存储节点选择）</h1><h2 id="4-1-机架感知说明"><a href="#4-1-机架感知说明" class="headerlink" title="4.1 机架感知说明"></a>4.1 机架感知说明</h2><p><a href="https://hadoop.apache.org/docs/r3.3.4/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html#Data_Replication">Apache Hadoop 3.3.4 – HDFS Architecture</a></p><p>对于常见情况，当复制因子为3时，HDFS的放置策略是，如果编写器在datanode上，则将一个副本放在本地计算机上，否则放在与编写器在同一机架中的随机datanode上，另一个副本放在不同(远程)机架中的节点上，最后一个放在同一远程机架中的不同节点上。</p><p>此策略减少了机架间的写入流量，从而总体上提高了写入性能。机架故障的几率远小于节点故障的几率；该策略不影响数据可靠性和可用性保证。但是，它不会减少读取数据时使用的聚合网络带宽，因为数据块仅放置在两个不同的机架中，而不是三个。</p><p>使用这种策略，数据块的副本不会均匀分布在机架上。两个副本位于一个机架的不同节点上，另一个副本位于另一个机架的节点上。该策略提高了写入性能，而不影响数据可靠性或读取性能。</p><h2 id="4-2-源码说明"><a href="#4-2-源码说明" class="headerlink" title="4.2 源码说明"></a>4.2 源码说明</h2><p>Crtl + n 查找 BlockPlacementPolicyDefault，在该类中查找 chooseTargetInOrder 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Calculate the maximum number of replicas to allocate per rack. It also</span></span><br><span class="line"><span class="comment">   * limits the total number of replicas to the total number of nodes in the</span></span><br><span class="line"><span class="comment">   * cluster. Caller should adjust the replica count to the return value.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> numOfChosen The number of already chosen nodes.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> numOfReplicas The number of additional nodes to allocate.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> integer array. Index 0: The number of nodes allowed to allocate</span></span><br><span class="line"><span class="comment">   *         in addition to already chosen nodes.</span></span><br><span class="line"><span class="comment">   *         Index 1: The maximum allowed number of nodes per rack. This</span></span><br><span class="line"><span class="comment">   *         is independent of the number of chosen nodes, as it is calculated</span></span><br><span class="line"><span class="comment">   *         using the target number of replicas.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span>[] getMaxNodesPerRack(<span class="type">int</span> numOfChosen, <span class="type">int</span> numOfReplicas) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">clusterSize</span> <span class="operator">=</span> clusterMap.getNumOfLeaves();<span class="comment">//datanode的数量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">totalNumOfReplicas</span> <span class="operator">=</span> numOfChosen + numOfReplicas;<span class="comment">//总共的副本数量</span></span><br><span class="line">    <span class="keyword">if</span> (totalNumOfReplicas &gt; clusterSize) &#123; <span class="comment">//如果总的数量大于集群datanode的数量</span></span><br><span class="line">      numOfReplicas -= (totalNumOfReplicas-clusterSize); <span class="comment">//修正副本的数量</span></span><br><span class="line">      totalNumOfReplicas = clusterSize; <span class="comment">//总的副本的数量等于集群datanode的数量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// No calculation needed when there is only one rack or picking one node.//如果只有一个rack或者只选取一个结点，那么没有必要计算。</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">numOfRacks</span> <span class="operator">=</span> clusterMap.getNumOfRacks();</span><br><span class="line">    <span class="keyword">if</span> (numOfRacks == <span class="number">1</span> || totalNumOfReplicas &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;numOfReplicas, totalNumOfReplicas&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> <span class="variable">maxNodesPerRack</span> <span class="operator">=</span> (totalNumOfReplicas-<span class="number">1</span>)/numOfRacks + <span class="number">2</span>;<span class="comment">//如果totalNumOfReplicas-1 &lt; numOfRacks，那么maxNodesPerRack为2。</span></span><br><span class="line"><span class="comment">//如果totalNumOfReplicas - 1 = numOfRacks 那么 maxNodesPerRack=3，如果totalNumOfReplicas-1 &gt; numOfRacks，那么就在各机架平均分配值再加2。</span></span><br><span class="line"><span class="comment">// At this point, there are more than one racks and more than one replicas</span></span><br><span class="line">    <span class="comment">// to store. Avoid all replicas being in the same rack.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// maxNodesPerRack has the following properties at this stage.</span></span><br><span class="line">    <span class="comment">//   1) maxNodesPerRack &gt;= 2</span></span><br><span class="line">    <span class="comment">//   2) (maxNodesPerRack-1) * numOfRacks &gt; totalNumOfReplicas</span></span><br><span class="line">    <span class="comment">//          when numOfRacks &gt; 1</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// Thus, the following adjustment will still result in a value that forces</span></span><br><span class="line">    <span class="comment">// multi-rack allocation and gives enough number of total nodes.</span></span><br><span class="line">    <span class="keyword">if</span> (maxNodesPerRack == totalNumOfReplicas) &#123;</span><br><span class="line">      maxNodesPerRack--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;numOfReplicas, maxNodesPerRack&#125;;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="五：副本节点选择"><a href="#五：副本节点选择" class="headerlink" title="五：副本节点选择"></a>五：副本节点选择</h1><p><img src="/blog/b08a5f1f.html/image-20221215143227909.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：写数据流程&quot;&gt;&lt;a href=&quot;#一：写数据流程&quot; class=&quot;headerlink&quot; title=&quot;一：写数据流程&quot;&gt;&lt;/a&gt;一：写数据流程&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/blog/b08a5f1f.html/image-20221215135840</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>HDFS API操作</title>
    <link href="https://aiyingke.cn/blog/addda9af.html/"/>
    <id>https://aiyingke.cn/blog/addda9af.html/</id>
    <published>2022-12-15T01:54:22.000Z</published>
    <updated>2022-12-15T07:22:00.430Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：客户端环境准备"><a href="#一：客户端环境准备" class="headerlink" title="一：客户端环境准备"></a>一：客户端环境准备</h1><h2 id="1-1-下载并安装-Windows-依赖"><a href="#1-1-下载并安装-Windows-依赖" class="headerlink" title="1.1 下载并安装 Windows 依赖"></a>1.1 下载并安装 Windows 依赖</h2><p><a href="https://github.com/cdarlint/winutils">cdarlint&#x2F;winutils: winutils.exe hadoop.dll and hdfs.dll binaries for hadoop windows (github.com)</a></p><h2 id="1-2-配置环境变量"><a href="#1-2-配置环境变量" class="headerlink" title="1.2 配置环境变量"></a>1.2 配置环境变量</h2><p><img src="/blog/addda9af.html/image-20221215103203883.png"></p><p><img src="/blog/addda9af.html/image-20221215103253975.png"></p><h2 id="1-3-双击运行"><a href="#1-3-双击运行" class="headerlink" title="1.3 双击运行"></a>1.3 双击运行</h2><p><img src="/blog/addda9af.html/image-20221215103119736.png"></p><h1 id="二：IDEA-实例测试"><a href="#二：IDEA-实例测试" class="headerlink" title="二：IDEA 实例测试"></a>二：IDEA 实例测试</h1><h2 id="2-1-添加maven-依赖"><a href="#2-1-添加maven-依赖" class="headerlink" title="2.1 添加maven 依赖"></a>2.1 添加maven 依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.32<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-配置日志"><a href="#2-2-配置日志" class="headerlink" title="2.2 配置日志"></a>2.2 配置日志</h2><p>在项目的 src&#x2F;main&#x2F;resources 目录下，新建一个文件，命名为“log4j.properties”，在文件中填入：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">INFO, stdout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="string">%d %p [%c] - %m%n</span></span><br><span class="line"><span class="attr">log4j.appender.logfile</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="attr">log4j.appender.logfile.File</span>=<span class="string">target/spring.log</span></span><br><span class="line"><span class="attr">log4j.appender.logfile.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.logfile.layout.ConversionPattern</span>=<span class="string">%d %p [%c] - %m%n</span></span><br></pre></td></tr></table></figure><h2 id="2-3-代码实现"><a href="#2-3-代码实现" class="headerlink" title="2.3 代码实现"></a>2.3 代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aiyingke.hdfs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileSystem;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URISyntaxException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Rupert Tears</span></span><br><span class="line"><span class="comment"> * Date: Created in 10:51 2022/12/15</span></span><br><span class="line"><span class="comment"> * Description: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">hdfsClient</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMkdirs</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 1 获取文件系统</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop100:8020&quot;</span>), configuration, <span class="string">&quot;ghost&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2 创建目录</span></span><br><span class="line">        fileSystem.mkdirs(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/ghost&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3 关闭资源</span></span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-执行程序"><a href="#2-4-执行程序" class="headerlink" title="2.4 执行程序"></a>2.4 执行程序</h2><p>客户端去操作 HDFS 时，是有一个用户身份的。默认情况下，HDFS 客户端 API 会从采 用 Windows 默认用户访问 HDFS，会报权限异常错误。所以在访问 HDFS 时，一定要配置 用户。</p><h1 id="三：API-案例操作"><a href="#三：API-案例操作" class="headerlink" title="三：API 案例操作"></a>三：API 案例操作</h1><h2 id="3-1-HDFS-文件上传"><a href="#3-1-HDFS-文件上传" class="headerlink" title="3.1 HDFS 文件上传"></a>3.1 HDFS 文件上传</h2><h3 id="（1）代码实现"><a href="#（1）代码实现" class="headerlink" title="（1）代码实现"></a>（1）代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aiyingke.hdfs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileSystem;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URISyntaxException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Rupert Tears</span></span><br><span class="line"><span class="comment"> * Date: Created in 11:35 2022/12/15</span></span><br><span class="line"><span class="comment"> * Description: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiDemo</span> &#123;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCopyFromLocalFile</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 获取文件系统</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop100:8020&quot;</span>), configuration, <span class="string">&quot;ghost&quot;</span>);</span><br><span class="line">        <span class="comment">// 上传文件</span></span><br><span class="line">        fileSystem.copyFromLocalFile(<span class="literal">false</span>, <span class="literal">false</span>, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;Y:\\Temp\\lol.txt&quot;</span>), <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/lol/lol.txt&quot;</span>));</span><br><span class="line">        <span class="comment">// 关闭资源</span></span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（2）重构代码（代码模板）"><a href="#（2）重构代码（代码模板）" class="headerlink" title="（2）重构代码（代码模板）"></a>（2）重构代码（代码模板）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aiyingke.hdfs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileSystem;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URISyntaxException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Rupert Tears</span></span><br><span class="line"><span class="comment"> * Date: Created in 11:35 2022/12/15</span></span><br><span class="line"><span class="comment"> * Description: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FileSystem fileSystem;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 获取文件系统</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="comment">// Ctrl + F 提升作用域</span></span><br><span class="line">        fileSystem = FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop100:8020&quot;</span>), configuration, <span class="string">&quot;ghost&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 关闭资源</span></span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCopyFromLocalFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 上传文件</span></span><br><span class="line">        fileSystem.copyFromLocalFile(<span class="literal">true</span>, <span class="literal">true</span>, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;Y:\\Temp\\lol.txt&quot;</span>), <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/lol/lol.txt&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（3）参数优先级"><a href="#（3）参数优先级" class="headerlink" title="（3）参数优先级"></a>（3）参数优先级</h3><p>参数优先级排序：（1）客户端代码中设置的值 &gt;（2）ClassPath 下的用户自定义配置文 件 &gt;（3）然后是服务器的自定义配置（xxx-site.xml）&gt;（4）服务器的默认配置（xxx-default.xml）</p><p>将 hdfs-site.xml 拷贝到项目的 resources 资源目录下；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>Default block replication.</span><br><span class="line">            The actual number of replications can be specified when the file is created.</span><br><span class="line">            The default is used if replication is not specified in create time.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在代码中设置 副本数量测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aiyingke.hdfs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileSystem;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URISyntaxException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Rupert Tears</span></span><br><span class="line"><span class="comment"> * Date: Created in 11:35 2022/12/15</span></span><br><span class="line"><span class="comment"> * Description: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FileSystem fileSystem;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 获取文件系统</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        configuration.set(<span class="string">&quot;dfs.replication&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line">        <span class="comment">// Ctrl + F 提升作用域</span></span><br><span class="line">        fileSystem = FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop100:8020&quot;</span>), configuration, <span class="string">&quot;ghost&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 关闭资源</span></span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCopyFromLocalFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 上传文件</span></span><br><span class="line">        fileSystem.copyFromLocalFile(<span class="literal">false</span>, <span class="literal">true</span>, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;Y:\\Temp\\lol.txt&quot;</span>), <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/lol/lol.txt&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-HDFS-文件下载"><a href="#3-2-HDFS-文件下载" class="headerlink" title="3.2 HDFS 文件下载"></a>3.2 HDFS 文件下载</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCopyFromLocalFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 上传文件</span></span><br><span class="line">        fileSystem.copyFromLocalFile(<span class="literal">false</span>, <span class="literal">true</span>, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;Y:\\Temp\\lol.txt&quot;</span>), <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/lol/lol.txt&quot;</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-HDFS-文件更名和移动"><a href="#3-3-HDFS-文件更名和移动" class="headerlink" title="3.3 HDFS 文件更名和移动"></a>3.3 HDFS 文件更名和移动</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMv</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">// 修改文件名称</span></span><br><span class="line">    <span class="comment">// fileSystem.rename(new Path(&quot;/jinguo/weiguo.txt&quot;),new Path(&quot;/jinguo/wuguo.txt&quot;));</span></span><br><span class="line">    <span class="comment">// 移动并修改文件名称(目标地址目录必须存在)</span></span><br><span class="line">    fileSystem.rename(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/jinguo/shuguo.txt&quot;</span>), <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/sanguo/wangguo.txt&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-HDFS-删除文件和目录"><a href="#3-4-HDFS-删除文件和目录" class="headerlink" title="3.4 HDFS 删除文件和目录"></a>3.4 HDFS 删除文件和目录</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">// fileSystem.delete(new Path(&quot;/sanguo&quot;), true);</span></span><br><span class="line">    fileSystem.delete(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/jinguo/wuguo.txt&quot;</span>), <span class="literal">true</span>);  <span class="comment">// 仅删除文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-5-HDFS-文件详情查看"><a href="#3-5-HDFS-文件详情查看" class="headerlink" title="3.5 HDFS 文件详情查看"></a>3.5 HDFS 文件详情查看</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFileInfo</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 空目录会跳过</span></span><br><span class="line">       RemoteIterator&lt;LocatedFileStatus&gt; remoteIterator = fileSystem.listFiles(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/&quot;</span>), <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">while</span> (remoteIterator.hasNext()) &#123;</span><br><span class="line">           <span class="type">LocatedFileStatus</span> <span class="variable">fileStatus</span> <span class="operator">=</span> remoteIterator.next();</span><br><span class="line">           System.out.println(<span class="string">&quot;======&quot;</span> + fileStatus.getPath() + <span class="string">&quot;======&quot;</span>);</span><br><span class="line">           System.out.println(fileStatus.getPermission());</span><br><span class="line">           System.out.println(fileStatus.getOwner());</span><br><span class="line">           System.out.println(fileStatus.getGroup());</span><br><span class="line">           System.out.println(fileStatus.getLen());</span><br><span class="line">           System.out.println(fileStatus.getModificationTime());</span><br><span class="line">           System.out.println(fileStatus.getReplication());</span><br><span class="line">           System.out.println(fileStatus.getBlockSize());</span><br><span class="line">           System.out.println(fileStatus.getPath().getName());</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 获取块信息</span></span><br><span class="line">           BlockLocation[] blockLocations = fileStatus.getBlockLocations();</span><br><span class="line">           System.out.println(Arrays.toString(blockLocations));</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-HDFS-文件和文件夹判断"><a href="#3-6-HDFS-文件和文件夹判断" class="headerlink" title="3.6 HDFS 文件和文件夹判断"></a>3.6 HDFS 文件和文件夹判断</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testListStatus</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">       <span class="keyword">final</span> FileStatus[] fileStatuses = fileSystem.listStatus(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/&quot;</span>));</span><br><span class="line">       <span class="keyword">for</span> (FileStatus fileStatus : fileStatuses) &#123;</span><br><span class="line">           <span class="comment">// 如果是文件</span></span><br><span class="line">           <span class="keyword">if</span> (fileStatus.isFile()) &#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;file:&quot;</span> + fileStatus.getPath().getName());</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;dir:&quot;</span> + fileStatus.getPath().getName());</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="3-7-全部代码"><a href="#3-7-全部代码" class="headerlink" title="3.7 全部代码"></a>3.7 全部代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aiyingke.hdfs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.*;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URISyntaxException;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Rupert Tears</span></span><br><span class="line"><span class="comment"> * Date: Created in 11:35 2022/12/15</span></span><br><span class="line"><span class="comment"> * Description: Thought is already is late, exactly is the earliest time.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FileSystem fileSystem;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 获取文件系统</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        configuration.set(<span class="string">&quot;dfs.replication&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line">        <span class="comment">// Ctrl + F 提升作用域</span></span><br><span class="line">        fileSystem = FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop100:8020&quot;</span>), configuration, <span class="string">&quot;ghost&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 关闭资源</span></span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCopyFromLocalFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 上传文件</span></span><br><span class="line">        fileSystem.copyFromLocalFile(<span class="literal">false</span>, <span class="literal">true</span>, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;Y:\\Temp\\lol.txt&quot;</span>), <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/lol/lol.txt&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCopyToLocalFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        fileSystem.copyToLocalFile(<span class="literal">false</span>, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/jinguo&quot;</span>), <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;Y:\\Temp\\&quot;</span>), <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMv</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 修改文件名称</span></span><br><span class="line">        <span class="comment">// fileSystem.rename(new Path(&quot;/jinguo/weiguo.txt&quot;),new Path(&quot;/jinguo/wuguo.txt&quot;));</span></span><br><span class="line">        <span class="comment">// 移动并修改文件名称(目标地址目录必须存在)</span></span><br><span class="line">        fileSystem.rename(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/jinguo/shuguo.txt&quot;</span>), <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/sanguo/wangguo.txt&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// fileSystem.delete(new Path(&quot;/sanguo&quot;), true);</span></span><br><span class="line">        fileSystem.delete(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/jinguo/wuguo.txt&quot;</span>), <span class="literal">true</span>);  <span class="comment">// 仅删除文件</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFileInfo</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 空目录会跳过</span></span><br><span class="line">        RemoteIterator&lt;LocatedFileStatus&gt; remoteIterator = fileSystem.listFiles(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/&quot;</span>), <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (remoteIterator.hasNext()) &#123;</span><br><span class="line">            <span class="type">LocatedFileStatus</span> <span class="variable">fileStatus</span> <span class="operator">=</span> remoteIterator.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;======&quot;</span> + fileStatus.getPath() + <span class="string">&quot;======&quot;</span>);</span><br><span class="line">            System.out.println(fileStatus.getPermission());</span><br><span class="line">            System.out.println(fileStatus.getOwner());</span><br><span class="line">            System.out.println(fileStatus.getGroup());</span><br><span class="line">            System.out.println(fileStatus.getLen());</span><br><span class="line">            System.out.println(fileStatus.getModificationTime());</span><br><span class="line">            System.out.println(fileStatus.getReplication());</span><br><span class="line">            System.out.println(fileStatus.getBlockSize());</span><br><span class="line">            System.out.println(fileStatus.getPath().getName());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取块信息</span></span><br><span class="line">            BlockLocation[] blockLocations = fileStatus.getBlockLocations();</span><br><span class="line">            System.out.println(Arrays.toString(blockLocations));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testListStatus</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">final</span> FileStatus[] fileStatuses = fileSystem.listStatus(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/&quot;</span>));</span><br><span class="line">        <span class="keyword">for</span> (FileStatus fileStatus : fileStatuses) &#123;</span><br><span class="line">            <span class="comment">// 如果是文件</span></span><br><span class="line">            <span class="keyword">if</span> (fileStatus.isFile()) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;file:&quot;</span> + fileStatus.getPath().getName());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;dir:&quot;</span> + fileStatus.getPath().getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：客户端环境准备&quot;&gt;&lt;a href=&quot;#一：客户端环境准备&quot; class=&quot;headerlink&quot; title=&quot;一：客户端环境准备&quot;&gt;&lt;/a&gt;一：客户端环境准备&lt;/h1&gt;&lt;h2 id=&quot;1-1-下载并安装-Windows-依赖&quot;&gt;&lt;a href=&quot;#1-1-下</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>HDFS shell操作</title>
    <link href="https://aiyingke.cn/blog/d3bc9b59.html/"/>
    <id>https://aiyingke.cn/blog/d3bc9b59.html/</id>
    <published>2022-12-14T10:37:15.000Z</published>
    <updated>2022-12-14T11:38:20.635Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：基本语法"><a href="#一：基本语法" class="headerlink" title="一：基本语法"></a>一：基本语法</h1><ul><li>hadoop fs 具体命令</li><li>hdfs dfs 具体命令</li><li>两者是完全相同的！</li></ul><h1 id="二：命令大全"><a href="#二：命令大全" class="headerlink" title="二：命令大全"></a>二：命令大全</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 ~]$ hdfs dfs</span><br><span class="line">Usage: hadoop fs [generic options]</span><br><span class="line">[-appendToFile &lt;localsrc&gt; ... &lt;dst&gt;]</span><br><span class="line">[-cat [-ignoreCrc] &lt;src&gt; ...]</span><br><span class="line">[-checksum [-v] &lt;src&gt; ...]</span><br><span class="line">[-chgrp [-R] GROUP PATH...]</span><br><span class="line">[-chmod [-R] &lt;MODE[,MODE]... | OCTALMODE&gt; PATH...]</span><br><span class="line">[-chown [-R] [OWNER][:[GROUP]] PATH...]</span><br><span class="line">[-concat &lt;target path&gt; &lt;src path&gt; &lt;src path&gt; ...]</span><br><span class="line">[-copyFromLocal [-f] [-p] [-l] [-d] [-t &lt;thread count&gt;] [-q &lt;thread pool queue size&gt;] &lt;localsrc&gt; ... &lt;dst&gt;]</span><br><span class="line">[-copyToLocal [-f] [-p] [-crc] [-ignoreCrc] [-t &lt;thread count&gt;] [-q &lt;thread pool queue size&gt;] &lt;src&gt; ... &lt;localdst&gt;]</span><br><span class="line">[-count [-q] [-h] [-v] [-t [&lt;storage type&gt;]] [-u] [-x] [-e] [-s] &lt;path&gt; ...]</span><br><span class="line">[-cp [-f] [-p | -p[topax]] [-d] [-t &lt;thread count&gt;] [-q &lt;thread pool queue size&gt;] &lt;src&gt; ... &lt;dst&gt;]</span><br><span class="line">[-createSnapshot &lt;snapshotDir&gt; [&lt;snapshotName&gt;]]</span><br><span class="line">[-deleteSnapshot &lt;snapshotDir&gt; &lt;snapshotName&gt;]</span><br><span class="line">[-df [-h] [&lt;path&gt; ...]]</span><br><span class="line">[-du [-s] [-h] [-v] [-x] &lt;path&gt; ...]</span><br><span class="line">[-expunge [-immediate] [-fs &lt;path&gt;]]</span><br><span class="line">[-find &lt;path&gt; ... &lt;expression&gt; ...]</span><br><span class="line">[-get [-f] [-p] [-crc] [-ignoreCrc] [-t &lt;thread count&gt;] [-q &lt;thread pool queue size&gt;] &lt;src&gt; ... &lt;localdst&gt;]</span><br><span class="line">[-getfacl [-R] &lt;path&gt;]</span><br><span class="line">[-getfattr [-R] &#123;-n name | -d&#125; [-e en] &lt;path&gt;]</span><br><span class="line">[-getmerge [-nl] [-skip-empty-file] &lt;src&gt; &lt;localdst&gt;]</span><br><span class="line">[-head &lt;file&gt;]</span><br><span class="line">[-help [cmd ...]]</span><br><span class="line">[-ls [-C] [-d] [-h] [-q] [-R] [-t] [-S] [-r] [-u] [-e] [&lt;path&gt; ...]]</span><br><span class="line">[-mkdir [-p] &lt;path&gt; ...]</span><br><span class="line">[-moveFromLocal [-f] [-p] [-l] [-d] &lt;localsrc&gt; ... &lt;dst&gt;]</span><br><span class="line">[-moveToLocal &lt;src&gt; &lt;localdst&gt;]</span><br><span class="line">[-mv &lt;src&gt; ... &lt;dst&gt;]</span><br><span class="line">[-put [-f] [-p] [-l] [-d] [-t &lt;thread count&gt;] [-q &lt;thread pool queue size&gt;] &lt;localsrc&gt; ... &lt;dst&gt;]</span><br><span class="line">[-renameSnapshot &lt;snapshotDir&gt; &lt;oldName&gt; &lt;newName&gt;]</span><br><span class="line">[-rm [-f] [-r|-R] [-skipTrash] [-safely] &lt;src&gt; ...]</span><br><span class="line">[-rmdir [--ignore-fail-on-non-empty] &lt;dir&gt; ...]</span><br><span class="line">[-setfacl [-R] [&#123;-b|-k&#125; &#123;-m|-x &lt;acl_spec&gt;&#125; &lt;path&gt;]|[--set &lt;acl_spec&gt; &lt;path&gt;]]</span><br><span class="line">[-setfattr &#123;-n name [-v value] | -x name&#125; &lt;path&gt;]</span><br><span class="line">[-setrep [-R] [-w] &lt;rep&gt; &lt;path&gt; ...]</span><br><span class="line">[-stat [format] &lt;path&gt; ...]</span><br><span class="line">[-tail [-f] [-s &lt;sleep interval&gt;] &lt;file&gt;]</span><br><span class="line">[-test -[defswrz] &lt;path&gt;]</span><br><span class="line">[-text [-ignoreCrc] &lt;src&gt; ...]</span><br><span class="line">[-touch [-a] [-m] [-t TIMESTAMP (yyyyMMdd:HHmmss) ] [-c] &lt;path&gt; ...]</span><br><span class="line">[-touchz &lt;path&gt; ...]</span><br><span class="line">[-truncate [-w] &lt;length&gt; &lt;path&gt; ...]</span><br><span class="line">[-usage [cmd ...]]</span><br><span class="line"></span><br><span class="line">Generic options supported are:</span><br><span class="line">-conf &lt;configuration file&gt;        specify an application configuration file</span><br><span class="line">-D &lt;property=value&gt;               define a value for a given property</span><br><span class="line">-fs &lt;file:///|hdfs://namenode:port&gt; specify default filesystem URL to use, overrides &#x27;fs.defaultFS&#x27; property from configurations.</span><br><span class="line">-jt &lt;local|resourcemanager:port&gt;  specify a ResourceManager</span><br><span class="line">-files &lt;file1,...&gt;                specify a comma-separated list of files to be copied to the map reduce cluster</span><br><span class="line">-libjars &lt;jar1,...&gt;               specify a comma-separated list of jar files to be included in the classpath</span><br><span class="line">-archives &lt;archive1,...&gt;          specify a comma-separated list of archives to be unarchived on the compute machines</span><br><span class="line"></span><br><span class="line">The general command line syntax is:</span><br><span class="line">command [genericOptions] [commandOptions]</span><br></pre></td></tr></table></figure><h1 id="三：常用命令实操"><a href="#三：常用命令实操" class="headerlink" title="三：常用命令实操"></a>三：常用命令实操</h1><h2 id="3-1-准备工作"><a href="#3-1-准备工作" class="headerlink" title="3.1 准备工作"></a>3.1 准备工作</h2><ul><li><p>启动 Hadoop 集群</p></li><li><p>-help：查看对应命令的解释</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 ~]$ hdfs dfs -help du</span><br><span class="line">-du [-s] [-h] [-v] [-x] &lt;path&gt; ... :</span><br><span class="line">  Show the amount of space, in bytes, used by the files that match the specified</span><br><span class="line">  file pattern. The following flags are optional:</span><br><span class="line">                                                                                 </span><br><span class="line">  -s  Rather than showing the size of each individual file that matches the      </span><br><span class="line">      pattern, shows the total (summary) size.                                   </span><br><span class="line">  -h  Formats the sizes of files in a human-readable fashion rather than a number</span><br><span class="line">      of bytes.                                                                  </span><br><span class="line">  -v  option displays a header line.                                             </span><br><span class="line">  -x  Excludes snapshots from being counted.                                     </span><br><span class="line">  </span><br><span class="line">  Note that, even without the -s option, this only shows size summaries one level</span><br><span class="line">  deep into a directory.</span><br><span class="line">  </span><br><span class="line">  The output is in the form </span><br><span class="line">  sizedisk space consumedname(full path)</span><br></pre></td></tr></table></figure></li><li><p>创建 &#x2F;sanguo 文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 ~]$ hdfs dfs -mkdir /sanguo</span><br></pre></td></tr></table></figure><p><a href="http://hadoop100:9870/explorer.html#/">Browsing HDFS</a></p></li></ul><h2 id="3-2-上传"><a href="#3-2-上传" class="headerlink" title="3.2 上传"></a>3.2 上传</h2><h3 id="（1）-moveFromLocal：从本地剪切粘贴到-HDFS"><a href="#（1）-moveFromLocal：从本地剪切粘贴到-HDFS" class="headerlink" title="（1）-moveFromLocal：从本地剪切粘贴到 HDFS"></a>（1）-moveFromLocal：从本地剪切粘贴到 HDFS</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 tmp]$ hdfs dfs -moveFromLocal ./shuguo.txt /sanguo</span><br></pre></td></tr></table></figure><h3 id="（2）-copyFromLocal：从本地文件系统中拷贝文件到-HDFS-路径去"><a href="#（2）-copyFromLocal：从本地文件系统中拷贝文件到-HDFS-路径去" class="headerlink" title="（2）-copyFromLocal：从本地文件系统中拷贝文件到 HDFS 路径去"></a>（2）-copyFromLocal：从本地文件系统中拷贝文件到 HDFS 路径去</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 tmp]$ hdfs dfs -copyFromLocal ./shuguo2.txt /sanguo</span><br></pre></td></tr></table></figure><h3 id="（3）-put：等同于-copyFromLocal，生产环境更习惯用-put"><a href="#（3）-put：等同于-copyFromLocal，生产环境更习惯用-put" class="headerlink" title="（3）-put：等同于 copyFromLocal，生产环境更习惯用 put"></a>（3）-put：等同于 copyFromLocal，生产环境更习惯用 put</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 tmp]$ hdfs dfs -put ./weiguo.txt /sanguo</span><br></pre></td></tr></table></figure><h3 id="（4）-appendToFile：追加一个文件到已经存在的文件末尾"><a href="#（4）-appendToFile：追加一个文件到已经存在的文件末尾" class="headerlink" title="（4）-appendToFile：追加一个文件到已经存在的文件末尾"></a>（4）-appendToFile：追加一个文件到已经存在的文件末尾</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 tmp]$ hdfs dfs -appendToFile ./wuguo.txt /sanguo/shuguo2.txt</span><br></pre></td></tr></table></figure><h2 id="3-3-下载"><a href="#3-3-下载" class="headerlink" title="3.3 下载"></a>3.3 下载</h2><h3 id="（1）-copyToLocal：从HDFS拷贝到本地"><a href="#（1）-copyToLocal：从HDFS拷贝到本地" class="headerlink" title="（1）-copyToLocal：从HDFS拷贝到本地"></a>（1）-copyToLocal：从HDFS拷贝到本地</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -copyToLocal /sanguo/shuguo.txt ./</span><br></pre></td></tr></table></figure><h3 id="（2）-get：等同于-copyToLocal，生产环境惯用"><a href="#（2）-get：等同于-copyToLocal，生产环境惯用" class="headerlink" title="（2）-get：等同于 -copyToLocal，生产环境惯用"></a>（2）-get：等同于 -copyToLocal，生产环境惯用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -get /sanguo/shuguo2.txt ./</span><br></pre></td></tr></table></figure><h2 id="3-4-HDFS-直接操作"><a href="#3-4-HDFS-直接操作" class="headerlink" title="3.4  HDFS 直接操作"></a>3.4  HDFS 直接操作</h2><h3 id="（1）-ls-显示目录信息"><a href="#（1）-ls-显示目录信息" class="headerlink" title="（1）-ls: 显示目录信息"></a>（1）-ls: 显示目录信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -ls /</span><br><span class="line">Found 2 items</span><br><span class="line">drwxr-xr-x   - ghost supergroup          0 2022-12-14 19:15 /sanguo</span><br><span class="line">drwxrwx---   - ghost supergroup          0 2022-12-14 15:24 /tmp</span><br></pre></td></tr></table></figure><h3 id="（2）-cat：显示文件内容"><a href="#（2）-cat：显示文件内容" class="headerlink" title="（2）-cat：显示文件内容"></a>（2）-cat：显示文件内容</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -cat /sanguo/shuguo.txt</span><br><span class="line">shuguo</span><br></pre></td></tr></table></figure><h3 id="（3）-chgrp、-chmod、-chown：Linux-文件系统中的用法一样，修改文件所属权限"><a href="#（3）-chgrp、-chmod、-chown：Linux-文件系统中的用法一样，修改文件所属权限" class="headerlink" title="（3）-chgrp、-chmod、-chown：Linux 文件系统中的用法一样，修改文件所属权限"></a>（3）-chgrp、-chmod、-chown：Linux 文件系统中的用法一样，修改文件所属权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -chown ghost:ghost /sanguo/shuguo.txt</span><br></pre></td></tr></table></figure><h3 id="（4）-mkdir：创建路径"><a href="#（4）-mkdir：创建路径" class="headerlink" title="（4）-mkdir：创建路径"></a>（4）-mkdir：创建路径</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -mkdir /jinguo</span><br></pre></td></tr></table></figure><h3 id="（5）-cp：从-HDFS-的一个路径拷贝到-HDFS-的另一个路径"><a href="#（5）-cp：从-HDFS-的一个路径拷贝到-HDFS-的另一个路径" class="headerlink" title="（5）-cp：从 HDFS 的一个路径拷贝到 HDFS 的另一个路径"></a>（5）-cp：从 HDFS 的一个路径拷贝到 HDFS 的另一个路径</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs  -cp /sanguo/* /jinguo</span><br></pre></td></tr></table></figure><h3 id="（6）-mv：在-HDFS-目录中移动文件"><a href="#（6）-mv：在-HDFS-目录中移动文件" class="headerlink" title="（6）-mv：在 HDFS 目录中移动文件"></a>（6）-mv：在 HDFS 目录中移动文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -mv /sanguo /jinguo</span><br></pre></td></tr></table></figure><h3 id="（7）-tail：显示一个文件的末尾-1kb-的数据"><a href="#（7）-tail：显示一个文件的末尾-1kb-的数据" class="headerlink" title="（7）-tail：显示一个文件的末尾 1kb 的数据"></a>（7）-tail：显示一个文件的末尾 1kb 的数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -tail /jinguo/weiguo.txt</span><br></pre></td></tr></table></figure><h3 id="（8）-rm：删除文件或文件夹"><a href="#（8）-rm：删除文件或文件夹" class="headerlink" title="（8）-rm：删除文件或文件夹"></a>（8）-rm：删除文件或文件夹</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -rm /sanguo/shuguo2.txt</span><br></pre></td></tr></table></figure><h3 id="（9）-rm-r：递归删除目录及目录里面内容"><a href="#（9）-rm-r：递归删除目录及目录里面内容" class="headerlink" title="（9）-rm -r：递归删除目录及目录里面内容"></a>（9）-rm -r：递归删除目录及目录里面内容</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">jinguo 文件夹也被删除</span></span><br><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -rm -r /jinguo/</span><br></pre></td></tr></table></figure><h3 id="（10）-du-统计文件夹的大小信息"><a href="#（10）-du-统计文件夹的大小信息" class="headerlink" title="（10）-du 统计文件夹的大小信息"></a>（10）-du 统计文件夹的大小信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -du /jinguo</span><br><span class="line">7  21  /jinguo/shuguo.txt</span><br><span class="line">7  21  /jinguo/weiguo.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看总容量</span></span><br><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -du -s /jinguo</span><br><span class="line">14  42  /jinguo</span><br></pre></td></tr></table></figure><h3 id="（11）-setrep：设置-HDFS-中文件的副本数量"><a href="#（11）-setrep：设置-HDFS-中文件的副本数量" class="headerlink" title="（11）-setrep：设置 HDFS 中文件的副本数量"></a>（11）-setrep：设置 HDFS 中文件的副本数量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 sanguo]$ hdfs dfs -setrep 2 /jinguo/weiguo.txt</span><br></pre></td></tr></table></figure><p>这里设置的副本数只是记录在 NameNode 的元数据中，是否真的会有这么多副本，还得 看 DataNode 的数量。因为目前只有 3 台设备，最多也就 3 个副本，只有节点数的增加到 10 台时，副本数才能达到 10。同一份副本一个节点上只会存一份！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：基本语法&quot;&gt;&lt;a href=&quot;#一：基本语法&quot; class=&quot;headerlink&quot; title=&quot;一：基本语法&quot;&gt;&lt;/a&gt;一：基本语法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;hadoop fs 具体命令&lt;/li&gt;
&lt;li&gt;hdfs dfs 具体命令&lt;/li&gt;
&lt;li&gt;两</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>HDFS 概述</title>
    <link href="https://aiyingke.cn/blog/5e263552.html/"/>
    <id>https://aiyingke.cn/blog/5e263552.html/</id>
    <published>2022-12-14T08:47:11.000Z</published>
    <updated>2022-12-14T09:07:07.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：HDFS-产出背景及定义"><a href="#一：HDFS-产出背景及定义" class="headerlink" title="一：HDFS 产出背景及定义"></a>一：HDFS 产出背景及定义</h1><h2 id="1-1-HDFS-产生背景"><a href="#1-1-HDFS-产生背景" class="headerlink" title="1.1 HDFS 产生背景"></a>1.1 HDFS 产生背景</h2><p>随着数据量越来越大，在一个操作系统存不下所有的数据，那么就分配到更多的操作系 统管理的磁盘中，但是不方便管理和维护，<code>迫切需要一种系统来管理多台机器上的文件</code>，这 就是分布式文件管理系统。<code>HDFS 只是分布式文件管理系统中的一种。</code></p><h2 id="1-2-HDFS-定义"><a href="#1-2-HDFS-定义" class="headerlink" title="1.2 HDFS 定义"></a>1.2 HDFS 定义</h2><p>HDFS（Hadoop Distributed File System），它是一个文件系统，用于存储文件，通过目 录树来定位文件；其次，它是分布式的，由很多服务器联合起来实现其功能，集群中的服务 器有各自的角色。</p><p>HDFS 的使用场景：适合一次写入，多次读出的场景。一个文件经过创建、写入和关闭之后就不需要改变。</p><h1 id="二：HDFS-优缺点"><a href="#二：HDFS-优缺点" class="headerlink" title="二：HDFS 优缺点"></a>二：HDFS 优缺点</h1><h2 id="2-1-HDFS优点"><a href="#2-1-HDFS优点" class="headerlink" title="2.1 HDFS优点"></a>2.1 HDFS优点</h2><h3 id="（1）高容错性"><a href="#（1）高容错性" class="headerlink" title="（1）高容错性"></a>（1）高容错性</h3><ul><li>数据自动保存多个副本。它通过增加副本的形式，提高容错性。</li><li><img src="/blog/5e263552.html/image-20221214165254472.png"></li><li>某一个副本丢失以后，它可以自动恢复。</li><li><img src="/blog/5e263552.html/image-20221214165308416.png"></li></ul><h3 id="（2）适合处理大数据"><a href="#（2）适合处理大数据" class="headerlink" title="（2）适合处理大数据"></a>（2）适合处理大数据</h3><ul><li>数据规模：能够处理数据规模达到GB、TB、甚至PB级别的数据；</li><li>文件规模：能够处理百万规模以上的文件数量，数量相当之大。</li></ul><h3 id="（3）经济因素"><a href="#（3）经济因素" class="headerlink" title="（3）经济因素"></a>（3）经济因素</h3><ul><li>可构建在廉价机器上，通过多副本机制，提高可靠性。</li></ul><h2 id="2-2-HDFS缺点"><a href="#2-2-HDFS缺点" class="headerlink" title="2.2 HDFS缺点"></a>2.2 HDFS缺点</h2><h3 id="（1）不适合低延时数据访问"><a href="#（1）不适合低延时数据访问" class="headerlink" title="（1）不适合低延时数据访问"></a>（1）不适合低延时数据访问</h3><ul><li>比如毫秒级的存储数据，是做不到的。</li></ul><h3 id="（2）无法高效的对大量小文件进行存储"><a href="#（2）无法高效的对大量小文件进行存储" class="headerlink" title="（2）无法高效的对大量小文件进行存储"></a>（2）无法高效的对大量小文件进行存储</h3><ul><li>存储大量小文件的话，它会占用NameNode大量的内存来存储文件目录和 块信息。这样是不可取的，因为NameNode的内存总是有限的；</li><li>小文件存储的寻址时间会超过读取时间，它违反了HDFS的设计目标。</li></ul><h3 id="（3）不支持并发写入、文件随机修改"><a href="#（3）不支持并发写入、文件随机修改" class="headerlink" title="（3）不支持并发写入、文件随机修改"></a>（3）不支持并发写入、文件随机修改</h3><ul><li>一个文件只能有一个写，不允许多个线程同时写；</li><li>仅支持数据append（追加），不支持文件的随机修改。</li></ul><p><img src="/blog/5e263552.html/image-20221214165536477.png"></p><h1 id="三：HDFS-组成架构"><a href="#三：HDFS-组成架构" class="headerlink" title="三：HDFS 组成架构"></a>三：HDFS 组成架构</h1><h2 id="3-1-官方详解"><a href="#3-1-官方详解" class="headerlink" title="3.1 官方详解"></a>3.1 官方详解</h2><p><a href="https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html">Apache Hadoop 3.3.4 – HDFS Architecture</a></p><p><img src="/blog/5e263552.html/image-20221214165844098.png"></p><h2 id="3-2-NameNode"><a href="#3-2-NameNode" class="headerlink" title="3.2 NameNode"></a>3.2 NameNode</h2><ul><li>NameNode（nn）：就是Master，它 是一个主管、管理者。<ul><li>管理HDFS的名称空间；</li><li>配置副本策略；</li><li>管理数据块（Block）映射信息；</li><li>处理客户端读写请求。</li></ul></li></ul><h2 id="3-3-DataNode"><a href="#3-3-DataNode" class="headerlink" title="3.3 DataNode"></a>3.3 DataNode</h2><ul><li>DataNode：就是Slave。NameNode 下达命令，DataNode执行实际的操作。<ul><li>存储实际的数据块；</li><li>执行数据块的读&#x2F;写操作。</li></ul></li></ul><h2 id="3-4-Client"><a href="#3-4-Client" class="headerlink" title="3.4 Client"></a>3.4 Client</h2><ul><li>Client：就是客户端。<ul><li>文件切分。文件上传HDFS的时候，Client将文件切分成一个一个的Block，然后进行上传；</li><li>与NameNode交互，获取文件的位置信息；</li><li>与DataNode交互，读取或者写入数据；</li><li>Client提供一些命令来管理HDFS，比如NameNode格式化；</li><li>Client可以通过一些命令来访问HDFS，比如对HDFS增删查改操作；</li></ul></li></ul><h2 id="3-5-Secondary-NameNode"><a href="#3-5-Secondary-NameNode" class="headerlink" title="3.5 Secondary NameNode"></a>3.5 Secondary NameNode</h2><ul><li>Secondary NameNode：并非NameNode的热备。当NameNode挂掉的时候，它并不 能马上替换NameNode并提供服务。<ul><li>辅助NameNode，分担其工作量，比如定期合并Fsimage和Edits，并推送给NameNode ；</li><li>在紧急情况下，可辅助恢复NameNode。</li></ul></li></ul><h1 id="四：HDFS-文件块大小"><a href="#四：HDFS-文件块大小" class="headerlink" title="四：HDFS 文件块大小"></a>四：HDFS 文件块大小</h1><h2 id="4-1-Block-块大小"><a href="#4-1-Block-块大小" class="headerlink" title="4.1 Block 块大小"></a>4.1 Block 块大小</h2><p><img src="/blog/5e263552.html/image-20221214170233975.png"></p><ul><li>由磁盘的传输速率来决定block块大小<ul><li>当使用机械硬盘时，通常为100MB&#x2F;s，由于在计算机中1024为进制单元，故而采用128M；</li><li>当使用固态硬盘时，通常能达到200MB&#x2F;s，因此 block 块大小通常设置为256M；</li></ul></li></ul><h2 id="4-2-为什么块的大小不能设置太小，也不能设置太大？"><a href="#4-2-为什么块的大小不能设置太小，也不能设置太大？" class="headerlink" title="4.2 为什么块的大小不能设置太小，也不能设置太大？"></a>4.2 为什么块的大小不能设置太小，也不能设置太大？</h2><ul><li>HDFS的块设置太小，会增加寻址时间，程序一直在找块的开始位置；</li><li>）如果块设置的太大，从磁盘传输数据的时间会明显大于定位这个块开 始位置所需的时间。导致程序在处理这块数据时，会非常慢。</li><li>HDFS块的大小设置主要取决于磁盘传输速率。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：HDFS-产出背景及定义&quot;&gt;&lt;a href=&quot;#一：HDFS-产出背景及定义&quot; class=&quot;headerlink&quot; title=&quot;一：HDFS 产出背景及定义&quot;&gt;&lt;/a&gt;一：HDFS 产出背景及定义&lt;/h1&gt;&lt;h2 id=&quot;1-1-HDFS-产生背景&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop 运行模式</title>
    <link href="https://aiyingke.cn/blog/6ae4aefa.html/"/>
    <id>https://aiyingke.cn/blog/6ae4aefa.html/</id>
    <published>2022-12-13T10:04:29.000Z</published>
    <updated>2022-12-14T08:16:44.475Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：运行模式概述"><a href="#一：运行模式概述" class="headerlink" title="一：运行模式概述"></a>一：运行模式概述</h1><ul><li>Hadoop 官方网站：<a href="http://hadoop.apache.org/">http://hadoop.apache.org/</a></li><li>Hadoop 运行模式包括：本地模式、伪分布式模式以及完全分布式模式。<ul><li>本地模式：单机运行，可以执行官方案例。生产环境不用。</li><li>伪分布式模式：也是单机运行，但是具备 Hadoop 集群的所有功能，一台服务器模 拟一个分布式的环境。生产环境不用。</li><li>完全分布式模式：多台服务器组成分布式环境。生产环境使用。</li></ul></li></ul><h1 id="二：本地运行模式"><a href="#二：本地运行模式" class="headerlink" title="二：本地运行模式"></a>二：本地运行模式</h1><p>演示官方WordCount案例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建目录</span></span><br><span class="line">[root@hadoop100 hadoop-3.3.4]# mkdir wcinput</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文件</span></span><br><span class="line">[root@hadoop100 wcinput]# vim word.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看文件内容</span></span><br><span class="line">[root@hadoop100 wcinput]# cat word.txt </span><br><span class="line">ghost ghost</span><br><span class="line">sum moon</span><br><span class="line">hadoop hdfs</span><br><span class="line">mapreduce spark</span><br><span class="line">hdfs hive</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行 wordcount 命令</span></span><br><span class="line">[root@hadoop100 hadoop-3.3.4]# hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.4.jar wordcount wcinput/ wcoutput</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看输出文件</span></span><br><span class="line">[root@hadoop100 wcoutput]# ll</span><br><span class="line">总用量 4</span><br><span class="line">-rw-r--r--. 1 root root 64 12月 13 18:48 part-r-00000</span><br><span class="line">-rw-r--r--. 1 root root  0 12月 13 18:48 _SUCCESS</span><br><span class="line">[root@hadoop100 wcoutput]# cat part-r-00000 </span><br><span class="line">ghost2</span><br><span class="line">hadoop1</span><br><span class="line">hdfs2</span><br><span class="line">hive1</span><br><span class="line">mapreduce1</span><br><span class="line">moon1</span><br><span class="line">spark1</span><br><span class="line">sum1</span><br></pre></td></tr></table></figure><h1 id="三：完全分布式模式"><a href="#三：完全分布式模式" class="headerlink" title="三：完全分布式模式"></a>三：完全分布式模式</h1><h2 id="3-1-三台虚拟机准备"><a href="#3-1-三台虚拟机准备" class="headerlink" title="3.1 三台虚拟机准备"></a>3.1 三台虚拟机准备</h2><p>hadoop100、hadoop101、hadoop102</p><p>1）准备 3 台客户机（关闭防火墙、静态 IP、主机名称） </p><p>2）安装 JDK </p><p>3）配置环境变量 </p><p>4）安装 Hadoop </p><p>5）配置环境变量</p><p>6）配置集群</p><p>7）单点启动 </p><p>8）配置 ssh </p><p>9）群起并测试集群</p><h2 id="3-2-编写集群分发脚本-xsync"><a href="#3-2-编写集群分发脚本-xsync" class="headerlink" title="3.2 编写集群分发脚本 xsync"></a>3.2 编写集群分发脚本 xsync</h2><h3 id="3-2-1-scp（secure-copy）安全拷贝"><a href="#3-2-1-scp（secure-copy）安全拷贝" class="headerlink" title="3.2.1 scp（secure copy）安全拷贝"></a>3.2.1 scp（secure copy）安全拷贝</h3><h4 id="（1）scp-定义"><a href="#（1）scp-定义" class="headerlink" title="（1）scp 定义"></a>（1）scp 定义</h4><p>scp 可以实现服务器与服务器之间的数据拷贝。（from server1 to server2）</p><h4 id="（2）基本语法"><a href="#（2）基本语法" class="headerlink" title="（2）基本语法"></a>（2）基本语法</h4><p><img src="/blog/6ae4aefa.html/image-20221213185710855.png"></p><h4 id="（3）案例实操"><a href="#（3）案例实操" class="headerlink" title="（3）案例实操"></a>（3）案例实操</h4><p>前提：在 hadoop100、hadoop101、hadoop102 都已经创建好的&#x2F;opt&#x2F;module、  &#x2F;opt&#x2F;software 两个目录，并且已经把这两个目录修改为 ghost:ghost</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 ~] # chown ghost:ghost -R /opt/module</span><br><span class="line">[root@hadoop100 ~] # chown ghost:ghost -R /opt/software</span><br></pre></td></tr></table></figure><p>在 hadoop100 上，将 hadoop100 中&#x2F;opt&#x2F;module&#x2F;jdk1.8.0_301 目录拷贝到 hadoop101 上。（推）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 model]$ scp -r /opt/model/jdk1.8.0_301/ ghost@hadoop101:/opt/module/</span><br></pre></td></tr></table></figure><p>在 hadoop101 上，将 hadoop100 中&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4 目录拷贝到 hadoop101 上。（拉）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop101 ~]$ scp -r ghost@hadoop100:/opt/module/hadoop-3.3.4 /opt/module/</span><br></pre></td></tr></table></figure><p>在hadoop101上，将hadoop100中的&#x2F;opt&#x2F;module 目录下所有目录拷贝到 hadoop102上。（中间人拷贝）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop101 ~]$ scp -r ghost@hadoop100:/opt/module/* ghost@hadoop102:/opt/module/</span><br></pre></td></tr></table></figure><h3 id="3-2-2-rsync-远程同步工具"><a href="#3-2-2-rsync-远程同步工具" class="headerlink" title="3.2.2 rsync 远程同步工具"></a>3.2.2 rsync 远程同步工具</h3><ul><li>rsync 主要用于备份和镜像。具有速度快、避免复制相同内容和支持符号链接的优点。 </li><li>rsync 和 scp 区别：用 rsync 做文件的复制要比 scp 的速度快，rsync 只对差异文件做更 新。scp 是把所有文件都复制过去。</li></ul><h4 id="（1）基本语法"><a href="#（1）基本语法" class="headerlink" title="（1）基本语法"></a>（1）基本语法</h4><p><img src="/blog/6ae4aefa.html/image-20221213192240848.png"></p><h4 id="（2）选项参数说明"><a href="#（2）选项参数说明" class="headerlink" title="（2）选项参数说明"></a>（2）选项参数说明</h4><p><img src="/blog/6ae4aefa.html/image-20221213192345321.png"></p><h4 id="（3）案例实操-1"><a href="#（3）案例实操-1" class="headerlink" title="（3）案例实操"></a>（3）案例实操</h4><p>删除hadoop101中&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F;wcinput</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop101 hadoop-3.3.4]$ rm -rf wcinput/</span><br></pre></td></tr></table></figure><p>同步hadoop100中的&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F; 到 hadoop101</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop101 hadoop-3.3.4]$ rsync -av  ghost@hadoop100:/opt/module/hadoop-3.3.4/ /opt/module/hadoop-3.3.4/</span><br></pre></td></tr></table></figure><h3 id="3-2-3-xsync-集群分发脚本"><a href="#3-2-3-xsync-集群分发脚本" class="headerlink" title="3.2.3 xsync 集群分发脚本"></a>3.2.3 xsync 集群分发脚本</h3><h4 id="（1）需求分析"><a href="#（1）需求分析" class="headerlink" title="（1）需求分析"></a>（1）需求分析</h4><p>需求：循环复制文件到所有节点的相同目录下；</p><p>需求分析：rsync 命令原始拷贝；</p><p>期望脚本：xsync 要同步的文件名称</p><p>期望脚本在任何路径都能使用（脚本放在声明了全局环境变量的路径）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 ~]$ echo $PATH</span><br><span class="line">/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/model/jdk1.8.0_301/bin:/opt/model/hadoop-3.3.4/bin:/opt/model/hadoop-3.3.4/sbin:/home/ghost/.local/bin:/home/ghost/bin</span><br><span class="line">[ghost@hadoop100 ~]$ pwd</span><br><span class="line">/home/ghost</span><br><span class="line">[ghost@hadoop100 ~]$ mkdir bin</span><br></pre></td></tr></table></figure><h4 id="（2）脚本实现"><a href="#（2）脚本实现" class="headerlink" title="（2）脚本实现"></a>（2）脚本实现</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 判断参数个数</span></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">        echo 请传入参数！</span><br><span class="line">        exit;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 遍历集群所有机器</span></span><br><span class="line">for host in hadoop100 hadoop101 hadoop102</span><br><span class="line">do</span><br><span class="line">        echo ====== $host ======</span><br><span class="line"></span><br><span class="line">        # 3. 遍历所有目录，挨个发送</span><br><span class="line">        for file in $@</span><br><span class="line">        do</span><br><span class="line">                # 4.判断文件是否存在</span><br><span class="line">                if [ -e $file ]</span><br><span class="line">                        then</span><br><span class="line">                                # 5.获取父目录</span><br><span class="line">                                pdir=$(cd -P $(dirname $file); pwd)</span><br><span class="line"></span><br><span class="line">                                # 6.获取当前文件名称</span><br><span class="line">                                fname=$(basename $file)</span><br><span class="line">                                ssh $host &quot;mkdir -p $pdir&quot;</span><br><span class="line">                                rsync -av $pdir/$name $host:$pdir</span><br><span class="line">                        else</span><br><span class="line">                                echo $file 文件不存在！</span><br><span class="line">                fi</span><br><span class="line">        done</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="（3）赋权脚本"><a href="#（3）赋权脚本" class="headerlink" title="（3）赋权脚本"></a>（3）赋权脚本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 bin]$ chmod +x xync</span><br></pre></td></tr></table></figure><h4 id="（4）设置全局调用"><a href="#（4）设置全局调用" class="headerlink" title="（4）设置全局调用"></a>（4）设置全局调用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将脚本复制到 /bin 中，以便全局调用</span></span><br><span class="line">[ghost@hadoop100 ~]$ sudo cp xsync /bin/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">同步环境变量配置（root所有者）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意：如果用了 sudo，那么 xsync 一定要给它的路径补全。</span></span><br><span class="line">[ghost@hadoop100 ~]$ sudo ./bin/xsync /etc/profile.d/ghost_env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">环境变量生效</span></span><br><span class="line">[ghost@hadoop101 ~]$ source /etc/profile</span><br><span class="line">[ghost@hadoop102 ~]$ source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="3-3-SSH-无密登录配置"><a href="#3-3-SSH-无密登录配置" class="headerlink" title="3.3 SSH 无密登录配置"></a>3.3 SSH 无密登录配置</h2><h3 id="3-3-1-配置-ssh"><a href="#3-3-1-配置-ssh" class="headerlink" title="3.3.1 配置 ssh"></a>3.3.1 配置 ssh</h3><h4 id="（1）基本语法-1"><a href="#（1）基本语法-1" class="headerlink" title="（1）基本语法"></a>（1）基本语法</h4><ul><li>ssh 另一台电脑的 IP 地址</li></ul><h4 id="（2）ssh-连接时出现-Host-key-verification-failed-的解决方法"><a href="#（2）ssh-连接时出现-Host-key-verification-failed-的解决方法" class="headerlink" title="（2）ssh 连接时出现 Host key verification failed 的解决方法"></a>（2）ssh 连接时出现 Host key verification failed 的解决方法</h4><ul><li>Are you sure you want to continue connecting (yes&#x2F;no)?</li><li>输入 yes，并回车</li></ul><h4 id="（3）回到原来主机"><a href="#（3）回到原来主机" class="headerlink" title="（3）回到原来主机"></a>（3）回到原来主机</h4><ul><li>exit</li></ul><h3 id="3-3-2-无密钥配置"><a href="#3-3-2-无密钥配置" class="headerlink" title="3.3.2 无密钥配置"></a>3.3.2 无密钥配置</h3><h4 id="（1）免密登录原理"><a href="#（1）免密登录原理" class="headerlink" title="（1）免密登录原理"></a>（1）免密登录原理</h4><p><img src="/blog/6ae4aefa.html/image-20221214011557358.png"></p><h4 id="（2）生成公钥和私钥"><a href="#（2）生成公钥和私钥" class="headerlink" title="（2）生成公钥和私钥"></a>（2）生成公钥和私钥</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">敲（三个回车），就会生成两个文件 id_rsa（私钥）、id_rsa.pub（公钥）</span></span><br><span class="line">[ghost@hadoop100 .ssh]$ ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">[ghost@hadoop100 .ssh]$ ll</span><br><span class="line">总用量 12</span><br><span class="line">-rw-------. 1 ghost ghost 1679 12月 14 01:17 id_rsa</span><br><span class="line">-rw-r--r--. 1 ghost ghost  397 12月 14 01:17 id_rsa.pub</span><br><span class="line">-rw-r--r--. 1 ghost ghost  555 12月 14 00:59 known_hosts</span><br></pre></td></tr></table></figure><h4 id="（3）讲公钥拷贝到要免密登录的目标机器上"><a href="#（3）讲公钥拷贝到要免密登录的目标机器上" class="headerlink" title="（3）讲公钥拷贝到要免密登录的目标机器上"></a>（3）讲公钥拷贝到要免密登录的目标机器上</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 .ssh]$ ssh-copy-id hadoop100</span><br><span class="line">[ghost@hadoop100 .ssh]$ ssh-copy-id hadoop101</span><br><span class="line">[ghost@hadoop100 .ssh]$ ssh-copy-id hadoop102</span><br><span class="line"></span><br><span class="line">[ghost@hadoop101 .ssh]$ ssh-copy-id hadoop100</span><br><span class="line">[ghost@hadoop101 .ssh]$ ssh-copy-id hadoop101</span><br><span class="line">[ghost@hadoop101 .ssh]$ ssh-copy-id hadoop102</span><br><span class="line"></span><br><span class="line">[ghost@hadoop102 .ssh]$ ssh-copy-id hadoop100</span><br><span class="line">[ghost@hadoop102 .ssh]$ ssh-copy-id hadoop101</span><br><span class="line">[ghost@hadoop102 .ssh]$ ssh-copy-id hadoop102</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此外分别进行登录操作；</span></span><br></pre></td></tr></table></figure><h4 id="（4）-ssh-文件夹下（-x2F-ssh）的文件功能解释"><a href="#（4）-ssh-文件夹下（-x2F-ssh）的文件功能解释" class="headerlink" title="（4）.ssh 文件夹下（~&#x2F;.ssh）的文件功能解释"></a>（4）.ssh 文件夹下（~&#x2F;.ssh）的文件功能解释</h4><p><img src="/blog/6ae4aefa.html/image-20221214012410995.png"></p><h2 id="3-4-集群配置"><a href="#3-4-集群配置" class="headerlink" title="3.4 集群配置"></a>3.4 集群配置</h2><h3 id="3-4-1-集群部署规划"><a href="#3-4-1-集群部署规划" class="headerlink" title="3.4.1 集群部署规划"></a>3.4.1 集群部署规划</h3><ul><li>注意：<ul><li>NameNode 和 SecondaryNameNode 不要安装在同一台服务器</li><li>ResourceManager 也很消耗内存，不要和 NameNode、SecondaryNameNode 配置在 同一台机器上。</li></ul></li></ul><p><img src="/blog/6ae4aefa.html/image-20221214114002383.png"></p><h3 id="3-4-2-配置文件说明"><a href="#3-4-2-配置文件说明" class="headerlink" title="3.4.2 配置文件说明"></a>3.4.2 配置文件说明</h3><ul><li>Hadoop 配置文件分两类：默认配置文件和自定义配置文件</li><li>只有用户想修改某一默认 配置值时，才需要修改自定义配置文件，更改相应属性值。</li></ul><h4 id="（1）默认配置文件"><a href="#（1）默认配置文件" class="headerlink" title="（1）默认配置文件"></a>（1）默认配置文件</h4><p>find &#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F; -name core-default.xml</p><table><thead><tr><th align="center">要获取的默认文件</th><th align="center">文件存放在 Hadoop 的 jar 包中的位置</th></tr></thead><tbody><tr><td align="center">[core-default.xml]</td><td align="center">&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F;share&#x2F;doc&#x2F;hadoop&#x2F;hadoop-project-dist&#x2F;hadoop-common&#x2F;core-default.xml</td></tr><tr><td align="center">[hdfs-default.xml]</td><td align="center">&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F;share&#x2F;doc&#x2F;hadoop&#x2F;hadoop-project-dist&#x2F;hadoop-hdfs&#x2F;hdfs-default.xml</td></tr><tr><td align="center">[yarn-default.xml]</td><td align="center">&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F;share&#x2F;doc&#x2F;hadoop&#x2F;hadoop-yarn&#x2F;hadoop-yarn-common&#x2F;yarn-default.xml</td></tr><tr><td align="center">[mapred-default.xml]</td><td align="center">&#x2F;opt&#x2F;module&#x2F;hadoop-3.3.4&#x2F;share&#x2F;doc&#x2F;hadoop&#x2F;hadoop-mapreduce-client&#x2F;hadoop-mapreduce-client-core&#x2F;mapred-default.xml</td></tr></tbody></table><h4 id="（2）自定义配置文件"><a href="#（2）自定义配置文件" class="headerlink" title="（2）自定义配置文件"></a>（2）自定义配置文件</h4><p>core-site.xml、hdfs-site.xml、yarn-site.xml、mapred-site.xml</p><p>四个配置文件存放在 $HADOOP_HOME&#x2F;etc&#x2F;hadoop 这个路径上，用户可以根据项目需求重新进行修改配置。</p><h3 id="3-4-3-配置集群"><a href="#3-4-3-配置集群" class="headerlink" title="3.4.3 配置集群"></a>3.4.3 配置集群</h3><h4 id="（1）核心配置文件"><a href="#（1）核心配置文件" class="headerlink" title="（1）核心配置文件"></a>（1）核心配置文件</h4><p>配置 core-site.xml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop]$ cd /opt/module/hadoop-3.3.4/etc/hadoop/</span><br><span class="line">[ghost@hadoop100 hadoop]$ vim core-site.xml</span><br></pre></td></tr></table></figure><p>文件内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定 NameNode 的地址 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop100:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定 hadoop 数据的存储目录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/module/hadoop-3.3.4/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置 HDFS 网页登录使用的静态用户为 ghost --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.http.staticuser.user<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>ghost<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="（2）HDFS-配置文件"><a href="#（2）HDFS-配置文件" class="headerlink" title="（2）HDFS 配置文件"></a>（2）HDFS 配置文件</h4><p>配置 hdfs-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- nn web 端访问地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop100:9870<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2nn web 端访问地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop102:9868<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="（3）YARN-配置文件"><a href="#（3）YARN-配置文件" class="headerlink" title="（3）YARN 配置文件"></a>（3）YARN 配置文件</h4><p>配置 yarn-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 MR 走 shuffle --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 ResourceManager 的地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop101<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 环境变量的继承(老版本BUG)  --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;property&gt;</span></span><br><span class="line"><span class="comment">        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;/name&gt;</span></span><br><span class="line"><span class="comment">        &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME&lt;/value&gt;</span></span><br><span class="line"><span class="comment">    &lt;/property&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="（4）MapReduce-配置文件"><a href="#（4）MapReduce-配置文件" class="headerlink" title="（4）MapReduce 配置文件"></a>（4）MapReduce 配置文件</h4><p>配置 mapred-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 MapReduce 程序运行在 Yarn 上 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-4-4-在集群上分发配置好的-Hadoop-配置文件"><a href="#3-4-4-在集群上分发配置好的-Hadoop-配置文件" class="headerlink" title="3.4.4 在集群上分发配置好的 Hadoop 配置文件"></a>3.4.4 在集群上分发配置好的 Hadoop 配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop]$ xsync /opt/module/hadoop-3.3.4/etc/hadoop/</span><br></pre></td></tr></table></figure><h3 id="3-4-5-查看文件分发情况"><a href="#3-4-5-查看文件分发情况" class="headerlink" title="3.4.5 查看文件分发情况"></a>3.4.5 查看文件分发情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop101 ~]$ cat /opt/module/hadoop-3.3.4/etc/hadoop/core-site.xml</span><br><span class="line">[ghost@hadoop102 ~]$ cat /opt/module/hadoop-3.3.4/etc/hadoop/core-site.xml</span><br></pre></td></tr></table></figure><h2 id="3-5-群起集群"><a href="#3-5-群起集群" class="headerlink" title="3.5 群起集群"></a>3.5 群起集群</h2><h3 id="3-5-1-配置-workers"><a href="#3-5-1-配置-workers" class="headerlink" title="3.5.1 配置 workers"></a>3.5.1 配置 workers</h3><p>注意：该文件中添加的内容结尾不允许有空格，文件中不允许有空行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop]$ pwd</span><br><span class="line">/opt/module/hadoop-3.3.4/etc/hadoop</span><br><span class="line">[ghost@hadoop100 hadoop]$ vim workers </span><br><span class="line">[ghost@hadoop100 hadoop]$ cat workers </span><br><span class="line">hadoop100</span><br><span class="line">hadoop101</span><br><span class="line">hadoop102</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">同步所有节点配置文件</span></span><br><span class="line">[ghost@hadoop100 ~]$ xsync /opt/module/hadoop-3.3.4/etc/</span><br></pre></td></tr></table></figure><h3 id="3-5-2-启动集群"><a href="#3-5-2-启动集群" class="headerlink" title="3.5.2 启动集群"></a>3.5.2 启动集群</h3><h4 id="（1）初次启动"><a href="#（1）初次启动" class="headerlink" title="（1）初次启动"></a>（1）初次启动</h4><ul><li>需要在 hadoop100 节点格式化 NameNode</li><li>注意：格式化 NameNode，会产生新的集群 id，导致 NameNode 和 DataNode 的集群 id 不一致，集群找不到已往数据。</li><li>如果集群在运行过程中报错，需要重新格式化 NameNode 的话，一定要先停止 namenode 和 datanode 进程，并且要删除所有机器的 data 和 logs 目录，然后再进行格式 化。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ hdfs namenode -format</span><br></pre></td></tr></table></figure><h4 id="（2）启动-HDFS"><a href="#（2）启动-HDFS" class="headerlink" title="（2）启动 HDFS"></a>（2）启动 HDFS</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop-3.3.4]# ./sbin/start-dfs.sh </span><br></pre></td></tr></table></figure><h4 id><a href="#" class="headerlink" title></a></h4><h4 id="（3）在配置了-ResourceManager-的节点（hadoop101）启动-YARN"><a href="#（3）在配置了-ResourceManager-的节点（hadoop101）启动-YARN" class="headerlink" title="（3）在配置了 ResourceManager 的节点（hadoop101）启动 YARN"></a>（3）在配置了 ResourceManager 的节点（hadoop101）启动 YARN</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop101 hadoop-3.3.4]$ ./sbin/start-yarn.sh</span><br></pre></td></tr></table></figure><h4 id="（4）Web-端查看-HDFS-的-NameNode"><a href="#（4）Web-端查看-HDFS-的-NameNode" class="headerlink" title="（4）Web 端查看 HDFS 的 NameNode"></a>（4）Web 端查看 HDFS 的 NameNode</h4><ul><li>浏览器中输入：<a href="http://hadoop100:9870/">http://hadoop100:9870</a> </li><li>查看 HDFS 上存储的数据信息</li></ul><h4 id="（5）Web-端查看-YARN-的-ResourceManager"><a href="#（5）Web-端查看-YARN-的-ResourceManager" class="headerlink" title="（5）Web 端查看 YARN 的 ResourceManager"></a>（5）Web 端查看 YARN 的 ResourceManager</h4><ul><li>浏览器中输入：<a href="http://hadoop101:8088/">http://hadoop101:8088</a> </li><li>查看 YARN 上运行的 Job 信息</li></ul><h3 id="3-5-3-集群基本测试"><a href="#3-5-3-集群基本测试" class="headerlink" title="3.5.3 集群基本测试"></a>3.5.3 集群基本测试</h3><h4 id="（1）上传文件到集群"><a href="#（1）上传文件到集群" class="headerlink" title="（1）上传文件到集群"></a>（1）上传文件到集群</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">上传小文件</span></span><br><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ hadoop fs -mkdir /input</span><br><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ hadoop fs -put /opt/module/hadoop-3.3.4/wcinput/word.txt  /input</span><br><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ hdfs dfs -du -h /input</span><br><span class="line">59  177  /input/word.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">上传大文件</span></span><br><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ hadoop fs -put /opt/software/jdk-8u301-linux-x64.tar.gz /</span><br></pre></td></tr></table></figure><p><img src="/blog/6ae4aefa.html/image-20221214133809561.png"></p><h4 id="（2）上传文件后查看文件存放在什么位置"><a href="#（2）上传文件后查看文件存放在什么位置" class="headerlink" title="（2）上传文件后查看文件存放在什么位置"></a>（2）上传文件后查看文件存放在什么位置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 HDFS 文件存储路径</span></span><br><span class="line">[ghost@hadoop100 subdir0]$ pwd</span><br><span class="line">/opt/module/hadoop-3.3.4/data/dfs/data/current/BP-32354581-172.31.58.100-1670994945067/current/finalized/subdir0/subdir0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 HDFS 在磁盘存储文件内容</span></span><br><span class="line">[ghost@hadoop100 subdir0]$ cat blk_1073741825</span><br><span class="line">ghost ghost</span><br><span class="line">sum moon</span><br><span class="line">hadoop hdfs</span><br><span class="line">mapreduce spark</span><br><span class="line">hdfs hive</span><br></pre></td></tr></table></figure><h4 id="（3）拼接文件"><a href="#（3）拼接文件" class="headerlink" title="（3）拼接文件"></a>（3）拼接文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 subdir0]$ cat blk_1073741826 &gt;&gt; tmp.tar.gz</span><br><span class="line">[ghost@hadoop100 subdir0]$ cat blk_1073741827 &gt;&gt; tmp.tar.gz</span><br><span class="line">[ghost@hadoop100 subdir0]$ tar -zxvf tmp.tar.gz</span><br><span class="line">[ghost@hadoop100 subdir0]$ ll</span><br><span class="line">总用量 536452</span><br><span class="line">-rw-rw-r--. 1 ghost ghost        59 12月 14 13:35 blk_1073741825</span><br><span class="line">-rw-rw-r--. 1 ghost ghost        11 12月 14 13:35 blk_1073741825_1001.meta</span><br><span class="line">-rw-rw-r--. 1 ghost ghost 134217728 12月 14 13:37 blk_1073741826</span><br><span class="line">-rw-rw-r--. 1 ghost ghost   1048583 12月 14 13:37 blk_1073741826_1002.meta</span><br><span class="line">-rw-rw-r--. 1 ghost ghost  11302570 12月 14 13:37 blk_1073741827</span><br><span class="line">-rw-rw-r--. 1 ghost ghost     88311 12月 14 13:37 blk_1073741827_1003.meta</span><br><span class="line">drwxr-xr-x. 8 ghost ghost       273 6月   9 2021 jdk1.8.0_301</span><br><span class="line">-rw-rw-r--. 1 ghost ghost 145520298 12月 14 13:57 tmp.tar.gz</span><br></pre></td></tr></table></figure><h4 id="（4）下载"><a href="#（4）下载" class="headerlink" title="（4）下载"></a>（4）下载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 tmp]$ hadoop fs -get /jdk-8u301-linux-x64.tar.gz /home/ghost/tmp/</span><br><span class="line">[ghost@hadoop100 tmp]$ ll</span><br><span class="line">总用量 142112</span><br><span class="line">-rw-r--r--. 1 ghost ghost 145520298 12月 14 14:00 jdk-8u301-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><h4 id="（5）执行-wordcount-程序"><a href="#（5）执行-wordcount-程序" class="headerlink" title="（5）执行 wordcount 程序"></a>（5）执行 wordcount 程序</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 ~]$ hadoop jar /opt/module/hadoop-3.3.4/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.4.jar wordcount /input /output</span><br></pre></td></tr></table></figure><h2 id="3-6-配置历史服务器"><a href="#3-6-配置历史服务器" class="headerlink" title="3.6  配置历史服务器"></a>3.6  配置历史服务器</h2><p>为了查看程序的历史运行情况，需要配置一下历史服务器。具体配置步骤如下：</p><h4 id="（1）配置-mapred-site-xml"><a href="#（1）配置-mapred-site-xml" class="headerlink" title="（1）配置 mapred-site.xml"></a>（1）配置 mapred-site.xml</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop]$ pwd</span><br><span class="line">/opt/module/hadoop-3.3.4/etc/hadoop</span><br><span class="line">[ghost@hadoop100 hadoop]$ vim mapred-site.xml</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;!-- 指定 MapReduce 程序运行在 Yarn 上 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;!-- 历史服务器端地址 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hadoop100:10020&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;!-- 历史服务器 web 端地址 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hadoop100:19888&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h4 id="（2）分发配置"><a href="#（2）分发配置" class="headerlink" title="（2）分发配置"></a>（2）分发配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop]$ xsync /opt/module/hadoop-3.3.4/etc/hadoop/</span><br></pre></td></tr></table></figure><h4 id="（3）在-hadoop100-启动历史服务器"><a href="#（3）在-hadoop100-启动历史服务器" class="headerlink" title="（3）在 hadoop100 启动历史服务器"></a>（3）在 hadoop100 启动历史服务器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop]$ mapred --daemon start historyserver</span><br></pre></td></tr></table></figure><h4 id="（4）查看历史服务器是否启动"><a href="#（4）查看历史服务器是否启动" class="headerlink" title="（4）查看历史服务器是否启动"></a>（4）查看历史服务器是否启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop]$ jps</span><br><span class="line">5850 Jps</span><br><span class="line">3501 DataNode</span><br><span class="line">3374 NameNode</span><br><span class="line">5790 JobHistoryServer</span><br><span class="line">3839 NodeManager</span><br></pre></td></tr></table></figure><h4 id="（5）查看-JobHistory"><a href="#（5）查看-JobHistory" class="headerlink" title="（5）查看 JobHistory"></a>（5）查看 JobHistory</h4><ul><li><a href="http://hadoop100:19888/jobhistory">http://hadoop100:19888/jobhistory</a></li></ul><p><img src="/blog/6ae4aefa.html/image-20221214141626579.png"></p><p><img src="/blog/6ae4aefa.html/image-20221214141408327.png"></p><h2 id="3-7-配置日志的聚集"><a href="#3-7-配置日志的聚集" class="headerlink" title="3.7 配置日志的聚集"></a>3.7 配置日志的聚集</h2><p>日志聚集概念：应用运行完成以后，将程序运行日志信息上传到 HDFS 系统上。</p><p><img src="/blog/6ae4aefa.html/image-20221214142345051.png"></p><p>日志聚集功能好处：可以方便的查看到程序运行详情，方便开发调试；</p><p>注意：开启日志聚集功能，需要重新启动 NodeManager 、ResourceManager 和 HistoryServer。</p><p>开启日志聚集功能具体步骤如下：</p><h4 id="（1）配置-yarn-site-xml"><a href="#（1）配置-yarn-site-xml" class="headerlink" title="（1）配置 yarn-site.xml"></a>（1）配置 yarn-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启日志聚集功能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置日志聚集服务器地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log.server.url<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>http://hadoop100:19888/jobhistory/logs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置日志保留时间为 7 天 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation.retain-seconds<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>604800<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="（2）分发配置-1"><a href="#（2）分发配置-1" class="headerlink" title="（2）分发配置"></a>（2）分发配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop]$ xsync /opt/module/hadoop-3.3.4/etc/hadoop/</span><br></pre></td></tr></table></figure><h4 id="（3）关闭-NodeManager-、ResourceManager-和-HistoryServer"><a href="#（3）关闭-NodeManager-、ResourceManager-和-HistoryServer" class="headerlink" title="（3）关闭 NodeManager 、ResourceManager 和 HistoryServer"></a>（3）关闭 NodeManager 、ResourceManager 和 HistoryServer</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop102 hadoop-3.3.4]$ ./sbin/stop-yarn.sh</span><br><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ mapred --daemon stop historyserver</span><br></pre></td></tr></table></figure><h4 id="（4）启动-NodeManager-、ResourceManage-和-HistoryServer"><a href="#（4）启动-NodeManager-、ResourceManage-和-HistoryServer" class="headerlink" title="（4）启动 NodeManager 、ResourceManage 和 HistoryServer"></a>（4）启动 NodeManager 、ResourceManage 和 HistoryServer</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop101 hadoop-3.3.4]$ start-yarn.sh</span><br><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ mapred --daemon start historyserver</span><br></pre></td></tr></table></figure><h4 id="（5）删除-HDFS-上已经存在的输出文件"><a href="#（5）删除-HDFS-上已经存在的输出文件" class="headerlink" title="（5）删除 HDFS 上已经存在的输出文件"></a>（5）删除 HDFS 上已经存在的输出文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ hadoop fs -rm -r /output</span><br><span class="line">Deleted /output</span><br></pre></td></tr></table></figure><h4 id="（6）执行-WordCount-程序"><a href="#（6）执行-WordCount-程序" class="headerlink" title="（6）执行 WordCount 程序"></a>（6）执行 WordCount 程序</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.4.jar wordcount /input /output</span><br></pre></td></tr></table></figure><h4 id="（7）查看日志"><a href="#（7）查看日志" class="headerlink" title="（7）查看日志"></a>（7）查看日志</h4><ul><li><p>历史服务器地址</p><ul><li><a href="http://hadoop100:19888/jobhistory">http://hadoop100:19888/jobhistory</a></li></ul></li><li><p>历史任务列表</p></li></ul><p><img src="/blog/6ae4aefa.html/image-20221214143911812.png"></p><ul><li>查看任务运行日志</li></ul><p><img src="/blog/6ae4aefa.html/image-20221214143949428.png" alt="image-20221214143949428"></p><ul><li>运行日志详情</li></ul><p><img src="/blog/6ae4aefa.html/image-20221214144017060.png"></p><h2 id="3-8-集群启动-x2F-停止方式总结"><a href="#3-8-集群启动-x2F-停止方式总结" class="headerlink" title="3.8 集群启动&#x2F;停止方式总结"></a>3.8 集群启动&#x2F;停止方式总结</h2><h3 id="（1）各个模块分开启动-x2F-停止（配置-ssh-是前提）常用"><a href="#（1）各个模块分开启动-x2F-停止（配置-ssh-是前提）常用" class="headerlink" title="（1）各个模块分开启动&#x2F;停止（配置 ssh 是前提）常用"></a>（1）各个模块分开启动&#x2F;停止（配置 ssh 是前提）常用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">整体启动/停止 HDFS</span></span><br><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ start-dfs.sh </span><br><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ stop-dfs.sh </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">整体启动/停止 YARN</span></span><br><span class="line">[ghost@hadoop101 hadoop-3.3.4]$ start-yarn.sh</span><br><span class="line">[ghost@hadoop101 hadoop-3.3.4]$ stop-yarn.sh</span><br></pre></td></tr></table></figure><h3 id="（2）各个服务组件逐一启动-x2F-停止（不推荐使用）"><a href="#（2）各个服务组件逐一启动-x2F-停止（不推荐使用）" class="headerlink" title="（2）各个服务组件逐一启动&#x2F;停止（不推荐使用）"></a>（2）各个服务组件逐一启动&#x2F;停止（不推荐使用）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">分别启动/停止 HDFS 组件</span></span><br><span class="line">hdfs --daemon start/stop namenode/datanode/secondarynamenode</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动/停止 YARN</span></span><br><span class="line">yarn --daemon start/stop resourcemanager/nodemanager</span><br></pre></td></tr></table></figure><h2 id="3-9-编写-Hadoop-集群常用脚本"><a href="#3-9-编写-Hadoop-集群常用脚本" class="headerlink" title="3.9 编写 Hadoop 集群常用脚本"></a>3.9 编写 Hadoop 集群常用脚本</h2><h3 id="（1）Hadoop-集群启停脚本（包含-HDFS，Yarn，Historyserver）：myhadoop-sh"><a href="#（1）Hadoop-集群启停脚本（包含-HDFS，Yarn，Historyserver）：myhadoop-sh" class="headerlink" title="（1）Hadoop 集群启停脚本（包含 HDFS，Yarn，Historyserver）：myhadoop.sh"></a>（1）Hadoop 集群启停脚本（包含 HDFS，Yarn，Historyserver）：myhadoop.sh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 bin]$ vim myhadoop.sh</span><br><span class="line">[ghost@hadoop100 bin]$ pwd</span><br><span class="line">/home/ghost/bin</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;请输入参数！&quot;</span><br><span class="line">        exit;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot;====== 启动 hadoop 集群 ======&quot;</span><br><span class="line"></span><br><span class="line">        echo &quot;------ 启动 hdfs ------&quot;</span><br><span class="line">        ssh hadoop100 &quot;/opt/module/hadoop-3.3.4/sbin/start-dfs.sh&quot;</span><br><span class="line">        echo &quot;------ 启动 yarn ------&quot;</span><br><span class="line">        ssh hadoop101 &quot;/opt/module/hadoop-3.3.4/sbin/start-yarn.sh&quot;</span><br><span class="line">        echo &quot;------ 启动 historyserver ------&quot;</span><br><span class="line">        ssh hadoop100 &quot;/opt/module/hadoop-3.3.4/bin/mapred --daemon start historyserver&quot;</span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        echo &quot;====== 关闭 hadoop 集群 ======&quot;</span><br><span class="line"></span><br><span class="line">        echo &quot;------ 关闭 historyserver ------&quot;</span><br><span class="line">        ssh hadoop100 &quot;/opt/module/hadoop-3.3.4/bin/mapred --daemon stop historyserver&quot;</span><br><span class="line">        echo &quot;------ 关闭 yarn ------&quot;</span><br><span class="line">        ssh hadoop101 &quot;/opt/module/hadoop-3.3.4/sbin/stop-yarn.sh&quot;</span><br><span class="line">        echo &quot;------ 关闭 hdfs ------&quot;</span><br><span class="line">        ssh hadoop100 &quot;/opt/module/hadoop-3.3.4/sbin/stop-dfs.sh&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">        echo &quot;参数错误！&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 bin]$ chmod +x myhadoop.sh</span><br></pre></td></tr></table></figure><h3 id="（2）查看三台服务器-Java-进程脚本：jpsall"><a href="#（2）查看三台服务器-Java-进程脚本：jpsall" class="headerlink" title="（2）查看三台服务器 Java 进程脚本：jpsall"></a>（2）查看三台服务器 Java 进程脚本：jpsall</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 bin]$ vim jpsall</span><br><span class="line">[ghost@hadoop100 bin]$ pwd</span><br><span class="line">/home/ghost/bin</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">for host in hadoop100 hadoop101 hadoop102</span><br><span class="line">do</span><br><span class="line">        echo ====== $host ======</span><br><span class="line">        ssh $host jps</span><br><span class="line">done</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 bin]$ chmod +x jpsall </span><br></pre></td></tr></table></figure><h3 id="（3）分发-x2F-home-x2F-ghost-x2F-bin-目录，保证自定义脚本在三台机器上都可以使用"><a href="#（3）分发-x2F-home-x2F-ghost-x2F-bin-目录，保证自定义脚本在三台机器上都可以使用" class="headerlink" title="（3）分发&#x2F;home&#x2F;ghost&#x2F;bin 目录，保证自定义脚本在三台机器上都可以使用"></a>（3）分发&#x2F;home&#x2F;ghost&#x2F;bin 目录，保证自定义脚本在三台机器上都可以使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 hadoop-3.3.4]$ xsync /home/ghost/bin/</span><br></pre></td></tr></table></figure><h2 id="3-10-常用端口号说明"><a href="#3-10-常用端口号说明" class="headerlink" title="3.10 常用端口号说明"></a>3.10 常用端口号说明</h2><p><img src="/blog/6ae4aefa.html/image-20221214145200814.png"></p><h2 id="3-11-集群时间同步"><a href="#3-11-集群时间同步" class="headerlink" title="3.11 集群时间同步"></a>3.11 集群时间同步</h2><ul><li>如果服务器在公网环境（能连接外网），可以不采用集群时间同步，因为服务器会定期 和公网时间进行校准； </li><li>如果服务器在内网环境，必须要配置集群时间同步，否则时间久了，会产生时间偏差， 导致集群执行任务时间不同步。</li></ul><h3 id="（1）需求"><a href="#（1）需求" class="headerlink" title="（1）需求"></a>（1）需求</h3><ul><li>找一个机器，作为时间服务器，所有的机器与这台集群时间进行定时的同步，生产环境 根据任务对时间的准确程度要求周期同步。</li><li>此处测试环境为了尽快看到效果，采用 1 分钟同步一 次。</li></ul><p><img src="/blog/6ae4aefa.html/image-20221214153230399.png"></p><h3 id="（2）时间服务器配置，必须使用root配置"><a href="#（2）时间服务器配置，必须使用root配置" class="headerlink" title="（2）时间服务器配置，必须使用root配置"></a>（2）时间服务器配置，必须使用root配置</h3><ul><li>查看所有节点 ntpd 服务状态和开机自启动状态</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ghost@hadoop100 ~]$ sudo systemctl status ntpd</span><br><span class="line">[ghost@hadoop100 ~]$ sudo systemctl start ntpd</span><br><span class="line">[ghost@hadoop100 ~]$ sudo systemctl is-enabled ntpd</span><br><span class="line">disabled</span><br></pre></td></tr></table></figure><ul><li><p>修改 hadoop100 的 ntp.conf 配置文件</p><ul><li><p>修改 1（授权 172.31.58.0-172.31.58.255 网段上的所有机器可以从这台机器上查询和同步时间）</p></li><li><pre><code># 授权 172.31.58.0-172.31.58.255 网段上的所有机器可以从这台机器上查询和同步时间restrict 172.31.58.0 mask 255.255.255.0 nomodify notrap<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 修改 2（集群在局域网中，不使用其他互联网上的时间）</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  # 全部注释，集群在局域网中，不使用其他互联网上的时间</span><br><span class="line">  #server 0.centos.pool.ntp.org iburst</span><br><span class="line">  #server 1.centos.pool.ntp.org iburst</span><br><span class="line">  #server 2.centos.pool.ntp.org iburst</span><br><span class="line">  #server 3.centos.pool.ntp.org iburst</span><br></pre></td></tr></table></figure></code></pre></li><li><p>添加 3（当该节点丢失网络连接，依然可以采用本地时间作为时间服务器为集群中的其他节点提供时间同步）</p></li><li><p>&#96;&#96;&#96;</p><h1 id="当该节点丢失网络连接，依然可以采用本地时间作为时间服务器为集群中的其他节点提供时间同步"><a href="#当该节点丢失网络连接，依然可以采用本地时间作为时间服务器为集群中的其他节点提供时间同步" class="headerlink" title="当该节点丢失网络连接，依然可以采用本地时间作为时间服务器为集群中的其他节点提供时间同步"></a>当该节点丢失网络连接，依然可以采用本地时间作为时间服务器为集群中的其他节点提供时间同步</h1><p>server 127.127.1.0<br>fudge 127.127.1.0 stratum 10</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 修改 hadoop100 的/etc/sysconfig/ntpd 文件（让硬件时间与系统时间一起同步）</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  [root@hadoop100 ghost]# vim /etc/sysconfig/ntpd</span><br></pre></td></tr></table></figure></li></ul></li><li><pre><code># 增加以下内容，让硬件时间与系统时间一起同步SYNC_HWCLOCK=yes<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 重新启动 ntpd 服务</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  [root@hadoop100 ghost]# sudo systemctl restart ntpd</span><br></pre></td></tr></table></figure></code></pre></li><li><p>设置 ntpd 服务开机启动</p></li><li><pre><code>[root@hadoop100 ghost]# sudo systemctl enable ntpdCreated symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### （3）时间服务器配置，必须使用root配置</span><br><span class="line"></span><br><span class="line">- 关闭所有节点上 ntp 服务和自启动</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  [ghost@hadoop101 hadoop-3.3.4]$ sudo systemctl status ntpd</span><br><span class="line">  [ghost@hadoop101 hadoop-3.3.4]$ sudo systemctl stop ntpd</span><br><span class="line">  [ghost@hadoop101 hadoop-3.3.4]$ sudo systemctl disable ntpd</span><br><span class="line">  [ghost@hadoop102 hadoop-3.3.4]$ sudo systemctl stop ntpd</span><br><span class="line">  [ghost@hadoop102 hadoop-3.3.4]$ sudo systemctl disable ntpd</span><br></pre></td></tr></table></figure></code></pre></li><li><p>在其他机器配置 1 分钟与时间服务器同步一次</p></li><li><pre><code class="shell"># 编写定时任务[ghost@hadoop101 hadoop-3.3.4]$ crontab -e*/1 * * * * /usr/sbin/ntpdate hadoop100[ghost@hadoop102 hadoop-3.3.4]$ crontab -e*/1 * * * * /usr/sbin/ntpdate hadoop100<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 修改任意机器时间</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  [ghost@hadoop102 hadoop-3.3.4]$ sudo date -s &quot;2023-3-1 12:00:00&quot;</span><br><span class="line">  2023年 03月 01日 星期三 12:00:00 CST</span><br></pre></td></tr></table></figure></code></pre></li><li><p>1 分钟后查看机器是否与时间服务器同步</p></li><li><pre><code>[ghost@hadoop102 ~]$ sudo date2022年 12月 14日 星期三 16:10:35 CST</code></pre></li></ul><h1 id="四：常见错误及解决方案"><a href="#四：常见错误及解决方案" class="headerlink" title="四：常见错误及解决方案"></a>四：常见错误及解决方案</h1><h2 id="4-1-常见问题"><a href="#4-1-常见问题" class="headerlink" title="4.1 常见问题"></a>4.1 常见问题</h2><ul><li>防火墙没关闭、或者没有启动 YARN</li><li>主机名称配置错误</li><li>IP 地址配置错误</li><li>ssh 没有配置好</li><li>root 用户和 ghost 两个用户启动集群不统一</li><li>配置文件修改出错</li><li>不识别主机名称</li></ul><h2 id="4-2-解决方案"><a href="#4-2-解决方案" class="headerlink" title="4.2 解决方案"></a>4.2 解决方案</h2><h3 id="（1）DataNode-和-NameNode-进程同时只能工作一个"><a href="#（1）DataNode-和-NameNode-进程同时只能工作一个" class="headerlink" title="（1）DataNode 和 NameNode 进程同时只能工作一个"></a>（1）DataNode 和 NameNode 进程同时只能工作一个</h3><p><img src="/blog/6ae4aefa.html/image-20221214161451221.png"></p><h3 id="（2）jps-发现进程已经没有，但是重新启动集群，提示进程已经开启。"><a href="#（2）jps-发现进程已经没有，但是重新启动集群，提示进程已经开启。" class="headerlink" title="（2）jps 发现进程已经没有，但是重新启动集群，提示进程已经开启。"></a>（2）jps 发现进程已经没有，但是重新启动集群，提示进程已经开启。</h3><ul><li>原因是在 Linux 的根目录下&#x2F;tmp 目录中存在启动的进程临时文件，将集群相关进程删 除掉，再重新启动集群。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：运行模式概述&quot;&gt;&lt;a href=&quot;#一：运行模式概述&quot; class=&quot;headerlink&quot; title=&quot;一：运行模式概述&quot;&gt;&lt;/a&gt;一：运行模式概述&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Hadoop 官方网站：&lt;a href=&quot;http://hadoop.apach</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop 运行环境搭建</title>
    <link href="https://aiyingke.cn/blog/bee3736a.html/"/>
    <id>https://aiyingke.cn/blog/bee3736a.html/</id>
    <published>2022-12-13T01:58:02.000Z</published>
    <updated>2022-12-14T05:10:56.312Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：模板虚拟机准备"><a href="#一：模板虚拟机准备" class="headerlink" title="一：模板虚拟机准备"></a>一：模板虚拟机准备</h1><h2 id="1-1-安装模板虚拟机"><a href="#1-1-安装模板虚拟机" class="headerlink" title="1.1 安装模板虚拟机"></a>1.1 安装模板虚拟机</h2><p>IP 地址 192.31.58.100、主机名称 hadoop100、内存 4G、硬盘 40G，采用CentOS-7-x86_64-DVD-2009_2.iso镜像。</p><h2 id="1-2-查看网络情况"><a href="#1-2-查看网络情况" class="headerlink" title="1.2 查看网络情况"></a>1.2 查看网络情况</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 ~]# ping baidu.com</span><br><span class="line">PING baidu.com (110.242.68.66) 56(84) bytes of data.</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=1 ttl=128 time=26.3 ms</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=2 ttl=128 time=26.7 ms</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=3 ttl=128 time=24.7 ms</span><br><span class="line">^C</span><br><span class="line">--- baidu.com ping statistics ---</span><br><span class="line">3 packets transmitted, 3 received, 0% packet loss, time 6095ms</span><br><span class="line">rtt min/avg/max/mdev = 24.764/25.943/26.736/0.870 ms</span><br></pre></td></tr></table></figure><h2 id="1-3-安装-epel-release"><a href="#1-3-安装-epel-release" class="headerlink" title="1.3 安装 epel-release"></a>1.3 安装 epel-release</h2><p>Extra Packages for Enterprise Linux 是为“红帽系”的操作系统提供额外的软件包，适用于 RHEL、CentOS 和 Scientific Linux。相当于是一个软件仓库，大多数 rpm 包在官方 repository 中是找不到的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure><p>若为 Linux 安装的是最小系统版，还需要安装如下工具；如果安装的是 Linux 桌面标准版，不需要执行如下操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">net-tool：工具包集合，包含 ifconfig 等命令</span></span><br><span class="line">yum install -y net-tools </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim：编辑器</span></span><br><span class="line">yum install -y vim</span><br></pre></td></tr></table></figure><h2 id="1-4-关闭防火墙，关闭防火墙开机自启"><a href="#1-4-关闭防火墙，关闭防火墙开机自启" class="headerlink" title="1.4 关闭防火墙，关闭防火墙开机自启"></a>1.4 关闭防火墙，关闭防火墙开机自启</h2><p>在企业开发时，通常单个服务器的防火墙是关闭的，公司整体对外会设置非常安全的防火墙。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 ~]#  systemctl stop firewalld</span><br><span class="line">[root@hadoop100 ~]#  systemctl status firewalld</span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead) since 二 2022-12-13 10:22:37 CST; 8s ago</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line">  Process: 723 ExecStart=/usr/sbin/firewalld --nofork --nopid $FIREWALLD_ARGS (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 723 (code=exited, status=0/SUCCESS)</span><br><span class="line"></span><br><span class="line">12月 13 10:13:44 hadoop100 systemd[1]: Starting firewalld - dynamic firewall daemon...</span><br><span class="line">12月 13 10:13:54 hadoop100 systemd[1]: Started firewalld - dynamic firewall daemon.</span><br><span class="line">12月 13 10:13:54 hadoop100 firewalld[723]: WARNING: AllowZoneDrifting is enabled. This is considered an insecure co... now.</span><br><span class="line">12月 13 10:22:36 hadoop100 systemd[1]: Stopping firewalld - dynamic firewall daemon...</span><br><span class="line">12月 13 10:22:37 hadoop100 systemd[1]: Stopped firewalld - dynamic firewall daemon.</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show in full.</span><br></pre></td></tr></table></figure><h2 id="1-5-卸载自带JDK"><a href="#1-5-卸载自带JDK" class="headerlink" title="1.5 卸载自带JDK"></a>1.5 卸载自带JDK</h2><p>如果你的虚拟机是最小化安装不需要执行这一步。</p><p>➢ rpm -qa：查询所安装的所有 rpm 软件包 </p><p>➢ grep -i：忽略大小写 </p><p>➢ xargs -n1：表示每次只传递一个参数 </p><p>➢ rpm -e –nodeps：强制卸载软件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 ~]# rpm -qa | grep -i java</span><br><span class="line">java-1.7.0-openjdk-headless-1.7.0.261-2.6.22.2.el7_8.x86_64</span><br><span class="line">python-javapackages-3.4.1-11.el7.noarch</span><br><span class="line">tzdata-java-2020a-1.el7.noarch</span><br><span class="line">java-1.8.0-openjdk-headless-1.8.0.262.b10-1.el7.x86_64</span><br><span class="line">java-1.8.0-openjdk-1.8.0.262.b10-1.el7.x86_64</span><br><span class="line">javapackages-tools-3.4.1-11.el7.noarch</span><br><span class="line">java-1.7.0-openjdk-1.7.0.261-2.6.22.2.el7_8.x86_64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@hadoop100 ~]# rpm -qa | grep -i java | xargs -n1 rpm -e --nodeps</span><br></pre></td></tr></table></figure><h2 id="1-6-重启虚拟机"><a href="#1-6-重启虚拟机" class="headerlink" title="1.6 重启虚拟机"></a>1.6 重启虚拟机</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 ~]# reboot</span><br></pre></td></tr></table></figure><h1 id="二：克隆虚拟机"><a href="#二：克隆虚拟机" class="headerlink" title="二：克隆虚拟机"></a>二：克隆虚拟机</h1><h2 id="2-1-克隆"><a href="#2-1-克隆" class="headerlink" title="2.1 克隆"></a>2.1 克隆</h2><p>利用模板虚拟机，克隆出hadoop101，hadoop102两台虚拟机；</p><h2 id="2-2-修改ip地址"><a href="#2-2-修改ip地址" class="headerlink" title="2.2 修改ip地址"></a>2.2 修改ip地址</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><h2 id="2-3-修改主机名称"><a href="#2-3-修改主机名称" class="headerlink" title="2.3 修改主机名称"></a>2.3 修改主机名称</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname hadoop101</span><br></pre></td></tr></table></figure><h2 id="2-4-重启"><a href="#2-4-重启" class="headerlink" title="2.4 重启"></a>2.4 重启</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h1 id="三：模板机安装-JDK"><a href="#三：模板机安装-JDK" class="headerlink" title="三：模板机安装 JDK"></a>三：模板机安装 JDK</h1><h2 id="3-1-上传JDK"><a href="#3-1-上传JDK" class="headerlink" title="3.1 上传JDK"></a>3.1 上传JDK</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意：要卸载已有的JDK</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建 /opt/software/ 目录</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建 /opt/model/ 目录</span></span><br><span class="line">mkdir /opt/software/</span><br><span class="line">mkdir /opt/software/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 xftp 传输 jdk 至 /opt/software/ 目录下</span></span><br><span class="line">[root@hadoop100 software]# pwd</span><br><span class="line">/opt/software</span><br><span class="line">[root@hadoop100 software]# ll</span><br><span class="line">总用量 142112</span><br><span class="line">-rw-r--r--. 1 root root 145520298 12月 13 11:38 jdk-8u301-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="3-2-解压JDK"><a href="#3-2-解压JDK" class="headerlink" title="3.2 解压JDK"></a>3.2 解压JDK</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压 JDK 到/opt/module 目录下，-C 指定解压路径</span></span><br><span class="line">[root@hadoop100 software]# tar -zxvf jdk-8u301-linux-x64.tar.gz -C /opt/model/</span><br></pre></td></tr></table></figure><h2 id="3-3-配置-JDK-环境变量"><a href="#3-3-配置-JDK-环境变量" class="headerlink" title="3.3 配置 JDK 环境变量"></a>3.3 配置 JDK 环境变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在 /etc/profile.d/ 下新建 ghost_env.sh</span></span><br><span class="line">[root@hadoop100 profile.d]# vim ghost_env.sh</span><br><span class="line">[root@hadoop100 profile.d]# cat ghost_env.sh </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">JAVA_HOME</span></span><br><span class="line">export JAVA_HOME=/opt/model/jdk1.8.0_301</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新加载环境变量，让新的环境变量PATH生效</span> </span><br><span class="line">[root@hadoop100 profile.d]# source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="3-4-测试-JDK-是否安装成功"><a href="#3-4-测试-JDK-是否安装成功" class="headerlink" title="3.4 测试 JDK 是否安装成功"></a>3.4 测试 JDK 是否安装成功</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 ~]# java -version</span><br><span class="line">java version &quot;1.8.0_301&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_301-b09)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.301-b09, mixed mode)</span><br></pre></td></tr></table></figure><h1 id="四：模板机安装-Hadoop"><a href="#四：模板机安装-Hadoop" class="headerlink" title="四：模板机安装 Hadoop"></a>四：模板机安装 Hadoop</h1><h2 id="4-1-下载地址"><a href="#4-1-下载地址" class="headerlink" title="4.1 下载地址"></a>4.1 下载地址</h2><p>Hadoop 下载地址：<a href="https://archive.apache.org/dist/hadoop/common/hadoop-3.3.4/">Index of &#x2F;dist&#x2F;hadoop&#x2F;common&#x2F;hadoop-3.3.4 (apache.org)</a></p><h2 id="4-2-上传安装包"><a href="#4-2-上传安装包" class="headerlink" title="4.2 上传安装包"></a>4.2 上传安装包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 software]# ll</span><br><span class="line">总用量 821272</span><br><span class="line">-rw-r--r--. 1 root root 695457782 12月 13 11:54 hadoop-3.3.4.tar.gz</span><br><span class="line">-rw-r--r--. 1 root root 145520298 12月 13 11:38 jdk-8u301-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="4-3-解压安装包"><a href="#4-3-解压安装包" class="headerlink" title="4.3 解压安装包"></a>4.3 解压安装包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 software]# tar -zxvf hadoop-3.3.4.tar.gz -C /opt/model/</span><br></pre></td></tr></table></figure><h2 id="4-4-查看安装结果"><a href="#4-4-查看安装结果" class="headerlink" title="4.4 查看安装结果"></a>4.4 查看安装结果</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 module]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 10  1024  1024 215 7月  29 21:44 hadoop-3.3.4</span><br><span class="line">drwxr-xr-x.  8 10143 10143 273 6月   9 2021 jdk1.8.0_301</span><br></pre></td></tr></table></figure><h2 id="4-5-将Hadoop添加到环境变量"><a href="#4-5-将Hadoop添加到环境变量" class="headerlink" title="4.5 将Hadoop添加到环境变量"></a>4.5 将Hadoop添加到环境变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取hadoop安装路径</span> </span><br><span class="line">[root@hadoop100 hadoop-3.3.4]# pwd</span><br><span class="line">/opt/module/hadoop-3.3.4</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打开/etc/profile.d/ghost_env.sh文件,编辑环境变量</span></span><br><span class="line">[root@hadoop100 hadoop-3.3.4]# vim /etc/profile.d/ghost_env.sh </span><br><span class="line">[root@hadoop100 hadoop-3.3.4]# cat /etc/profile.d/ghost_env.sh </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">JAVA_HOME</span></span><br><span class="line">export JAVA_HOME=/opt/module/jdk1.8.0_301</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">HADOOP_HOME</span></span><br><span class="line">export HADOOP_HOME=/opt/module/hadoop-3.3.4</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/sbin</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使环境变量生效</span></span><br><span class="line">[root@hadoop100 ~]# source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="4-6-测试是否安装成功"><a href="#4-6-测试是否安装成功" class="headerlink" title="4.6 测试是否安装成功"></a>4.6 测试是否安装成功</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 ~]# hadoop version</span><br><span class="line">Hadoop 3.3.4</span><br><span class="line">Source code repository https://github.com/apache/hadoop.git -r a585a73c3e02ac62350c136643a5e7f6095a3dbb</span><br><span class="line">Compiled by stevel on 2022-07-29T12:32Z</span><br><span class="line">Compiled with protoc 3.7.1</span><br><span class="line">From source with checksum fb9dd8918a7b8a5b430d61af858f6ec</span><br><span class="line">This command was run using /opt/model/hadoop-3.3.4/share/hadoop/common/hadoop-common-3.3.4.jar</span><br></pre></td></tr></table></figure><h1 id="五：Hadoop目录结构"><a href="#五：Hadoop目录结构" class="headerlink" title="五：Hadoop目录结构"></a>五：Hadoop目录结构</h1><h2 id="5-1-查看hadoop目录结构"><a href="#5-1-查看hadoop目录结构" class="headerlink" title="5.1 查看hadoop目录结构"></a>5.1 查看hadoop目录结构</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 hadoop-3.3.4]# ll</span><br><span class="line">总用量 92</span><br><span class="line">drwxr-xr-x. 2 1024 1024   203 7月  29 21:44 bin</span><br><span class="line">drwxr-xr-x. 3 1024 1024    20 7月  29 20:35 etc</span><br><span class="line">drwxr-xr-x. 2 1024 1024   106 7月  29 21:44 include</span><br><span class="line">drwxr-xr-x. 3 1024 1024    20 7月  29 21:44 lib</span><br><span class="line">drwxr-xr-x. 4 1024 1024   288 7月  29 21:44 libexec</span><br><span class="line">-rw-rw-r--. 1 1024 1024 24707 7月  29 04:30 LICENSE-binary</span><br><span class="line">drwxr-xr-x. 2 1024 1024  4096 7月  29 21:44 licenses-binary</span><br><span class="line">-rw-rw-r--. 1 1024 1024 15217 7月  17 02:20 LICENSE.txt</span><br><span class="line">-rw-rw-r--. 1 1024 1024 29473 7月  17 02:20 NOTICE-binary</span><br><span class="line">-rw-rw-r--. 1 1024 1024  1541 4月  22 2022 NOTICE.txt</span><br><span class="line">-rw-rw-r--. 1 1024 1024   175 4月  22 2022 README.txt</span><br><span class="line">drwxr-xr-x. 3 1024 1024  4096 7月  29 20:35 sbin</span><br><span class="line">drwxr-xr-x. 4 1024 1024    31 7月  29 22:21 share</span><br></pre></td></tr></table></figure><h2 id="5-2-重要目录"><a href="#5-2-重要目录" class="headerlink" title="5.2 重要目录"></a>5.2 重要目录</h2><p>（1）bin目录：存放对Hadoop相关服务（hdfs，yarn，mapred）进行操作的脚本</p><p>（2）etc目录：Hadoop的配置文件目录，存放Hadoop的配置文件</p><p>（3）lib目录：存放Hadoop的本地库（对数据进行压缩解压缩功能）</p><p>（4）sbin目录：存放启动或停止Hadoop相关服务的脚本</p><p>（5）share目录：存放Hadoop的依赖jar包、文档、和官方案例</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：模板虚拟机准备&quot;&gt;&lt;a href=&quot;#一：模板虚拟机准备&quot; class=&quot;headerlink&quot; title=&quot;一：模板虚拟机准备&quot;&gt;&lt;/a&gt;一：模板虚拟机准备&lt;/h1&gt;&lt;h2 id=&quot;1-1-安装模板虚拟机&quot;&gt;&lt;a href=&quot;#1-1-安装模板虚拟机&quot; c</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop 概述</title>
    <link href="https://aiyingke.cn/blog/c3c14e7.html/"/>
    <id>https://aiyingke.cn/blog/c3c14e7.html/</id>
    <published>2022-12-13T00:30:43.000Z</published>
    <updated>2022-12-13T01:23:51.241Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：Hadoop简介"><a href="#一：Hadoop简介" class="headerlink" title="一：Hadoop简介"></a>一：Hadoop简介</h1><ul><li>Hadoop是一个由Apache基金会所开发的分布式系统基础架构。</li><li>主要解决，海量数据的存储和海量数据的分析计算问题。</li><li>广义来说，Hadoop通常是指一个更广泛的概念——Hadoop生态圈。</li></ul><p><img src="/blog/c3c14e7.html/image-20221213085502535.png"></p><h1 id="二：Hadoop发展历史"><a href="#二：Hadoop发展历史" class="headerlink" title="二：Hadoop发展历史"></a>二：Hadoop发展历史</h1><ul><li>Hadoop创始人Doug Cutting，为 了实 现与Google类似的全文搜索功能，他在Lucene框架基础上进行优 化升级，查询引擎和索引引擎。</li><li>2001年年底Lucene成为Apache基金会的一个子项目。</li><li>对于海量数据的场景，Lucene框 架面 对与Google同样的困难，存 储海量数据困难，检 索海 量速度慢。</li><li>学习和模仿Google解决这些问题的办法 ：微型版Nutch。</li><li>可以说Google是Hadoop的思想之源（Google在大数据方面的三篇论文） <ul><li>GFS —&gt;HDFS </li><li>Map-Reduce —&gt;MR </li><li>BigTable —&gt;HBase</li></ul></li><li>2003-2004年，Google公开了部分GFS和MapReduce思想的细节，以此为基础Doug Cutting等人用 了2年业余时间实现了DFS和MapReduce机制，使Nutch性能飙升。</li><li>2005 年Hadoop 作为 Lucene的子项目 Nutch的一部分正式引入Apache基金会。</li><li>2006 年 3 月份，Map-Reduce和Nutch Distributed File System （NDFS）分别被纳入到 Hadoop 项目 中，Hadoop就此正式诞生，标志着大数据时代来临。</li><li>名字来源于Doug Cutting儿子的玩具大象。</li></ul><h1 id="三：Hadoop三大发行版本"><a href="#三：Hadoop三大发行版本" class="headerlink" title="三：Hadoop三大发行版本"></a>三：Hadoop三大发行版本</h1><p>Hadoop 三大发行版本：Apache、Cloudera、Hortonworks。</p><p>Apache 版本最原始（最基础）的版本，对于入门学习最好。2006</p><p>Cloudera 内部集成了很多大数据框架，对应产品 CDH。2008</p><p>Hortonworks 文档较好，对应产品 HDP。2011</p><p>Hortonworks 现在已经被 Cloudera 公司收购，推出新的品牌 CDP。</p><h2 id="1）Apache-Hadoop"><a href="#1）Apache-Hadoop" class="headerlink" title="1）Apache Hadoop"></a>1）Apache Hadoop</h2><p>官网地址：<a href="http://hadoop.apache.org/">http://hadoop.apache.org</a> </p><p>下载地址：<a href="https://hadoop.apache.org/releases.html">https://hadoop.apache.org/releases.html</a></p><h2 id="2）Cloudera-Hadoop"><a href="#2）Cloudera-Hadoop" class="headerlink" title="2）Cloudera Hadoop"></a>2）Cloudera Hadoop</h2><p>官网地址：<a href="https://www.cloudera.com/downloads/cdh">https://www.cloudera.com/downloads/cdh</a> </p><p>下载地址：<a href="https://docs.cloudera.com/">https://docs.cloudera.com/</a></p><p>（1）2008 年成立的 Cloudera 是最早将 Hadoop 商用的公司，为合作伙伴提供 Hadoop 的 商用解决方案，主要是包括支持、咨询服务、培训。 </p><p>（2）2009 年 Hadoop 的创始人 Doug Cutting 也加盟 Cloudera 公司。Cloudera 产品主 要为 CDH，Cloudera Manager，Cloudera Support </p><p>（3）CDH 是 Cloudera 的 Hadoop 发行版，完全开源，比 Apache Hadoop 在兼容性，安 全性，稳定性上有所增强。Cloudera 的标价为每年每个节点 10000 美元。 </p><p>（4）Cloudera Manager 是集群的软件分发及管理监控平台，可以在几个小时内部署好一 个 Hadoop 集群，并对集群的节点及服务进行实时监控。</p><h2 id="3）Hortonworks-Hadoop"><a href="#3）Hortonworks-Hadoop" class="headerlink" title="3）Hortonworks Hadoop"></a>3）Hortonworks Hadoop</h2><p>官网地址：<a href="https://hortonworks.com/products/data-center/hdp/">https://hortonworks.com/products/data-center/hdp/</a> </p><p>下载地址：<a href="https://hortonworks.com/downloads/#data-platform">https://hortonworks.com/downloads/#data-platform</a> </p><p>（1）2011 年成立的 Hortonworks 是雅虎与硅谷风投公司 Benchmark Capital 合资组建。 </p><p>（2）公司成立之初就吸纳了大约 25 名至 30 名专门研究 Hadoop 的雅虎工程师，上述 工程师均在 2005 年开始协助雅虎开发 Hadoop，贡献了 Hadoop80%的代码。 </p><p>（3）Hortonworks 的主打产品是 Hortonworks Data Platform（HDP），也同样是 100%开 源的产品，HDP 除常见的项目外还包括了 Ambari，一款开源的安装和管理系统。 </p><p>（4）2018 年 Hortonworks 目前已经被 Cloudera 公司收购。</p><h1 id="四：Hadoop优势"><a href="#四：Hadoop优势" class="headerlink" title="四：Hadoop优势"></a>四：Hadoop优势</h1><h2 id="4-1-高可靠性"><a href="#4-1-高可靠性" class="headerlink" title="4.1 高可靠性"></a>4.1 高可靠性</h2><p>Hadoop底层维护多个数据副本，所以即使Hadoop某个计算元 素或存储出现故障，也不会导致数据的丢失。</p><p><img src="/blog/c3c14e7.html/image-20221213090433180.png"></p><h2 id="4-2-高扩展性"><a href="#4-2-高扩展性" class="headerlink" title="4.2 高扩展性"></a>4.2 高扩展性</h2><p>在集群间分配任务数据，可方便的扩展数以千计的节点。可以做到动态增加服务器数量。</p><p><img src="/blog/c3c14e7.html/image-20221213090533915.png"></p><h2 id="4-3-高效性"><a href="#4-3-高效性" class="headerlink" title="4.3 高效性"></a>4.3 高效性</h2><p>在MapReduce的思想下，Hadoop是并行工作的，以加快任务处 理速度。</p><p><img src="/blog/c3c14e7.html/image-20221213090616742.png"></p><h2 id="4-4-高容错性"><a href="#4-4-高容错性" class="headerlink" title="4.4 高容错性"></a>4.4 高容错性</h2><p>能够自动将失败的任务重新分配。</p><p><img src="/blog/c3c14e7.html/image-20221213090710881.png"></p><h1 id="五：Hadoop组成"><a href="#五：Hadoop组成" class="headerlink" title="五：Hadoop组成"></a>五：Hadoop组成</h1><h2 id="5-1-Hadoop1-x、2-x、3-x区别"><a href="#5-1-Hadoop1-x、2-x、3-x区别" class="headerlink" title="5.1 Hadoop1.x、2.x、3.x区别"></a>5.1 Hadoop1.x、2.x、3.x区别</h2><p><img src="/blog/c3c14e7.html/image-20221213090813605.png"></p><h2 id="5-2-HDFS-架构概述"><a href="#5-2-HDFS-架构概述" class="headerlink" title="5.2 HDFS 架构概述"></a>5.2 HDFS 架构概述</h2><p>Hadoop Distributed File System，简称 HDFS，是一个分布式文件系统。</p><ul><li>NameNode（nn）：存储文件的元数据，如文件名，文件目录结构，文件属性（生成时间、副本数、 文件权限），以及每个文件的块列表和块所在的DataNode等。</li></ul><p><img src="/blog/c3c14e7.html/image-20221213091121335.png"></p><ul><li>DataNode(dn)：在本地文件系统存储文件块数据，以及块数据的校验和。</li></ul><p><img src="/blog/c3c14e7.html/image-20221213091137842.png"></p><ul><li>Secondary NameNode(2nn)：每隔一段时间对NameNode元数据备份。</li></ul><h2 id="5-3-YARN-架构概述"><a href="#5-3-YARN-架构概述" class="headerlink" title="5.3 YARN 架构概述"></a>5.3 YARN 架构概述</h2><p>Yet Another Resource Negotiator 简称 YARN ，另一种资源协调者，是 Hadoop 的资源管理器。</p><p><img src="/blog/c3c14e7.html/image-20221213091320149.png"></p><h2 id="5-4-MapReduce-架构概述"><a href="#5-4-MapReduce-架构概述" class="headerlink" title="5.4 MapReduce 架构概述"></a>5.4 MapReduce 架构概述</h2><p>MapReduce 将计算过程分为两个阶段：Map 和 Reduce </p><p>1）Map 阶段并行处理输入数据 </p><p>2）Reduce 阶段对 Map 结果进行汇总</p><p><img src="/blog/c3c14e7.html/image-20221213091510749.png"></p><h2 id="5-5-HDFS、YARN、MapReduce-三者关系"><a href="#5-5-HDFS、YARN、MapReduce-三者关系" class="headerlink" title="5.5 HDFS、YARN、MapReduce 三者关系"></a>5.5 HDFS、YARN、MapReduce 三者关系</h2><p><img src="/blog/c3c14e7.html/image-20221213091616065.png"></p><h1 id="六：Hadoop生态体系"><a href="#六：Hadoop生态体系" class="headerlink" title="六：Hadoop生态体系"></a>六：Hadoop生态体系</h1><h2 id="6-1-生态体系介绍"><a href="#6-1-生态体系介绍" class="headerlink" title="6.1 生态体系介绍"></a>6.1 生态体系介绍</h2><p><img src="/blog/c3c14e7.html/image-20221213091817906.png"></p><p>1）Sqoop：Sqoop 是一款开源的工具，主要用于在 Hadoop、Hive 与传统的数据库（MySQL） 间进行数据的传递，可以将一个关系型数据库（例如 ：MySQL，Oracle 等）中的数据导进 到 Hadoop 的 HDFS 中，也可以将 HDFS 的数据导进到关系型数据库中。 </p><p>2）Flume：Flume 是一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统， Flume 支持在日志系统中定制各类数据发送方，用于收集数据； </p><p>3）Kafka：Kafka 是一种高吞吐量的分布式发布订阅消息系统；</p><p>4）Spark：Spark 是当前最流行的开源大数据内存计算框架。可以基于 Hadoop 上存储的大数 据进行计算。 </p><p>5）Flink：Flink 是当前最流行的开源大数据内存计算框架。用于实时计算的场景较多。 </p><p>6）Oozie：Oozie 是一个管理 Hadoop 作业（job）的工作流程调度管理系统。 </p><p>7）Hbase：HBase 是一个分布式的、面向列的开源数据库。HBase 不同于一般的关系数据库， 它是一个适合于非结构化数据存储的数据库。 </p><p>8）Hive：Hive 是基于 Hadoop 的一个数据仓库工具，可以将结构化的数据文件映射为一张 数据库表，并提供简单的 SQL 查询功能，可以将 SQL 语句转换为 MapReduce 任务进行运 行。其优点是学习成本低，可以通过类 SQL 语句快速实现简单的 MapReduce 统计，不必开 发专门的 MapReduce 应用，十分适合数据仓库的统计分析。 </p><p>9）ZooKeeper：它是一个针对大型分布式系统的可靠协调系统，提供的功能包括：配置维护、 名字服务、分布式同步、组服务等。</p><h2 id="6-2-推荐系统架构图"><a href="#6-2-推荐系统架构图" class="headerlink" title="6.2 推荐系统架构图"></a>6.2 推荐系统架构图</h2><p><img src="/blog/c3c14e7.html/image-20221213092214171.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：Hadoop简介&quot;&gt;&lt;a href=&quot;#一：Hadoop简介&quot; class=&quot;headerlink&quot; title=&quot;一：Hadoop简介&quot;&gt;&lt;/a&gt;一：Hadoop简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Hadoop是一个由Apache基金会所开发的分布式系统基础架构</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop 大数据概论</title>
    <link href="https://aiyingke.cn/blog/d983fcd2.html/"/>
    <id>https://aiyingke.cn/blog/d983fcd2.html/</id>
    <published>2022-12-12T16:46:36.000Z</published>
    <updated>2022-12-12T17:41:52.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：大数据概念"><a href="#一：大数据概念" class="headerlink" title="一：大数据概念"></a>一：大数据概念</h1><h2 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h2><ul><li>大数据（Big Data）：指无法在一定时间范围内用常规软件工具进行捕捉、管理和 处理的数据集合，是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化 能力的海量、高增长率和多样化的信息资产。</li><li>大数据主要解决，海量数据的<code>采集</code>、<code>存储</code>和<code>分析计算</code>问题。</li></ul><h2 id="1-2-存储单位"><a href="#1-2-存储单位" class="headerlink" title="1.2 存储单位"></a>1.2 存储单位</h2><ul><li><p>按顺序给出数据存储单位：bit、Byte、 KB、MB、GB、TB、PB、EB、ZB、YB、 BB、NB、DB。</p></li><li><p>1Byte &#x3D; 8bit 1K &#x3D; 1024Byte 1MB &#x3D; 1024K 1G &#x3D; 1024M 1T &#x3D; 1024G 1P &#x3D; 1024T</p></li></ul><h1 id="二：大数据特点"><a href="#二：大数据特点" class="headerlink" title="二：大数据特点"></a>二：大数据特点</h1><h2 id="2-1-Volume（大量）"><a href="#2-1-Volume（大量）" class="headerlink" title="2.1 Volume（大量）"></a>2.1 Volume（大量）</h2><p>截至目前，人类生产的所有印刷材料的数据量是200PB，而历史上全人类总共 说过的话的数据量大约是5EB。当前，典型个人计算机硬盘的容量为TB量级，而 一些大企业的数据量已经接近EB量级。</p><h2 id="2-2-Velocity（高速）"><a href="#2-2-Velocity（高速）" class="headerlink" title="2.2 Velocity（高速）"></a>2.2 Velocity（高速）</h2><p>这是大数据区分于传统数据挖掘的最显著特征。根据IDC的“数字宇宙”的报告，预计到2025年，全球数据使用量将达到163ZB。在如此海量的数据面前，处理数据的效率就是企业的生命。 </p><ul><li>天猫双十一：<ul><li>2017年3分01秒，天猫交易额超过100亿 </li><li>2020年96秒，天猫交易额超过100亿</li></ul></li></ul><h2 id="2-3-Variety（多样）"><a href="#2-3-Variety（多样）" class="headerlink" title="2.3 Variety（多样）"></a>2.3 Variety（多样）</h2><ul><li>这种类型的多样性也让数据被分为<code>结构化数据</code>和<code>非结构化数据</code>。</li><li>相对于以往便于存储的 以数据库&#x2F;文本为主的结构化数据，非结构化数据越来越多，包括网络日志、音频、视频、图 片、地理位置信息等，这些多类型的数据对数据的处理能力提出了更高要求。</li></ul><h2 id="2-4-Value（低价值密度）"><a href="#2-4-Value（低价值密度）" class="headerlink" title="2.4 Value（低价值密度）"></a>2.4 Value（低价值密度）</h2><ul><li>价值密度的高低与数据总量的大小成反比。</li><li>如何快速对有价值数 据“提纯”成为目前大数据背景下待解决的难题。</li></ul><h1 id="三：大数据应用场景"><a href="#三：大数据应用场景" class="headerlink" title="三：大数据应用场景"></a>三：大数据应用场景</h1><ul><li>抖音：推荐的都是你喜欢的视频</li><li>电商站内广告推荐：给用户推荐可能喜欢的商品</li><li>零售：分析用户消费习惯，为用户购买商品提供方便，从而提升商品销量。 经典案例，纸尿布+啤酒。</li><li>物流仓储：京东物流，上午下单下午送达、下午下单次日上午送达；</li><li>保险：海量数据挖掘及风险预测，助力保险 行业精准营销，提升精细化定价能力。</li><li>金融：多维度体现用户特征，帮助金融机构 推荐优质客户，防范欺诈风险。</li><li>房产：大数据全面助力房地产行业，打造精 准投策与营销，选出更合适的地，建造更合适的楼， 卖给更合适的人。</li><li>人工智能 + 5G + 物联网 + 虚拟与现实</li></ul><h1 id="四：大数据发展前景"><a href="#四：大数据发展前景" class="headerlink" title="四：大数据发展前景"></a>四：大数据发展前景</h1><ul><li>党的十九大提出“推动互联网、大数据、人工智能和实体经济深度融合”。</li><li>2020年初，中央推出34万亿“新基建”投资计划</li></ul><p><img src="/blog/d983fcd2.html/image-20221213010047791.png"></p><ul><li>2020年是5G的元年，国家在大力铺设5G设备，2021年就是5G手机应用的开 始，也是大数据要爆发的1年。5G带来的是每秒钟10g的数据，会给每家公司都 带来海量的数据。那么传统的Java工具根本解决不了海量数据的存储。就更不用 说海量数据的计算了。</li><li>人才紧缺、竞争压力小<ul><li>有句话叫：“选择大于努力”选择一个好的方向，少奋斗十年。是否记得 国家在2017年才开设大数据课程，当时是北京大学、人民大学等25所高校开设 第一批大数据课程。</li></ul></li><li>Boss直聘网站上的部分大数据工程师薪资水平</li></ul><h1 id="五：大数据部门业务流程分析"><a href="#五：大数据部门业务流程分析" class="headerlink" title="五：大数据部门业务流程分析"></a>五：大数据部门业务流程分析</h1><p><img src="/blog/d983fcd2.html/image-20221213010323402.png"></p><h1 id="六：大数据部门内部组织结构"><a href="#六：大数据部门内部组织结构" class="headerlink" title="六：大数据部门内部组织结构"></a>六：大数据部门内部组织结构</h1><p><img src="/blog/d983fcd2.html/image-20221213010352060.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：大数据概念&quot;&gt;&lt;a href=&quot;#一：大数据概念&quot; class=&quot;headerlink&quot; title=&quot;一：大数据概念&quot;&gt;&lt;/a&gt;一：大数据概念&lt;/h1&gt;&lt;h2 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://aiyingke.cn/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Shell 应用案例</title>
    <link href="https://aiyingke.cn/blog/f2380f63.html/"/>
    <id>https://aiyingke.cn/blog/f2380f63.html/</id>
    <published>2022-12-11T17:02:44.000Z</published>
    <updated>2022-12-11T18:01:29.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：归档文件"><a href="#一：归档文件" class="headerlink" title="一：归档文件"></a>一：归档文件</h1><h2 id="1-1-功能描述"><a href="#1-1-功能描述" class="headerlink" title="1.1 功能描述"></a>1.1 功能描述</h2><p>实现一个每天对指定目录归档备份的脚本，输入一个目录名称（末尾不带&#x2F;）， 将目录下所有文件按天归档保存，并将归档日期附加在归档文件名上，放在&#x2F;root&#x2F;archive 下。</p><h2 id="1-2-相关技术"><a href="#1-2-相关技术" class="headerlink" title="1.2 相关技术"></a>1.2 相关技术</h2><ul><li>这里用到了归档命令：<ul><li>tar 后面可以加上-c 选项表示归档，</li><li>加上-z 选项表示同时进行压缩，得到的文件后缀名 为.tar.gz。</li></ul></li></ul><h2 id="1-3-脚本实现"><a href="#1-3-脚本实现" class="headerlink" title="1.3 脚本实现"></a>1.3 脚本实现</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">判断输入参数个数是否为1</span></span><br><span class="line">if [ $# -ne 1 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;参数个数错误！请输入一个参数，作为归档的目录名称&quot;</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">判断目录是否存在</span></span><br><span class="line">if [ -d $1 ]</span><br><span class="line">then</span><br><span class="line">        echo</span><br><span class="line">else</span><br><span class="line">        echo &quot;目录不存在&quot;</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">DIR_NAME=$(basename $1)</span><br><span class="line">DIR_PATH=$(cd $(dirname $1); pwd)</span><br><span class="line"></span><br><span class="line">echo DIR_NAME:$DIR_NAME</span><br><span class="line">echo DIR_PATH:$DIR_PATH</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取当前日期</span></span><br><span class="line">DATE=$(date +%Y-%m-%d)</span><br><span class="line">echo $DATE</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">定义生成归档文件的名称</span></span><br><span class="line">FILE=archive_$&#123;DIR_NAME&#125;_$DATE.tar.gz</span><br><span class="line">DEST=/root/RupertTears/archive/$FILE</span><br><span class="line"></span><br><span class="line">echo $FILE</span><br><span class="line">echo $DEST</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开始归档目录文件</span></span><br><span class="line">echo &quot;开始归档...&quot;</span><br><span class="line">tar -czf $DEST $DIR_PATH/$DIR_NAME</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">校验归档结果</span></span><br><span class="line">if [  $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;归档成功！&quot;</span><br><span class="line">        echo &quot;归档文件为：$DEST&quot;</span><br><span class="line">else</span><br><span class="line">        echo &quot;归档失败！&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二：发送消息"><a href="#二：发送消息" class="headerlink" title="二：发送消息"></a>二：发送消息</h1><h2 id="2-1-功能描述"><a href="#2-1-功能描述" class="headerlink" title="2.1 功能描述"></a>2.1 功能描述</h2><p>实现一个向某个用户快速发送消息的脚本，输入用户名作为第一个参数，后面直 接跟要发送的消息。脚本需要检测用户是否登录在系统中、是否打开消息功能，以及当前发 送消息是否为空</p><h2 id="2-2-相关技术"><a href="#2-2-相关技术" class="headerlink" title="2.2 相关技术"></a>2.2 相关技术</h2><p>我们可以利用 Linux 自带的 mesg 和 write 工具，向其它用户发送消息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 shell]# who am i</span><br><span class="line">root     pts/0        2022-12-12 01:14 (172.16.80.1)</span><br><span class="line">[root@hadoop100 shell]# who </span><br><span class="line">root     pts/0        2022-12-12 01:14 (172.16.80.1)</span><br><span class="line">ghost    :0           2022-12-12 01:37 (:0)</span><br><span class="line">ghost    pts/1        2022-12-12 01:38 (:0)</span><br><span class="line">[root@hadoop100 shell]# who -T</span><br><span class="line">root     + pts/0        2022-12-12 01:14 (172.16.80.1)</span><br><span class="line">ghost    ? :0           2022-12-12 01:37 (:0)</span><br><span class="line">ghost    + pts/1        2022-12-12 01:38 (:0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@hadoop100 shell]# mesg n</span><br><span class="line">[root@hadoop100 shell]# who -T</span><br><span class="line">root     - pts/0        2022-12-12 01:14 (172.16.80.1)</span><br><span class="line">ghost    ? :0           2022-12-12 01:37 (:0)</span><br><span class="line">ghost    + pts/1        2022-12-12 01:38 (:0)</span><br><span class="line">[root@hadoop100 shell]# mesg y</span><br><span class="line">[root@hadoop100 shell]# who -T</span><br><span class="line">root     + pts/0        2022-12-12 01:14 (172.16.80.1)</span><br><span class="line">ghost    ? :0           2022-12-12 01:37 (:0)</span><br><span class="line">ghost    + pts/1        2022-12-12 01:38 (:0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@hadoop100 shell]# write ghost pts/1</span><br><span class="line">hello</span><br><span class="line">welcome</span><br></pre></td></tr></table></figure><h2 id="2-3-脚本实现"><a href="#2-3-脚本实现" class="headerlink" title="2.3 脚本实现"></a>2.3 脚本实现</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">login_user=$(who | grep -i -m 1  $1  | awk &#x27;&#123;print $1&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">if [ -z $login_user ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;$1 不在线&quot;</span><br><span class="line">        echo &quot;脚本退出...&quot;</span><br><span class="line">        exit</span><br><span class="line">else</span><br><span class="line">        echo $login_user</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">is_allowed=$(who -T | grep -i -m 2 $1 | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">if [ $is_allowed != &quot;+&quot;  ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;$1 没有开启消息功能&quot;</span><br><span class="line">        echo &quot;脚本退出...&quot;</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [ -z $2 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;没有消息体&quot;</span><br><span class="line">        echo &quot;脚本退出&quot;</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">whole_msg=$(echo $* | cut -d &quot; &quot; -f 2-)</span><br><span class="line"></span><br><span class="line">user_terminal=$(who | grep -i -m 1 $1 | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">echo $whole_msg | write $login_user $user_terminal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [ $? != 0  ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;发送失败！&quot;</span><br><span class="line">else</span><br><span class="line">        echo &quot;发送成功！&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@hadoop100 shell]# ./send_msg.sh ghost hello</span><br><span class="line">ghost</span><br><span class="line">发送成功！</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：归档文件&quot;&gt;&lt;a href=&quot;#一：归档文件&quot; class=&quot;headerlink&quot; title=&quot;一：归档文件&quot;&gt;&lt;/a&gt;一：归档文件&lt;/h1&gt;&lt;h2 id=&quot;1-1-功能描述&quot;&gt;&lt;a href=&quot;#1-1-功能描述&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="Shell" scheme="https://aiyingke.cn/categories/Shell/"/>
    
    
    <category term="Shell" scheme="https://aiyingke.cn/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell 文本处理工具</title>
    <link href="https://aiyingke.cn/blog/60b4c2ae.html/"/>
    <id>https://aiyingke.cn/blog/60b4c2ae.html/</id>
    <published>2022-12-11T16:29:32.000Z</published>
    <updated>2022-12-11T17:00:39.805Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：cut"><a href="#一：cut" class="headerlink" title="一：cut"></a>一：cut</h1><h2 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h2><ul><li>cut 的工作就是“剪”，具体的说就是在文件中负责剪切数据用的。</li><li>cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段输出。</li></ul><h2 id="1-2-基本用法"><a href="#1-2-基本用法" class="headerlink" title="1.2 基本用法"></a>1.2 基本用法</h2><ul><li>cut [选项参数] filename </li><li>说明：默认分隔符是制表符</li></ul><h2 id="1-3-选项参数说明"><a href="#1-3-选项参数说明" class="headerlink" title="1.3 选项参数说明"></a>1.3 选项参数说明</h2><p><img src="/blog/60b4c2ae.html/image-20221212003218171.png"></p><h2 id="1-4-案例实操"><a href="#1-4-案例实操" class="headerlink" title="1.4 案例实操"></a>1.4 案例实操</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 shell]# cat cut.txt </span><br><span class="line">xiao hong</span><br><span class="line">xiao ming</span><br><span class="line">hello world</span><br><span class="line">bei jing</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">按空格切分，取第一列</span></span><br><span class="line">[root@hadoop100 shell]# cut -d &quot; &quot; -f 1 cut.txt </span><br><span class="line">xiao</span><br><span class="line">xiao</span><br><span class="line">hello</span><br><span class="line">bei</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">按空格切分，取第二列、第三列</span></span><br><span class="line">[root@hadoop100 shell]# cut -d &quot; &quot; -f 2,3 cut.txt </span><br><span class="line">hong</span><br><span class="line">ming</span><br><span class="line">world</span><br><span class="line">jing</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切割出 world</span></span><br><span class="line">[root@hadoop100 shell]# cat cut.txt | grep hello | cut -d &quot; &quot; -f 2 </span><br><span class="line">world</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选取系统 PATH 变量值，第 2 个“:”开始后的所有路径</span></span><br><span class="line">[root@hadoop100 shell]# echo $PATH | cut -d &quot;:&quot; -f 3-</span><br><span class="line">/usr/sbin:/usr/bin:/root/bin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切割出ifconfig中的ip地址</span></span><br><span class="line">[root@hadoop100 shell]# ifconfig | grep netmask | cut -d &quot; &quot; -f 10</span><br><span class="line">172.16.80.100</span><br><span class="line">127.0.0.1</span><br><span class="line">192.168.122.1</span><br></pre></td></tr></table></figure><h1 id="二：awk"><a href="#二：awk" class="headerlink" title="二：awk"></a>二：awk</h1><h2 id="2-1-简介"><a href="#2-1-简介" class="headerlink" title="2.1 简介"></a>2.1 简介</h2><p>一个强大的文本分析工具，把文件逐行的读入，以<code>空格</code>为默认分隔符将每行切片，切开的部分再进行分析处理。</p><h2 id="2-2-基本语法"><a href="#2-2-基本语法" class="headerlink" title="2.2 基本语法"></a>2.2 基本语法</h2><ul><li>awk [选项参数] ‘&#x2F;pattern1&#x2F;{action1} &#x2F;pattern2&#x2F;{action2}…’ filename</li><li>pattern：表示 awk 在数据中查找的内容，就是匹配模式</li><li>action：在找到匹配内容时所执行的一系列命令</li></ul><h2 id="2-3-选项参数说明"><a href="#2-3-选项参数说明" class="headerlink" title="2.3 选项参数说明"></a>2.3 选项参数说明</h2><p><img src="/blog/60b4c2ae.html/image-20221212004610288.png"></p><h2 id="2-4-案例实操"><a href="#2-4-案例实操" class="headerlink" title="2.4 案例实操"></a>2.4 案例实操</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">passwd 数据的含义</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用户名:密码(加密过后的):用户 <span class="built_in">id</span>:组 <span class="built_in">id</span>:注释:用户家目录:shell 解析器</span></span><br><span class="line">[root@hadoop100 shell]# cat /etc/passwd | head -3</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">搜索 passwd 文件以 root 关键字开头的所有行，并输出该行的第 7 列</span></span><br><span class="line">[root@hadoop100 shell]# cat /etc/passwd | awk -F &quot;:&quot; &#x27;/^root/&#123;print $7&#125;&#x27;</span><br><span class="line">/bin/bash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">搜索 passwd 文件以 root 关键字开头的所有行，并输出该行的第 1 列和第 7 列，中间以逗号分割。</span></span><br><span class="line">[root@hadoop100 shell]# cat /etc/passwd | awk -F &quot;:&quot; &#x27;/^root/&#123;print $1&quot;,&quot;$7&#125;&#x27;</span><br><span class="line">root,/bin/bash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只显示/etc/passwd 的第一列和第七列，以逗号分割，且在所有行前面添加列名 user，shell 在最后一行添加<span class="string">&quot;EOF&quot;</span>。</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">BEGIN 在所有数据读取行之前执行；END 在所有数据执行之后执行。</span></span><br><span class="line">cat /etc/passwd | awk -F &quot;:&quot; &#x27;BEGIN&#123;print &quot;user,shell&quot;&#125;//&#123;print $1&quot;,&quot;$7&#125;END&#123;print &quot;EOF&quot;&#125;&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将passwd 文件中的用户 <span class="built_in">id</span> 增加数值 1 并输出</span></span><br><span class="line">cat /etc/passwd | awk -F &quot;:&quot; &#x27;//&#123;print $3+1&#125;&#x27;</span><br></pre></td></tr></table></figure><h2 id="2-5-awk-的内置变量"><a href="#2-5-awk-的内置变量" class="headerlink" title="2.5 awk 的内置变量"></a>2.5 awk 的内置变量</h2><p><img src="/blog/60b4c2ae.html/image-20221212005502650.png"></p><h2 id="2-6-案例实操"><a href="#2-6-案例实操" class="headerlink" title="2.6 案例实操"></a>2.6 案例实操</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">统计 passwd 文件名，每行的行号，每行的列</span></span><br><span class="line">awk -F &quot;:&quot; &#x27;//&#123;print &quot;文件名称：&quot;FILENAME, &quot;行号：&quot;NR, &quot;列数：&quot;NF&#125;&#x27; /etc/passwd</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询 ifconfig 命令输出结果中的空</span></span><br><span class="line">[root@hadoop100 pam.d]# ifconfig | awk -F &quot;&quot; &#x27;/^$/&#123;print &quot;空行：&quot;NR&#125;&#x27;</span><br><span class="line">空行：9</span><br><span class="line">空行：18</span><br><span class="line">空行：26</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切割IP地址</span></span><br><span class="line">[root@hadoop100 pam.d]# ifconfig | awk -F &quot; &quot; &#x27;/netmask/&#123;print &quot;IP地址：&quot;$2&#125;&#x27;</span><br><span class="line">IP地址：172.16.80.100</span><br><span class="line">IP地址：127.0.0.1</span><br><span class="line">IP地址：192.168.122.1</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：cut&quot;&gt;&lt;a href=&quot;#一：cut&quot; class=&quot;headerlink&quot; title=&quot;一：cut&quot;&gt;&lt;/a&gt;一：cut&lt;/h1&gt;&lt;h2 id=&quot;1-1-简介&quot;&gt;&lt;a href=&quot;#1-1-简介&quot; class=&quot;headerlink&quot; title=&quot;1</summary>
      
    
    
    
    <category term="Shell" scheme="https://aiyingke.cn/categories/Shell/"/>
    
    
    <category term="Shell" scheme="https://aiyingke.cn/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell 正则表达式</title>
    <link href="https://aiyingke.cn/blog/90b27957.html/"/>
    <id>https://aiyingke.cn/blog/90b27957.html/</id>
    <published>2022-12-11T14:22:31.000Z</published>
    <updated>2022-12-11T15:05:07.854Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：概述"><a href="#一：概述" class="headerlink" title="一：概述"></a>一：概述</h1><ul><li>正则表达式使用单个字符串来描述、匹配一系列符合某个语法规则的字符串。</li><li>通常被用来检索、替换那些符合某个模式的文本。</li><li>在 Linux 中，grep， sed，awk 等文本处理工具都支持通过正则表达式进行模式匹配。</li></ul><h1 id="二：常规匹配"><a href="#二：常规匹配" class="headerlink" title="二：常规匹配"></a>二：常规匹配</h1><p>一串不包含特殊字符的正则表达式匹配自身；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">匹配所有包含 ghost 的行</span></span><br><span class="line">[root@hadoop100 ~]# cat /etc/passwd | grep ghost</span><br><span class="line">ghost:x:1000:1000:ghost:/home/ghost:/bin/bash</span><br></pre></td></tr></table></figure><h1 id="三：常用特殊字符"><a href="#三：常用特殊字符" class="headerlink" title="三：常用特殊字符"></a>三：常用特殊字符</h1><h2 id="（1）特殊字符："><a href="#（1）特殊字符：" class="headerlink" title="（1）特殊字符：^"></a>（1）特殊字符：^</h2><ul><li>^ 匹配一行的开头</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">匹配所有以a开头的行</span></span><br><span class="line">[root@hadoop100 ~]# cat /etc/passwd | grep ^a</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">abrt:x:173:173::/etc/abrt:/sbin/nologin</span><br><span class="line">avahi:x:70:70:Avahi mDNS/DNS-SD Stack:/var/run/avahi-daemon:/sbin/nologin</span><br></pre></td></tr></table></figure><h2 id="（2）特殊字符："><a href="#（2）特殊字符：" class="headerlink" title="（2）特殊字符：$"></a>（2）特殊字符：$</h2><ul><li>$ 匹配一行的结束</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">匹配以 bash 结尾的行</span></span><br><span class="line">[root@hadoop100 ~]# cat /etc/passwd | grep bash$</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">ghost:x:1000:1000:ghost:/home/ghost:/bin/bash</span><br></pre></td></tr></table></figure><ul><li>^$ 匹配什么？</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">匹配出 initial-setup-ks.cfg 中的空行，并显示行号</span></span><br><span class="line">[root@hadoop100 ~]# cat initial-setup-ks.cfg | grep -n ^$</span><br><span class="line">20:</span><br><span class="line">25:</span><br><span class="line">39:</span><br><span class="line">60:</span><br><span class="line">62:</span><br><span class="line">65:</span><br></pre></td></tr></table></figure><h2 id="（3）特殊字符："><a href="#（3）特殊字符：" class="headerlink" title="（3）特殊字符：."></a>（3）特殊字符：.</h2><ul><li>. 匹配一个任意的字符</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 ~]# cat /etc/passwd | grep b..h</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">chrony:x:992:987::/var/lib/chrony:/sbin/nologin</span><br><span class="line">ghost:x:1000:1000:ghost:/home/ghost:/bin/bash</span><br></pre></td></tr></table></figure><h2 id="（4）特殊字符："><a href="#（4）特殊字符：" class="headerlink" title="（4）特殊字符：*"></a>（4）特殊字符：*</h2><ul><li>* 不单独使用，他和上一个字符连用，表示匹配上一个字符 0 次或多次</li><li>匹配到：rt、rot、root、rooot…的所有行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 ~]# cat /etc/passwd | grep ro*t</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">abrt:x:173:173::/etc/abrt:/sbin/nologin</span><br><span class="line">rtkit:x:172:172:RealtimeKit:/proc:/sbin/nologin</span><br></pre></td></tr></table></figure><ul><li>.* 匹配什么？</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">g开头t结尾，中间是任意字符出现任意次</span></span><br><span class="line">[root@hadoop100 ~]# cat /etc/passwd | grep g.*t</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">libstoragemgmt:x:998:995:daemon account for libstoragemgmt:/var/run/lsm:/sbin/nologin</span><br><span class="line">gluster:x:995:992:GlusterFS daemons:/run/gluster:/sbin/nologin</span><br><span class="line">tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin</span><br><span class="line">gnome-initial-setup:x:988:982::/run/gnome-initial-setup/:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">ghost:x:1000:1000:ghost:/home/ghost:/bin/bash</span><br></pre></td></tr></table></figure><h2 id="（5）字符区间（中括号）："><a href="#（5）字符区间（中括号）：" class="headerlink" title="（5）字符区间（中括号）：[ ]"></a>（5）字符区间（中括号）：[ ]</h2><ul><li>表示匹配某个范围内的一个字符，例如 [6,8]——匹配 6 或者 8 </li><li>[0-9]  ——匹配一个 0-9 的数字 </li><li>[0-9]* ——匹配任意长度的数字字符串</li><li>[a-z]   ——匹配一个 a-z 之间的字符</li><li>[a-z]*  ——匹配任意长度的字母字符串 </li><li>[a-c, e-f] ——匹配 a-c 或者 e-f 之间的任意字</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">匹配手机号（虚构号码）</span></span><br><span class="line">[root@hadoop100 ~]# echo 18888888888 | grep -E  ^1[3456789][0-9]&#123;9&#125;$</span><br><span class="line">18888888888</span><br></pre></td></tr></table></figure><h2 id="（6）特殊字符："><a href="#（6）特殊字符：" class="headerlink" title="（6）特殊字符：\"></a>（6）特殊字符：\</h2><ul><li>\ 表示转义，并不会单独使用。</li><li>由于所有特殊字符都有其特定匹配模式，当我们想匹配 某一特殊字符本身时（例如，我想找出所有包含 ‘$’ 的行），就会碰到困难。此时我们就要 将转义字符和特殊字符连用，来表示特殊字符本身；</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 shell]# cat diff.sh | grep &#x27;\$&#x27;</span><br><span class="line">echo &#x27;=== $*  ===&#x27;</span><br><span class="line">for i in &quot;$*&quot;</span><br><span class="line">echo &quot;letter is $i&quot;</span><br><span class="line">echo &#x27;=== $@  ===&#x27;</span><br><span class="line">for i in &quot;$@&quot;</span><br><span class="line">echo &quot;letter is $i&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：概述&quot;&gt;&lt;a href=&quot;#一：概述&quot; class=&quot;headerlink&quot; title=&quot;一：概述&quot;&gt;&lt;/a&gt;一：概述&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;正则表达式使用单个字符串来描述、匹配一系列符合某个语法规则的字符串。&lt;/li&gt;
&lt;li&gt;通常被用来检索、替换那些</summary>
      
    
    
    
    <category term="Shell" scheme="https://aiyingke.cn/categories/Shell/"/>
    
    
    <category term="Shell" scheme="https://aiyingke.cn/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell 函数</title>
    <link href="https://aiyingke.cn/blog/df281937.html/"/>
    <id>https://aiyingke.cn/blog/df281937.html/</id>
    <published>2022-12-11T13:38:18.000Z</published>
    <updated>2022-12-11T13:54:25.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一：系统函数"><a href="#一：系统函数" class="headerlink" title="一：系统函数"></a>一：系统函数</h1><h2 id="1-1-basename"><a href="#1-1-basename" class="headerlink" title="1.1 basename"></a>1.1 basename</h2><h3 id="（1）基本语法"><a href="#（1）基本语法" class="headerlink" title="（1）基本语法"></a>（1）基本语法</h3><ul><li><p>basename [string &#x2F; pathname] [suffix]</p></li><li><p>basename 命令会删掉所有的前缀包括最后一个（‘&#x2F;’）字符，然后将字符串显示出来。</p></li><li><p>basename 可以理解为取路径里的文件名称</p></li><li><p>选项</p><ul><li>suffix 为后缀，如果 suffix 被指定了，basename 会将 pathname 或 string 中的 suffix 去掉。</li></ul></li></ul><h3 id="（2）案例实操"><a href="#（2）案例实操" class="headerlink" title="（2）案例实操"></a>（2）案例实操</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 shell]# basename /root/RupertTears/shell/parameter.sh </span><br><span class="line">parameter.sh</span><br><span class="line">[root@hadoop100 shell]# basename /root/RupertTears/shell/parameter.sh .sh</span><br><span class="line">parameter</span><br></pre></td></tr></table></figure><h2 id="1-2-dirname"><a href="#1-2-dirname" class="headerlink" title="1.2 dirname"></a>1.2 dirname</h2><h3 id="（1）基本语法-1"><a href="#（1）基本语法-1" class="headerlink" title="（1）基本语法"></a>（1）基本语法</h3><ul><li>dirname 文件绝对路径</li><li>从给定的包含绝对路径的文件名中去除文件名 （非目录的部分），然后返回剩下的路径（目录的部分）</li><li>dirname 可以理解为取文件路径的绝对路径名称</li></ul><h3 id="（2）案例实操-1"><a href="#（2）案例实操-1" class="headerlink" title="（2）案例实操"></a>（2）案例实操</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 shell]# dirname /root/RupertTears/shell/parameter.sh </span><br><span class="line">/root/RupertTears/shell</span><br></pre></td></tr></table></figure><h1 id="二：自定义函数"><a href="#二：自定义函数" class="headerlink" title="二：自定义函数"></a>二：自定义函数</h1><h2 id="2-1-基本语法"><a href="#2-1-基本语法" class="headerlink" title="2.1 基本语法"></a>2.1 基本语法</h2><p>其中 [ ] 表示的内容可以省略；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ function ] funname[()]</span><br><span class="line">&#123;</span><br><span class="line">Action;</span><br><span class="line">[return int;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-经验汇总"><a href="#2-2-经验汇总" class="headerlink" title="2.2 经验汇总"></a>2.2 经验汇总</h2><ol><li>必须在调用函数地方之前，先声明函数，shell 脚本是逐行运行。</li><li>函数返回值，只能通过$?系统变量获得，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。return 后跟数值 n(0-255)；</li><li>若想接收返回值的结果，可以 echo 结果，用 $( ) 接收到结果；</li></ol><h2 id="2-3-案例实操"><a href="#2-3-案例实操" class="headerlink" title="2.3 案例实操"></a>2.3 案例实操</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop100 shell]# cat fun.sh </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">function add()&#123;</span><br><span class="line">s=$[$1+$2]</span><br><span class="line">echo $s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read -p &quot;请输入第一个参数：&quot; a</span><br><span class="line">read -p &quot;请输入第二个参数：&quot; b</span><br><span class="line"></span><br><span class="line">sum=$(add $a $b)</span><br><span class="line">echo &quot;两数之和为：&quot;$sum</span><br><span class="line"></span><br><span class="line">[root@hadoop100 shell]# ./fun.sh </span><br><span class="line">请输入第一个参数：110</span><br><span class="line">请输入第二个参数：300</span><br><span class="line">两数之和为：410</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一：系统函数&quot;&gt;&lt;a href=&quot;#一：系统函数&quot; class=&quot;headerlink&quot; title=&quot;一：系统函数&quot;&gt;&lt;/a&gt;一：系统函数&lt;/h1&gt;&lt;h2 id=&quot;1-1-basename&quot;&gt;&lt;a href=&quot;#1-1-basename&quot; class=&quot;head</summary>
      
    
    
    
    <category term="Shell" scheme="https://aiyingke.cn/categories/Shell/"/>
    
    
    <category term="Shell" scheme="https://aiyingke.cn/tags/Shell/"/>
    
  </entry>
  
</feed>
